// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/eldritch/scifirpg/proto/prerequisites.proto

package com.eldritch.invoken.proto;

public final class Prerequisites {
  private Prerequisites() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code scifirpg.Standing}
   */
  public enum Standing
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALLY = 0;</code>
     */
    ALLY(0, 0),
    /**
     * <code>NEUTRAL = 1;</code>
     */
    NEUTRAL(1, 1),
    /**
     * <code>ENEMY = 2;</code>
     */
    ENEMY(2, 2),
    ;

    /**
     * <code>ALLY = 0;</code>
     */
    public static final int ALLY_VALUE = 0;
    /**
     * <code>NEUTRAL = 1;</code>
     */
    public static final int NEUTRAL_VALUE = 1;
    /**
     * <code>ENEMY = 2;</code>
     */
    public static final int ENEMY_VALUE = 2;


    public final int getNumber() { return value; }

    public static Standing valueOf(int value) {
      switch (value) {
        case 0: return ALLY;
        case 1: return NEUTRAL;
        case 2: return ENEMY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Standing>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Standing>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Standing>() {
            public Standing findValueByNumber(int number) {
              return Standing.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.eldritch.invoken.proto.Prerequisites.getDescriptor().getEnumTypes().get(0);
    }

    private static final Standing[] VALUES = values();

    public static Standing valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Standing(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:scifirpg.Standing)
  }

  public interface PrerequisiteOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .scifirpg.Prerequisite.Type type = 1;
    /**
     * <code>required .scifirpg.Prerequisite.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .scifirpg.Prerequisite.Type type = 1;</code>
     */
    com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type getType();

    // optional string target = 2;
    /**
     * <code>optional string target = 2;</code>
     */
    boolean hasTarget();
    /**
     * <code>optional string target = 2;</code>
     */
    java.lang.String getTarget();
    /**
     * <code>optional string target = 2;</code>
     */
    com.google.protobuf.ByteString
        getTargetBytes();

    // optional int32 min = 3;
    /**
     * <code>optional int32 min = 3;</code>
     */
    boolean hasMin();
    /**
     * <code>optional int32 min = 3;</code>
     */
    int getMin();

    // optional int32 max = 4;
    /**
     * <code>optional int32 max = 4;</code>
     */
    boolean hasMax();
    /**
     * <code>optional int32 max = 4;</code>
     */
    int getMax();

    // optional bool not = 5 [default = false];
    /**
     * <code>optional bool not = 5 [default = false];</code>
     *
     * <pre>
     * Negate the condition, so that it must NOT be satisfied
     * </pre>
     */
    boolean hasNot();
    /**
     * <code>optional bool not = 5 [default = false];</code>
     *
     * <pre>
     * Negate the condition, so that it must NOT be satisfied
     * </pre>
     */
    boolean getNot();
  }
  /**
   * Protobuf type {@code scifirpg.Prerequisite}
   */
  public static final class Prerequisite extends
      com.google.protobuf.GeneratedMessage
      implements PrerequisiteOrBuilder {
    // Use Prerequisite.newBuilder() to construct.
    private Prerequisite(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Prerequisite(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Prerequisite defaultInstance;
    public static Prerequisite getDefaultInstance() {
      return defaultInstance;
    }

    public Prerequisite getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Prerequisite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type value = com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              target_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              min_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              max_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              not_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldritch.invoken.proto.Prerequisites.internal_static_scifirpg_Prerequisite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldritch.invoken.proto.Prerequisites.internal_static_scifirpg_Prerequisite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldritch.invoken.proto.Prerequisites.Prerequisite.class, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder.class);
    }

    public static com.google.protobuf.Parser<Prerequisite> PARSER =
        new com.google.protobuf.AbstractParser<Prerequisite>() {
      public Prerequisite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Prerequisite(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Prerequisite> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code scifirpg.Prerequisite.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DISCIPLINE_BETWEEN = 0;</code>
       *
       * <pre>
       * TARGET attribute between MIN and MAX
       * </pre>
       */
      DISCIPLINE_BETWEEN(0, 0),
      /**
       * <code>REP_BETWEEN = 1;</code>
       *
       * <pre>
       * TARGET faction reputation between MIN and MAX
       * </pre>
       */
      REP_BETWEEN(1, 1),
      /**
       * <code>RANK_BETWEEN = 9;</code>
       *
       * <pre>
       * TARGET faction rank between MIN and MAX
       * </pre>
       */
      RANK_BETWEEN(2, 9),
      /**
       * <code>LVL_BETWEEN = 2;</code>
       *
       * <pre>
       * player level between MIN and MAX
       * </pre>
       */
      LVL_BETWEEN(3, 2),
      /**
       * <code>STATE_MARKER = 3;</code>
       *
       * <pre>
       * TARGET state marker in list
       * </pre>
       */
      STATE_MARKER(4, 3),
      /**
       * <code>ITEM_HAS = 4;</code>
       *
       * <pre>
       * MIN or more of TARGET item in inventory
       * </pre>
       */
      ITEM_HAS(5, 4),
      /**
       * <code>AUG_AVAILABLE = 5;</code>
       *
       * <pre>
       * When AUG_REMAINING is a prereq, the game automatically expends the aug
       * </pre>
       */
      AUG_AVAILABLE(6, 5),
      /**
       * <code>INFLUENCE_AUG = 11;</code>
       *
       * <pre>
       * Has an influence aug of TARGET type in cache
       * </pre>
       */
      INFLUENCE_AUG(7, 11),
      /**
       * <code>DIALOGUE_SEEN = 6;</code>
       *
       * <pre>
       * Only has meaning within a specific DialogueTree.
       * </pre>
       */
      DIALOGUE_SEEN(8, 6),
      /**
       * <code>INFLUENCE_BETWEEN = 7;</code>
       *
       * <pre>
       * Dialogue disposition variable between MIN and MAX
       * </pre>
       */
      INFLUENCE_BETWEEN(9, 7),
      /**
       * <code>STANDING_IS = 12;</code>
       *
       * <pre>
       * TARGET standing
       * </pre>
       */
      STANDING_IS(10, 12),
      /**
       * <code>ITEM_EQUIPPED = 8;</code>
       *
       * <pre>
       * TARGET item is currently equipped
       * </pre>
       */
      ITEM_EQUIPPED(11, 8),
      /**
       * <code>MISSION_STAGE = 10;</code>
       *
       * <pre>
       * TARGET mission between MIN and MAX
       * </pre>
       */
      MISSION_STAGE(12, 10),
      /**
       * <code>ALIVE = 13;</code>
       *
       * <pre>
       * TARGET actor is alive
       * </pre>
       */
      ALIVE(13, 13),
      /**
       * <code>FOLLOWER = 14;</code>
       *
       * <pre>
       * TARGET actor is following player
       * </pre>
       */
      FOLLOWER(14, 14),
      ;

      /**
       * <code>DISCIPLINE_BETWEEN = 0;</code>
       *
       * <pre>
       * TARGET attribute between MIN and MAX
       * </pre>
       */
      public static final int DISCIPLINE_BETWEEN_VALUE = 0;
      /**
       * <code>REP_BETWEEN = 1;</code>
       *
       * <pre>
       * TARGET faction reputation between MIN and MAX
       * </pre>
       */
      public static final int REP_BETWEEN_VALUE = 1;
      /**
       * <code>RANK_BETWEEN = 9;</code>
       *
       * <pre>
       * TARGET faction rank between MIN and MAX
       * </pre>
       */
      public static final int RANK_BETWEEN_VALUE = 9;
      /**
       * <code>LVL_BETWEEN = 2;</code>
       *
       * <pre>
       * player level between MIN and MAX
       * </pre>
       */
      public static final int LVL_BETWEEN_VALUE = 2;
      /**
       * <code>STATE_MARKER = 3;</code>
       *
       * <pre>
       * TARGET state marker in list
       * </pre>
       */
      public static final int STATE_MARKER_VALUE = 3;
      /**
       * <code>ITEM_HAS = 4;</code>
       *
       * <pre>
       * MIN or more of TARGET item in inventory
       * </pre>
       */
      public static final int ITEM_HAS_VALUE = 4;
      /**
       * <code>AUG_AVAILABLE = 5;</code>
       *
       * <pre>
       * When AUG_REMAINING is a prereq, the game automatically expends the aug
       * </pre>
       */
      public static final int AUG_AVAILABLE_VALUE = 5;
      /**
       * <code>INFLUENCE_AUG = 11;</code>
       *
       * <pre>
       * Has an influence aug of TARGET type in cache
       * </pre>
       */
      public static final int INFLUENCE_AUG_VALUE = 11;
      /**
       * <code>DIALOGUE_SEEN = 6;</code>
       *
       * <pre>
       * Only has meaning within a specific DialogueTree.
       * </pre>
       */
      public static final int DIALOGUE_SEEN_VALUE = 6;
      /**
       * <code>INFLUENCE_BETWEEN = 7;</code>
       *
       * <pre>
       * Dialogue disposition variable between MIN and MAX
       * </pre>
       */
      public static final int INFLUENCE_BETWEEN_VALUE = 7;
      /**
       * <code>STANDING_IS = 12;</code>
       *
       * <pre>
       * TARGET standing
       * </pre>
       */
      public static final int STANDING_IS_VALUE = 12;
      /**
       * <code>ITEM_EQUIPPED = 8;</code>
       *
       * <pre>
       * TARGET item is currently equipped
       * </pre>
       */
      public static final int ITEM_EQUIPPED_VALUE = 8;
      /**
       * <code>MISSION_STAGE = 10;</code>
       *
       * <pre>
       * TARGET mission between MIN and MAX
       * </pre>
       */
      public static final int MISSION_STAGE_VALUE = 10;
      /**
       * <code>ALIVE = 13;</code>
       *
       * <pre>
       * TARGET actor is alive
       * </pre>
       */
      public static final int ALIVE_VALUE = 13;
      /**
       * <code>FOLLOWER = 14;</code>
       *
       * <pre>
       * TARGET actor is following player
       * </pre>
       */
      public static final int FOLLOWER_VALUE = 14;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return DISCIPLINE_BETWEEN;
          case 1: return REP_BETWEEN;
          case 9: return RANK_BETWEEN;
          case 2: return LVL_BETWEEN;
          case 3: return STATE_MARKER;
          case 4: return ITEM_HAS;
          case 5: return AUG_AVAILABLE;
          case 11: return INFLUENCE_AUG;
          case 6: return DIALOGUE_SEEN;
          case 7: return INFLUENCE_BETWEEN;
          case 12: return STANDING_IS;
          case 8: return ITEM_EQUIPPED;
          case 10: return MISSION_STAGE;
          case 13: return ALIVE;
          case 14: return FOLLOWER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Prerequisites.Prerequisite.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:scifirpg.Prerequisite.Type)
    }

    private int bitField0_;
    // required .scifirpg.Prerequisite.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type type_;
    /**
     * <code>required .scifirpg.Prerequisite.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .scifirpg.Prerequisite.Type type = 1;</code>
     */
    public com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type getType() {
      return type_;
    }

    // optional string target = 2;
    public static final int TARGET_FIELD_NUMBER = 2;
    private java.lang.Object target_;
    /**
     * <code>optional string target = 2;</code>
     */
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string target = 2;</code>
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string target = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 min = 3;
    public static final int MIN_FIELD_NUMBER = 3;
    private int min_;
    /**
     * <code>optional int32 min = 3;</code>
     */
    public boolean hasMin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 min = 3;</code>
     */
    public int getMin() {
      return min_;
    }

    // optional int32 max = 4;
    public static final int MAX_FIELD_NUMBER = 4;
    private int max_;
    /**
     * <code>optional int32 max = 4;</code>
     */
    public boolean hasMax() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 max = 4;</code>
     */
    public int getMax() {
      return max_;
    }

    // optional bool not = 5 [default = false];
    public static final int NOT_FIELD_NUMBER = 5;
    private boolean not_;
    /**
     * <code>optional bool not = 5 [default = false];</code>
     *
     * <pre>
     * Negate the condition, so that it must NOT be satisfied
     * </pre>
     */
    public boolean hasNot() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool not = 5 [default = false];</code>
     *
     * <pre>
     * Negate the condition, so that it must NOT be satisfied
     * </pre>
     */
    public boolean getNot() {
      return not_;
    }

    private void initFields() {
      type_ = com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type.DISCIPLINE_BETWEEN;
      target_ = "";
      min_ = 0;
      max_ = 0;
      not_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTargetBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, min_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, max_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, not_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTargetBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, min_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, max_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, not_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Prerequisites.Prerequisite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eldritch.invoken.proto.Prerequisites.Prerequisite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code scifirpg.Prerequisite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Prerequisites.internal_static_scifirpg_Prerequisite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Prerequisites.internal_static_scifirpg_Prerequisite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Prerequisites.Prerequisite.class, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder.class);
      }

      // Construct using com.eldritch.scifirpg.proto.Prerequisites.Prerequisite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type.DISCIPLINE_BETWEEN;
        bitField0_ = (bitField0_ & ~0x00000001);
        target_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        min_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        max_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        not_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldritch.invoken.proto.Prerequisites.internal_static_scifirpg_Prerequisite_descriptor;
      }

      public com.eldritch.invoken.proto.Prerequisites.Prerequisite getDefaultInstanceForType() {
        return com.eldritch.invoken.proto.Prerequisites.Prerequisite.getDefaultInstance();
      }

      public com.eldritch.invoken.proto.Prerequisites.Prerequisite build() {
        com.eldritch.invoken.proto.Prerequisites.Prerequisite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldritch.invoken.proto.Prerequisites.Prerequisite buildPartial() {
        com.eldritch.invoken.proto.Prerequisites.Prerequisite result = new com.eldritch.invoken.proto.Prerequisites.Prerequisite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.target_ = target_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.min_ = min_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.max_ = max_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.not_ = not_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldritch.invoken.proto.Prerequisites.Prerequisite) {
          return mergeFrom((com.eldritch.invoken.proto.Prerequisites.Prerequisite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldritch.invoken.proto.Prerequisites.Prerequisite other) {
        if (other == com.eldritch.invoken.proto.Prerequisites.Prerequisite.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTarget()) {
          bitField0_ |= 0x00000002;
          target_ = other.target_;
          onChanged();
        }
        if (other.hasMin()) {
          setMin(other.getMin());
        }
        if (other.hasMax()) {
          setMax(other.getMax());
        }
        if (other.hasNot()) {
          setNot(other.getNot());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldritch.invoken.proto.Prerequisites.Prerequisite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldritch.invoken.proto.Prerequisites.Prerequisite) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .scifirpg.Prerequisite.Type type = 1;
      private com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type type_ = com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type.DISCIPLINE_BETWEEN;
      /**
       * <code>required .scifirpg.Prerequisite.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .scifirpg.Prerequisite.Type type = 1;</code>
       */
      public com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type getType() {
        return type_;
      }
      /**
       * <code>required .scifirpg.Prerequisite.Type type = 1;</code>
       */
      public Builder setType(com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .scifirpg.Prerequisite.Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.eldritch.invoken.proto.Prerequisites.Prerequisite.Type.DISCIPLINE_BETWEEN;
        onChanged();
        return this;
      }

      // optional string target = 2;
      private java.lang.Object target_ = "";
      /**
       * <code>optional string target = 2;</code>
       */
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string target = 2;</code>
       */
      public java.lang.String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          target_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string target = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTargetBytes() {
        java.lang.Object ref = target_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          target_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string target = 2;</code>
       */
      public Builder setTarget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string target = 2;</code>
       */
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000002);
        target_ = getDefaultInstance().getTarget();
        onChanged();
        return this;
      }
      /**
       * <code>optional string target = 2;</code>
       */
      public Builder setTargetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        target_ = value;
        onChanged();
        return this;
      }

      // optional int32 min = 3;
      private int min_ ;
      /**
       * <code>optional int32 min = 3;</code>
       */
      public boolean hasMin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 min = 3;</code>
       */
      public int getMin() {
        return min_;
      }
      /**
       * <code>optional int32 min = 3;</code>
       */
      public Builder setMin(int value) {
        bitField0_ |= 0x00000004;
        min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min = 3;</code>
       */
      public Builder clearMin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        min_ = 0;
        onChanged();
        return this;
      }

      // optional int32 max = 4;
      private int max_ ;
      /**
       * <code>optional int32 max = 4;</code>
       */
      public boolean hasMax() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 max = 4;</code>
       */
      public int getMax() {
        return max_;
      }
      /**
       * <code>optional int32 max = 4;</code>
       */
      public Builder setMax(int value) {
        bitField0_ |= 0x00000008;
        max_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max = 4;</code>
       */
      public Builder clearMax() {
        bitField0_ = (bitField0_ & ~0x00000008);
        max_ = 0;
        onChanged();
        return this;
      }

      // optional bool not = 5 [default = false];
      private boolean not_ ;
      /**
       * <code>optional bool not = 5 [default = false];</code>
       *
       * <pre>
       * Negate the condition, so that it must NOT be satisfied
       * </pre>
       */
      public boolean hasNot() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool not = 5 [default = false];</code>
       *
       * <pre>
       * Negate the condition, so that it must NOT be satisfied
       * </pre>
       */
      public boolean getNot() {
        return not_;
      }
      /**
       * <code>optional bool not = 5 [default = false];</code>
       *
       * <pre>
       * Negate the condition, so that it must NOT be satisfied
       * </pre>
       */
      public Builder setNot(boolean value) {
        bitField0_ |= 0x00000010;
        not_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool not = 5 [default = false];</code>
       *
       * <pre>
       * Negate the condition, so that it must NOT be satisfied
       * </pre>
       */
      public Builder clearNot() {
        bitField0_ = (bitField0_ & ~0x00000010);
        not_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:scifirpg.Prerequisite)
    }

    static {
      defaultInstance = new Prerequisite(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scifirpg.Prerequisite)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_Prerequisite_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_Prerequisite_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/com/eldritch/scifirpg/proto/prerequisi" +
      "tes.proto\022\010scifirpg\"\214\003\n\014Prerequisite\022)\n\004" +
      "type\030\001 \002(\0162\033.scifirpg.Prerequisite.Type\022" +
      "\016\n\006target\030\002 \001(\t\022\013\n\003min\030\003 \001(\005\022\013\n\003max\030\004 \001(" +
      "\005\022\022\n\003not\030\005 \001(\010:\005false\"\222\002\n\004Type\022\026\n\022DISCIP" +
      "LINE_BETWEEN\020\000\022\017\n\013REP_BETWEEN\020\001\022\020\n\014RANK_" +
      "BETWEEN\020\t\022\017\n\013LVL_BETWEEN\020\002\022\020\n\014STATE_MARK" +
      "ER\020\003\022\014\n\010ITEM_HAS\020\004\022\021\n\rAUG_AVAILABLE\020\005\022\021\n" +
      "\rINFLUENCE_AUG\020\013\022\021\n\rDIALOGUE_SEEN\020\006\022\025\n\021I" +
      "NFLUENCE_BETWEEN\020\007\022\017\n\013STANDING_IS\020\014\022\021\n\rI",
      "TEM_EQUIPPED\020\010\022\021\n\rMISSION_STAGE\020\n\022\t\n\005ALI" +
      "VE\020\r\022\014\n\010FOLLOWER\020\016*,\n\010Standing\022\010\n\004ALLY\020\000" +
      "\022\013\n\007NEUTRAL\020\001\022\t\n\005ENEMY\020\002B\035\n\033com.eldritch" +
      ".scifirpg.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_scifirpg_Prerequisite_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_scifirpg_Prerequisite_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_Prerequisite_descriptor,
              new java.lang.String[] { "Type", "Target", "Min", "Max", "Not", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
