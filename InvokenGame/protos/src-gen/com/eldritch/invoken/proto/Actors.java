// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/eldritch/invoken/proto/actors.proto

package com.eldritch.invoken.proto;

public final class Actors {
  private Actors() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DialogueTreeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .scifirpg.DialogueTree.Response dialogue = 1;
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Response> 
        getDialogueList();
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    com.eldritch.invoken.proto.Actors.DialogueTree.Response getDialogue(int index);
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    int getDialogueCount();
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder> 
        getDialogueOrBuilderList();
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder getDialogueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code scifirpg.DialogueTree}
   */
  public static final class DialogueTree extends
      com.google.protobuf.GeneratedMessage
      implements DialogueTreeOrBuilder {
    // Use DialogueTree.newBuilder() to construct.
    private DialogueTree(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DialogueTree(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DialogueTree defaultInstance;
    public static DialogueTree getDefaultInstance() {
      return defaultInstance;
    }

    public DialogueTree getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DialogueTree(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dialogue_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.DialogueTree.Response>();
                mutable_bitField0_ |= 0x00000001;
              }
              dialogue_.add(input.readMessage(com.eldritch.invoken.proto.Actors.DialogueTree.Response.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dialogue_ = java.util.Collections.unmodifiableList(dialogue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldritch.invoken.proto.Actors.DialogueTree.class, com.eldritch.invoken.proto.Actors.DialogueTree.Builder.class);
    }

    public static com.google.protobuf.Parser<DialogueTree> PARSER =
        new com.google.protobuf.AbstractParser<DialogueTree>() {
      public DialogueTree parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DialogueTree(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DialogueTree> getParserForType() {
      return PARSER;
    }

    public interface ResponseOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string id = 1;
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * The unique ID for this Response within this tree
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * The unique ID for this Response within this tree
       * </pre>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * The unique ID for this Response within this tree
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      // required string text = 2;
      /**
       * <code>required string text = 2;</code>
       */
      boolean hasText();
      /**
       * <code>required string text = 2;</code>
       */
      java.lang.String getText();
      /**
       * <code>required string text = 2;</code>
       */
      com.google.protobuf.ByteString
          getTextBytes();

      // repeated .scifirpg.Prerequisite prereq = 3;
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> 
          getPrereqList();
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      com.eldritch.invoken.proto.Prerequisites.Prerequisite getPrereq(int index);
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      int getPrereqCount();
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      java.util.List<? extends com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> 
          getPrereqOrBuilderList();
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder getPrereqOrBuilder(
          int index);

      // repeated .scifirpg.DialogueTree.Choice choice = 4;
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Choice> 
          getChoiceList();
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      com.eldritch.invoken.proto.Actors.DialogueTree.Choice getChoice(int index);
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      int getChoiceCount();
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      java.util.List<? extends com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder> 
          getChoiceOrBuilderList();
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder getChoiceOrBuilder(
          int index);

      // repeated .scifirpg.Outcome outcome = 5;
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      java.util.List<com.eldritch.invoken.proto.Outcomes.Outcome> 
          getOutcomeList();
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      com.eldritch.invoken.proto.Outcomes.Outcome getOutcome(int index);
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      int getOutcomeCount();
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      java.util.List<? extends com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder> 
          getOutcomeOrBuilderList();
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder getOutcomeOrBuilder(
          int index);

      // required bool greeting = 6 [default = false];
      /**
       * <code>required bool greeting = 6 [default = false];</code>
       */
      boolean hasGreeting();
      /**
       * <code>required bool greeting = 6 [default = false];</code>
       */
      boolean getGreeting();

      // optional int32 weight = 7 [default = 0];
      /**
       * <code>optional int32 weight = 7 [default = 0];</code>
       *
       * <pre>
       * Defines the order responses are traversed for finding one that meets prereqs.
       * Higher weights drop down, lower weights bubble up.
       * </pre>
       */
      boolean hasWeight();
      /**
       * <code>optional int32 weight = 7 [default = 0];</code>
       *
       * <pre>
       * Defines the order responses are traversed for finding one that meets prereqs.
       * Higher weights drop down, lower weights bubble up.
       * </pre>
       */
      int getWeight();
    }
    /**
     * Protobuf type {@code scifirpg.DialogueTree.Response}
     *
     * <pre>
     * DialogueTree ends when the player reaches a Response with no choices.
     * When the DialogueTree ends, the player is returned to the first valid greeting.
     * </pre>
     */
    public static final class Response extends
        com.google.protobuf.GeneratedMessage
        implements ResponseOrBuilder {
      // Use Response.newBuilder() to construct.
      private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Response defaultInstance;
      public static Response getDefaultInstance() {
        return defaultInstance;
      }

      public Response getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Response(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                id_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                text_ = input.readBytes();
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  prereq_ = new java.util.ArrayList<com.eldritch.invoken.proto.Prerequisites.Prerequisite>();
                  mutable_bitField0_ |= 0x00000004;
                }
                prereq_.add(input.readMessage(com.eldritch.invoken.proto.Prerequisites.Prerequisite.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  choice_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.DialogueTree.Choice>();
                  mutable_bitField0_ |= 0x00000008;
                }
                choice_.add(input.readMessage(com.eldritch.invoken.proto.Actors.DialogueTree.Choice.PARSER, extensionRegistry));
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  outcome_ = new java.util.ArrayList<com.eldritch.invoken.proto.Outcomes.Outcome>();
                  mutable_bitField0_ |= 0x00000010;
                }
                outcome_.add(input.readMessage(com.eldritch.invoken.proto.Outcomes.Outcome.PARSER, extensionRegistry));
                break;
              }
              case 48: {
                bitField0_ |= 0x00000004;
                greeting_ = input.readBool();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000008;
                weight_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            prereq_ = java.util.Collections.unmodifiableList(prereq_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            choice_ = java.util.Collections.unmodifiableList(choice_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            outcome_ = java.util.Collections.unmodifiableList(outcome_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.DialogueTree.Response.class, com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder.class);
      }

      public static com.google.protobuf.Parser<Response> PARSER =
          new com.google.protobuf.AbstractParser<Response>() {
        public Response parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Response> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private java.lang.Object id_;
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * The unique ID for this Response within this tree
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * The unique ID for this Response within this tree
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * The unique ID for this Response within this tree
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string text = 2;
      public static final int TEXT_FIELD_NUMBER = 2;
      private java.lang.Object text_;
      /**
       * <code>required string text = 2;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string text = 2;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string text = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated .scifirpg.Prerequisite prereq = 3;
      public static final int PREREQ_FIELD_NUMBER = 3;
      private java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> prereq_;
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> getPrereqList() {
        return prereq_;
      }
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> 
          getPrereqOrBuilderList() {
        return prereq_;
      }
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      public int getPrereqCount() {
        return prereq_.size();
      }
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      public com.eldritch.invoken.proto.Prerequisites.Prerequisite getPrereq(int index) {
        return prereq_.get(index);
      }
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
       */
      public com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder getPrereqOrBuilder(
          int index) {
        return prereq_.get(index);
      }

      // repeated .scifirpg.DialogueTree.Choice choice = 4;
      public static final int CHOICE_FIELD_NUMBER = 4;
      private java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Choice> choice_;
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Choice> getChoiceList() {
        return choice_;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder> 
          getChoiceOrBuilderList() {
        return choice_;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      public int getChoiceCount() {
        return choice_.size();
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree.Choice getChoice(int index) {
        return choice_.get(index);
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder getChoiceOrBuilder(
          int index) {
        return choice_.get(index);
      }

      // repeated .scifirpg.Outcome outcome = 5;
      public static final int OUTCOME_FIELD_NUMBER = 5;
      private java.util.List<com.eldritch.invoken.proto.Outcomes.Outcome> outcome_;
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Outcomes.Outcome> getOutcomeList() {
        return outcome_;
      }
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder> 
          getOutcomeOrBuilderList() {
        return outcome_;
      }
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      public int getOutcomeCount() {
        return outcome_.size();
      }
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      public com.eldritch.invoken.proto.Outcomes.Outcome getOutcome(int index) {
        return outcome_.get(index);
      }
      /**
       * <code>repeated .scifirpg.Outcome outcome = 5;</code>
       */
      public com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder getOutcomeOrBuilder(
          int index) {
        return outcome_.get(index);
      }

      // required bool greeting = 6 [default = false];
      public static final int GREETING_FIELD_NUMBER = 6;
      private boolean greeting_;
      /**
       * <code>required bool greeting = 6 [default = false];</code>
       */
      public boolean hasGreeting() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool greeting = 6 [default = false];</code>
       */
      public boolean getGreeting() {
        return greeting_;
      }

      // optional int32 weight = 7 [default = 0];
      public static final int WEIGHT_FIELD_NUMBER = 7;
      private int weight_;
      /**
       * <code>optional int32 weight = 7 [default = 0];</code>
       *
       * <pre>
       * Defines the order responses are traversed for finding one that meets prereqs.
       * Higher weights drop down, lower weights bubble up.
       * </pre>
       */
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 weight = 7 [default = 0];</code>
       *
       * <pre>
       * Defines the order responses are traversed for finding one that meets prereqs.
       * Higher weights drop down, lower weights bubble up.
       * </pre>
       */
      public int getWeight() {
        return weight_;
      }

      private void initFields() {
        id_ = "";
        text_ = "";
        prereq_ = java.util.Collections.emptyList();
        choice_ = java.util.Collections.emptyList();
        outcome_ = java.util.Collections.emptyList();
        greeting_ = false;
        weight_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasText()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasGreeting()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getPrereqCount(); i++) {
          if (!getPrereq(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getChoiceCount(); i++) {
          if (!getChoice(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getOutcomeCount(); i++) {
          if (!getOutcome(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getTextBytes());
        }
        for (int i = 0; i < prereq_.size(); i++) {
          output.writeMessage(3, prereq_.get(i));
        }
        for (int i = 0; i < choice_.size(); i++) {
          output.writeMessage(4, choice_.get(i));
        }
        for (int i = 0; i < outcome_.size(); i++) {
          output.writeMessage(5, outcome_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(6, greeting_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(7, weight_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getTextBytes());
        }
        for (int i = 0; i < prereq_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, prereq_.get(i));
        }
        for (int i = 0; i < choice_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, choice_.get(i));
        }
        for (int i = 0; i < outcome_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, outcome_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, greeting_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, weight_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Actors.DialogueTree.Response prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.DialogueTree.Response}
       *
       * <pre>
       * DialogueTree ends when the player reaches a Response with no choices.
       * When the DialogueTree ends, the player is returned to the first valid greeting.
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Response_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Response_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Actors.DialogueTree.Response.class, com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder.class);
        }

        // Construct using com.eldritch.invoken.proto.Actors.DialogueTree.Response.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPrereqFieldBuilder();
            getChoiceFieldBuilder();
            getOutcomeFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          text_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (prereqBuilder_ == null) {
            prereq_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            prereqBuilder_.clear();
          }
          if (choiceBuilder_ == null) {
            choice_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            choiceBuilder_.clear();
          }
          if (outcomeBuilder_ == null) {
            outcome_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            outcomeBuilder_.clear();
          }
          greeting_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          weight_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Response_descriptor;
        }

        public com.eldritch.invoken.proto.Actors.DialogueTree.Response getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Actors.DialogueTree.Response.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Actors.DialogueTree.Response build() {
          com.eldritch.invoken.proto.Actors.DialogueTree.Response result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Actors.DialogueTree.Response buildPartial() {
          com.eldritch.invoken.proto.Actors.DialogueTree.Response result = new com.eldritch.invoken.proto.Actors.DialogueTree.Response(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.text_ = text_;
          if (prereqBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              prereq_ = java.util.Collections.unmodifiableList(prereq_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.prereq_ = prereq_;
          } else {
            result.prereq_ = prereqBuilder_.build();
          }
          if (choiceBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              choice_ = java.util.Collections.unmodifiableList(choice_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.choice_ = choice_;
          } else {
            result.choice_ = choiceBuilder_.build();
          }
          if (outcomeBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              outcome_ = java.util.Collections.unmodifiableList(outcome_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.outcome_ = outcome_;
          } else {
            result.outcome_ = outcomeBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000004;
          }
          result.greeting_ = greeting_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000008;
          }
          result.weight_ = weight_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Actors.DialogueTree.Response) {
            return mergeFrom((com.eldritch.invoken.proto.Actors.DialogueTree.Response)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Actors.DialogueTree.Response other) {
          if (other == com.eldritch.invoken.proto.Actors.DialogueTree.Response.getDefaultInstance()) return this;
          if (other.hasId()) {
            bitField0_ |= 0x00000001;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasText()) {
            bitField0_ |= 0x00000002;
            text_ = other.text_;
            onChanged();
          }
          if (prereqBuilder_ == null) {
            if (!other.prereq_.isEmpty()) {
              if (prereq_.isEmpty()) {
                prereq_ = other.prereq_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensurePrereqIsMutable();
                prereq_.addAll(other.prereq_);
              }
              onChanged();
            }
          } else {
            if (!other.prereq_.isEmpty()) {
              if (prereqBuilder_.isEmpty()) {
                prereqBuilder_.dispose();
                prereqBuilder_ = null;
                prereq_ = other.prereq_;
                bitField0_ = (bitField0_ & ~0x00000004);
                prereqBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPrereqFieldBuilder() : null;
              } else {
                prereqBuilder_.addAllMessages(other.prereq_);
              }
            }
          }
          if (choiceBuilder_ == null) {
            if (!other.choice_.isEmpty()) {
              if (choice_.isEmpty()) {
                choice_ = other.choice_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureChoiceIsMutable();
                choice_.addAll(other.choice_);
              }
              onChanged();
            }
          } else {
            if (!other.choice_.isEmpty()) {
              if (choiceBuilder_.isEmpty()) {
                choiceBuilder_.dispose();
                choiceBuilder_ = null;
                choice_ = other.choice_;
                bitField0_ = (bitField0_ & ~0x00000008);
                choiceBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getChoiceFieldBuilder() : null;
              } else {
                choiceBuilder_.addAllMessages(other.choice_);
              }
            }
          }
          if (outcomeBuilder_ == null) {
            if (!other.outcome_.isEmpty()) {
              if (outcome_.isEmpty()) {
                outcome_ = other.outcome_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureOutcomeIsMutable();
                outcome_.addAll(other.outcome_);
              }
              onChanged();
            }
          } else {
            if (!other.outcome_.isEmpty()) {
              if (outcomeBuilder_.isEmpty()) {
                outcomeBuilder_.dispose();
                outcomeBuilder_ = null;
                outcome_ = other.outcome_;
                bitField0_ = (bitField0_ & ~0x00000010);
                outcomeBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getOutcomeFieldBuilder() : null;
              } else {
                outcomeBuilder_.addAllMessages(other.outcome_);
              }
            }
          }
          if (other.hasGreeting()) {
            setGreeting(other.getGreeting());
          }
          if (other.hasWeight()) {
            setWeight(other.getWeight());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasText()) {
            
            return false;
          }
          if (!hasGreeting()) {
            
            return false;
          }
          for (int i = 0; i < getPrereqCount(); i++) {
            if (!getPrereq(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getChoiceCount(); i++) {
            if (!getChoice(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getOutcomeCount(); i++) {
            if (!getOutcome(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Actors.DialogueTree.Response parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Actors.DialogueTree.Response) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string id = 1;
        private java.lang.Object id_ = "";
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         * The unique ID for this Response within this tree
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         * The unique ID for this Response within this tree
         * </pre>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            id_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         * The unique ID for this Response within this tree
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         * The unique ID for this Response within this tree
         * </pre>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         * The unique ID for this Response within this tree
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         * The unique ID for this Response within this tree
         * </pre>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }

        // required string text = 2;
        private java.lang.Object text_ = "";
        /**
         * <code>required string text = 2;</code>
         */
        public boolean hasText() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string text = 2;</code>
         */
        public java.lang.String getText() {
          java.lang.Object ref = text_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            text_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string text = 2;</code>
         */
        public com.google.protobuf.ByteString
            getTextBytes() {
          java.lang.Object ref = text_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            text_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string text = 2;</code>
         */
        public Builder setText(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          text_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string text = 2;</code>
         */
        public Builder clearText() {
          bitField0_ = (bitField0_ & ~0x00000002);
          text_ = getDefaultInstance().getText();
          onChanged();
          return this;
        }
        /**
         * <code>required string text = 2;</code>
         */
        public Builder setTextBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          text_ = value;
          onChanged();
          return this;
        }

        // repeated .scifirpg.Prerequisite prereq = 3;
        private java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> prereq_ =
          java.util.Collections.emptyList();
        private void ensurePrereqIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            prereq_ = new java.util.ArrayList<com.eldritch.invoken.proto.Prerequisites.Prerequisite>(prereq_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.eldritch.invoken.proto.Prerequisites.Prerequisite, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder, com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> prereqBuilder_;

        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> getPrereqList() {
          if (prereqBuilder_ == null) {
            return java.util.Collections.unmodifiableList(prereq_);
          } else {
            return prereqBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public int getPrereqCount() {
          if (prereqBuilder_ == null) {
            return prereq_.size();
          } else {
            return prereqBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.Prerequisite getPrereq(int index) {
          if (prereqBuilder_ == null) {
            return prereq_.get(index);
          } else {
            return prereqBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder setPrereq(
            int index, com.eldritch.invoken.proto.Prerequisites.Prerequisite value) {
          if (prereqBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrereqIsMutable();
            prereq_.set(index, value);
            onChanged();
          } else {
            prereqBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder setPrereq(
            int index, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder builderForValue) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            prereq_.set(index, builderForValue.build());
            onChanged();
          } else {
            prereqBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder addPrereq(com.eldritch.invoken.proto.Prerequisites.Prerequisite value) {
          if (prereqBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrereqIsMutable();
            prereq_.add(value);
            onChanged();
          } else {
            prereqBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder addPrereq(
            int index, com.eldritch.invoken.proto.Prerequisites.Prerequisite value) {
          if (prereqBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrereqIsMutable();
            prereq_.add(index, value);
            onChanged();
          } else {
            prereqBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder addPrereq(
            com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder builderForValue) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            prereq_.add(builderForValue.build());
            onChanged();
          } else {
            prereqBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder addPrereq(
            int index, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder builderForValue) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            prereq_.add(index, builderForValue.build());
            onChanged();
          } else {
            prereqBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder addAllPrereq(
            java.lang.Iterable<? extends com.eldritch.invoken.proto.Prerequisites.Prerequisite> values) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            super.addAll(values, prereq_);
            onChanged();
          } else {
            prereqBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder clearPrereq() {
          if (prereqBuilder_ == null) {
            prereq_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            prereqBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public Builder removePrereq(int index) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            prereq_.remove(index);
            onChanged();
          } else {
            prereqBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder getPrereqBuilder(
            int index) {
          return getPrereqFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder getPrereqOrBuilder(
            int index) {
          if (prereqBuilder_ == null) {
            return prereq_.get(index);  } else {
            return prereqBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public java.util.List<? extends com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> 
             getPrereqOrBuilderList() {
          if (prereqBuilder_ != null) {
            return prereqBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(prereq_);
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder addPrereqBuilder() {
          return getPrereqFieldBuilder().addBuilder(
              com.eldritch.invoken.proto.Prerequisites.Prerequisite.getDefaultInstance());
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder addPrereqBuilder(
            int index) {
          return getPrereqFieldBuilder().addBuilder(
              index, com.eldritch.invoken.proto.Prerequisites.Prerequisite.getDefaultInstance());
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 3;</code>
         */
        public java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder> 
             getPrereqBuilderList() {
          return getPrereqFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.eldritch.invoken.proto.Prerequisites.Prerequisite, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder, com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> 
            getPrereqFieldBuilder() {
          if (prereqBuilder_ == null) {
            prereqBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.eldritch.invoken.proto.Prerequisites.Prerequisite, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder, com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder>(
                    prereq_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            prereq_ = null;
          }
          return prereqBuilder_;
        }

        // repeated .scifirpg.DialogueTree.Choice choice = 4;
        private java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Choice> choice_ =
          java.util.Collections.emptyList();
        private void ensureChoiceIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            choice_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.DialogueTree.Choice>(choice_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.eldritch.invoken.proto.Actors.DialogueTree.Choice, com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder, com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder> choiceBuilder_;

        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Choice> getChoiceList() {
          if (choiceBuilder_ == null) {
            return java.util.Collections.unmodifiableList(choice_);
          } else {
            return choiceBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public int getChoiceCount() {
          if (choiceBuilder_ == null) {
            return choice_.size();
          } else {
            return choiceBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public com.eldritch.invoken.proto.Actors.DialogueTree.Choice getChoice(int index) {
          if (choiceBuilder_ == null) {
            return choice_.get(index);
          } else {
            return choiceBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder setChoice(
            int index, com.eldritch.invoken.proto.Actors.DialogueTree.Choice value) {
          if (choiceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChoiceIsMutable();
            choice_.set(index, value);
            onChanged();
          } else {
            choiceBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder setChoice(
            int index, com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder builderForValue) {
          if (choiceBuilder_ == null) {
            ensureChoiceIsMutable();
            choice_.set(index, builderForValue.build());
            onChanged();
          } else {
            choiceBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder addChoice(com.eldritch.invoken.proto.Actors.DialogueTree.Choice value) {
          if (choiceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChoiceIsMutable();
            choice_.add(value);
            onChanged();
          } else {
            choiceBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder addChoice(
            int index, com.eldritch.invoken.proto.Actors.DialogueTree.Choice value) {
          if (choiceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChoiceIsMutable();
            choice_.add(index, value);
            onChanged();
          } else {
            choiceBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder addChoice(
            com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder builderForValue) {
          if (choiceBuilder_ == null) {
            ensureChoiceIsMutable();
            choice_.add(builderForValue.build());
            onChanged();
          } else {
            choiceBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder addChoice(
            int index, com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder builderForValue) {
          if (choiceBuilder_ == null) {
            ensureChoiceIsMutable();
            choice_.add(index, builderForValue.build());
            onChanged();
          } else {
            choiceBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder addAllChoice(
            java.lang.Iterable<? extends com.eldritch.invoken.proto.Actors.DialogueTree.Choice> values) {
          if (choiceBuilder_ == null) {
            ensureChoiceIsMutable();
            super.addAll(values, choice_);
            onChanged();
          } else {
            choiceBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder clearChoice() {
          if (choiceBuilder_ == null) {
            choice_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            choiceBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public Builder removeChoice(int index) {
          if (choiceBuilder_ == null) {
            ensureChoiceIsMutable();
            choice_.remove(index);
            onChanged();
          } else {
            choiceBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder getChoiceBuilder(
            int index) {
          return getChoiceFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder getChoiceOrBuilder(
            int index) {
          if (choiceBuilder_ == null) {
            return choice_.get(index);  } else {
            return choiceBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public java.util.List<? extends com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder> 
             getChoiceOrBuilderList() {
          if (choiceBuilder_ != null) {
            return choiceBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(choice_);
          }
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder addChoiceBuilder() {
          return getChoiceFieldBuilder().addBuilder(
              com.eldritch.invoken.proto.Actors.DialogueTree.Choice.getDefaultInstance());
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder addChoiceBuilder(
            int index) {
          return getChoiceFieldBuilder().addBuilder(
              index, com.eldritch.invoken.proto.Actors.DialogueTree.Choice.getDefaultInstance());
        }
        /**
         * <code>repeated .scifirpg.DialogueTree.Choice choice = 4;</code>
         */
        public java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder> 
             getChoiceBuilderList() {
          return getChoiceFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.eldritch.invoken.proto.Actors.DialogueTree.Choice, com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder, com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder> 
            getChoiceFieldBuilder() {
          if (choiceBuilder_ == null) {
            choiceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.eldritch.invoken.proto.Actors.DialogueTree.Choice, com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder, com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder>(
                    choice_,
                    ((bitField0_ & 0x00000008) == 0x00000008),
                    getParentForChildren(),
                    isClean());
            choice_ = null;
          }
          return choiceBuilder_;
        }

        // repeated .scifirpg.Outcome outcome = 5;
        private java.util.List<com.eldritch.invoken.proto.Outcomes.Outcome> outcome_ =
          java.util.Collections.emptyList();
        private void ensureOutcomeIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            outcome_ = new java.util.ArrayList<com.eldritch.invoken.proto.Outcomes.Outcome>(outcome_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.eldritch.invoken.proto.Outcomes.Outcome, com.eldritch.invoken.proto.Outcomes.Outcome.Builder, com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder> outcomeBuilder_;

        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public java.util.List<com.eldritch.invoken.proto.Outcomes.Outcome> getOutcomeList() {
          if (outcomeBuilder_ == null) {
            return java.util.Collections.unmodifiableList(outcome_);
          } else {
            return outcomeBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public int getOutcomeCount() {
          if (outcomeBuilder_ == null) {
            return outcome_.size();
          } else {
            return outcomeBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public com.eldritch.invoken.proto.Outcomes.Outcome getOutcome(int index) {
          if (outcomeBuilder_ == null) {
            return outcome_.get(index);
          } else {
            return outcomeBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder setOutcome(
            int index, com.eldritch.invoken.proto.Outcomes.Outcome value) {
          if (outcomeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOutcomeIsMutable();
            outcome_.set(index, value);
            onChanged();
          } else {
            outcomeBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder setOutcome(
            int index, com.eldritch.invoken.proto.Outcomes.Outcome.Builder builderForValue) {
          if (outcomeBuilder_ == null) {
            ensureOutcomeIsMutable();
            outcome_.set(index, builderForValue.build());
            onChanged();
          } else {
            outcomeBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder addOutcome(com.eldritch.invoken.proto.Outcomes.Outcome value) {
          if (outcomeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOutcomeIsMutable();
            outcome_.add(value);
            onChanged();
          } else {
            outcomeBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder addOutcome(
            int index, com.eldritch.invoken.proto.Outcomes.Outcome value) {
          if (outcomeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOutcomeIsMutable();
            outcome_.add(index, value);
            onChanged();
          } else {
            outcomeBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder addOutcome(
            com.eldritch.invoken.proto.Outcomes.Outcome.Builder builderForValue) {
          if (outcomeBuilder_ == null) {
            ensureOutcomeIsMutable();
            outcome_.add(builderForValue.build());
            onChanged();
          } else {
            outcomeBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder addOutcome(
            int index, com.eldritch.invoken.proto.Outcomes.Outcome.Builder builderForValue) {
          if (outcomeBuilder_ == null) {
            ensureOutcomeIsMutable();
            outcome_.add(index, builderForValue.build());
            onChanged();
          } else {
            outcomeBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder addAllOutcome(
            java.lang.Iterable<? extends com.eldritch.invoken.proto.Outcomes.Outcome> values) {
          if (outcomeBuilder_ == null) {
            ensureOutcomeIsMutable();
            super.addAll(values, outcome_);
            onChanged();
          } else {
            outcomeBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder clearOutcome() {
          if (outcomeBuilder_ == null) {
            outcome_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            outcomeBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public Builder removeOutcome(int index) {
          if (outcomeBuilder_ == null) {
            ensureOutcomeIsMutable();
            outcome_.remove(index);
            onChanged();
          } else {
            outcomeBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public com.eldritch.invoken.proto.Outcomes.Outcome.Builder getOutcomeBuilder(
            int index) {
          return getOutcomeFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder getOutcomeOrBuilder(
            int index) {
          if (outcomeBuilder_ == null) {
            return outcome_.get(index);  } else {
            return outcomeBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public java.util.List<? extends com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder> 
             getOutcomeOrBuilderList() {
          if (outcomeBuilder_ != null) {
            return outcomeBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(outcome_);
          }
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public com.eldritch.invoken.proto.Outcomes.Outcome.Builder addOutcomeBuilder() {
          return getOutcomeFieldBuilder().addBuilder(
              com.eldritch.invoken.proto.Outcomes.Outcome.getDefaultInstance());
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public com.eldritch.invoken.proto.Outcomes.Outcome.Builder addOutcomeBuilder(
            int index) {
          return getOutcomeFieldBuilder().addBuilder(
              index, com.eldritch.invoken.proto.Outcomes.Outcome.getDefaultInstance());
        }
        /**
         * <code>repeated .scifirpg.Outcome outcome = 5;</code>
         */
        public java.util.List<com.eldritch.invoken.proto.Outcomes.Outcome.Builder> 
             getOutcomeBuilderList() {
          return getOutcomeFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.eldritch.invoken.proto.Outcomes.Outcome, com.eldritch.invoken.proto.Outcomes.Outcome.Builder, com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder> 
            getOutcomeFieldBuilder() {
          if (outcomeBuilder_ == null) {
            outcomeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.eldritch.invoken.proto.Outcomes.Outcome, com.eldritch.invoken.proto.Outcomes.Outcome.Builder, com.eldritch.invoken.proto.Outcomes.OutcomeOrBuilder>(
                    outcome_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            outcome_ = null;
          }
          return outcomeBuilder_;
        }

        // required bool greeting = 6 [default = false];
        private boolean greeting_ ;
        /**
         * <code>required bool greeting = 6 [default = false];</code>
         */
        public boolean hasGreeting() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>required bool greeting = 6 [default = false];</code>
         */
        public boolean getGreeting() {
          return greeting_;
        }
        /**
         * <code>required bool greeting = 6 [default = false];</code>
         */
        public Builder setGreeting(boolean value) {
          bitField0_ |= 0x00000020;
          greeting_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool greeting = 6 [default = false];</code>
         */
        public Builder clearGreeting() {
          bitField0_ = (bitField0_ & ~0x00000020);
          greeting_ = false;
          onChanged();
          return this;
        }

        // optional int32 weight = 7 [default = 0];
        private int weight_ ;
        /**
         * <code>optional int32 weight = 7 [default = 0];</code>
         *
         * <pre>
         * Defines the order responses are traversed for finding one that meets prereqs.
         * Higher weights drop down, lower weights bubble up.
         * </pre>
         */
        public boolean hasWeight() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional int32 weight = 7 [default = 0];</code>
         *
         * <pre>
         * Defines the order responses are traversed for finding one that meets prereqs.
         * Higher weights drop down, lower weights bubble up.
         * </pre>
         */
        public int getWeight() {
          return weight_;
        }
        /**
         * <code>optional int32 weight = 7 [default = 0];</code>
         *
         * <pre>
         * Defines the order responses are traversed for finding one that meets prereqs.
         * Higher weights drop down, lower weights bubble up.
         * </pre>
         */
        public Builder setWeight(int value) {
          bitField0_ |= 0x00000040;
          weight_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 weight = 7 [default = 0];</code>
         *
         * <pre>
         * Defines the order responses are traversed for finding one that meets prereqs.
         * Higher weights drop down, lower weights bubble up.
         * </pre>
         */
        public Builder clearWeight() {
          bitField0_ = (bitField0_ & ~0x00000040);
          weight_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.DialogueTree.Response)
      }

      static {
        defaultInstance = new Response(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.DialogueTree.Response)
    }

    public interface ChoiceOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string text = 1;
      /**
       * <code>required string text = 1;</code>
       */
      boolean hasText();
      /**
       * <code>required string text = 1;</code>
       */
      java.lang.String getText();
      /**
       * <code>required string text = 1;</code>
       */
      com.google.protobuf.ByteString
          getTextBytes();

      // repeated .scifirpg.Prerequisite prereq = 2;
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> 
          getPrereqList();
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      com.eldritch.invoken.proto.Prerequisites.Prerequisite getPrereq(int index);
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      int getPrereqCount();
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      java.util.List<? extends com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> 
          getPrereqOrBuilderList();
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder getPrereqOrBuilder(
          int index);

      // repeated string successor_id = 3;
      /**
       * <code>repeated string successor_id = 3;</code>
       */
      java.util.List<java.lang.String>
      getSuccessorIdList();
      /**
       * <code>repeated string successor_id = 3;</code>
       */
      int getSuccessorIdCount();
      /**
       * <code>repeated string successor_id = 3;</code>
       */
      java.lang.String getSuccessorId(int index);
      /**
       * <code>repeated string successor_id = 3;</code>
       */
      com.google.protobuf.ByteString
          getSuccessorIdBytes(int index);

      // optional int32 weight = 4 [default = 0];
      /**
       * <code>optional int32 weight = 4 [default = 0];</code>
       *
       * <pre>
       * Defines the order dialogue choices are displayed.
       * Higher weights drop down, lower weights bubble up.
       * </pre>
       */
      boolean hasWeight();
      /**
       * <code>optional int32 weight = 4 [default = 0];</code>
       *
       * <pre>
       * Defines the order dialogue choices are displayed.
       * Higher weights drop down, lower weights bubble up.
       * </pre>
       */
      int getWeight();
    }
    /**
     * Protobuf type {@code scifirpg.DialogueTree.Choice}
     *
     * <pre>
     * By storing successor pointers as strings, we allow for cycles
     * </pre>
     */
    public static final class Choice extends
        com.google.protobuf.GeneratedMessage
        implements ChoiceOrBuilder {
      // Use Choice.newBuilder() to construct.
      private Choice(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Choice(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Choice defaultInstance;
      public static Choice getDefaultInstance() {
        return defaultInstance;
      }

      public Choice getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Choice(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                text_ = input.readBytes();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  prereq_ = new java.util.ArrayList<com.eldritch.invoken.proto.Prerequisites.Prerequisite>();
                  mutable_bitField0_ |= 0x00000002;
                }
                prereq_.add(input.readMessage(com.eldritch.invoken.proto.Prerequisites.Prerequisite.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  successorId_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000004;
                }
                successorId_.add(input.readBytes());
                break;
              }
              case 32: {
                bitField0_ |= 0x00000002;
                weight_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            prereq_ = java.util.Collections.unmodifiableList(prereq_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            successorId_ = new com.google.protobuf.UnmodifiableLazyStringList(successorId_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Choice_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Choice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.DialogueTree.Choice.class, com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder.class);
      }

      public static com.google.protobuf.Parser<Choice> PARSER =
          new com.google.protobuf.AbstractParser<Choice>() {
        public Choice parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Choice(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Choice> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string text = 1;
      public static final int TEXT_FIELD_NUMBER = 1;
      private java.lang.Object text_;
      /**
       * <code>required string text = 1;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string text = 1;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated .scifirpg.Prerequisite prereq = 2;
      public static final int PREREQ_FIELD_NUMBER = 2;
      private java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> prereq_;
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> getPrereqList() {
        return prereq_;
      }
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> 
          getPrereqOrBuilderList() {
        return prereq_;
      }
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      public int getPrereqCount() {
        return prereq_.size();
      }
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      public com.eldritch.invoken.proto.Prerequisites.Prerequisite getPrereq(int index) {
        return prereq_.get(index);
      }
      /**
       * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
       */
      public com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder getPrereqOrBuilder(
          int index) {
        return prereq_.get(index);
      }

      // repeated string successor_id = 3;
      public static final int SUCCESSOR_ID_FIELD_NUMBER = 3;
      private com.google.protobuf.LazyStringList successorId_;
      /**
       * <code>repeated string successor_id = 3;</code>
       */
      public java.util.List<java.lang.String>
          getSuccessorIdList() {
        return successorId_;
      }
      /**
       * <code>repeated string successor_id = 3;</code>
       */
      public int getSuccessorIdCount() {
        return successorId_.size();
      }
      /**
       * <code>repeated string successor_id = 3;</code>
       */
      public java.lang.String getSuccessorId(int index) {
        return successorId_.get(index);
      }
      /**
       * <code>repeated string successor_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSuccessorIdBytes(int index) {
        return successorId_.getByteString(index);
      }

      // optional int32 weight = 4 [default = 0];
      public static final int WEIGHT_FIELD_NUMBER = 4;
      private int weight_;
      /**
       * <code>optional int32 weight = 4 [default = 0];</code>
       *
       * <pre>
       * Defines the order dialogue choices are displayed.
       * Higher weights drop down, lower weights bubble up.
       * </pre>
       */
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 weight = 4 [default = 0];</code>
       *
       * <pre>
       * Defines the order dialogue choices are displayed.
       * Higher weights drop down, lower weights bubble up.
       * </pre>
       */
      public int getWeight() {
        return weight_;
      }

      private void initFields() {
        text_ = "";
        prereq_ = java.util.Collections.emptyList();
        successorId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        weight_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasText()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getPrereqCount(); i++) {
          if (!getPrereq(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getTextBytes());
        }
        for (int i = 0; i < prereq_.size(); i++) {
          output.writeMessage(2, prereq_.get(i));
        }
        for (int i = 0; i < successorId_.size(); i++) {
          output.writeBytes(3, successorId_.getByteString(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(4, weight_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getTextBytes());
        }
        for (int i = 0; i < prereq_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, prereq_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < successorId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(successorId_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getSuccessorIdList().size();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, weight_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.DialogueTree.Choice parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Actors.DialogueTree.Choice prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.DialogueTree.Choice}
       *
       * <pre>
       * By storing successor pointers as strings, we allow for cycles
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Actors.DialogueTree.ChoiceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Choice_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Choice_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Actors.DialogueTree.Choice.class, com.eldritch.invoken.proto.Actors.DialogueTree.Choice.Builder.class);
        }

        // Construct using com.eldritch.invoken.proto.Actors.DialogueTree.Choice.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPrereqFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          text_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (prereqBuilder_ == null) {
            prereq_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            prereqBuilder_.clear();
          }
          successorId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          weight_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_Choice_descriptor;
        }

        public com.eldritch.invoken.proto.Actors.DialogueTree.Choice getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Actors.DialogueTree.Choice.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Actors.DialogueTree.Choice build() {
          com.eldritch.invoken.proto.Actors.DialogueTree.Choice result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Actors.DialogueTree.Choice buildPartial() {
          com.eldritch.invoken.proto.Actors.DialogueTree.Choice result = new com.eldritch.invoken.proto.Actors.DialogueTree.Choice(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.text_ = text_;
          if (prereqBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              prereq_ = java.util.Collections.unmodifiableList(prereq_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.prereq_ = prereq_;
          } else {
            result.prereq_ = prereqBuilder_.build();
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            successorId_ = new com.google.protobuf.UnmodifiableLazyStringList(
                successorId_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.successorId_ = successorId_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000002;
          }
          result.weight_ = weight_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Actors.DialogueTree.Choice) {
            return mergeFrom((com.eldritch.invoken.proto.Actors.DialogueTree.Choice)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Actors.DialogueTree.Choice other) {
          if (other == com.eldritch.invoken.proto.Actors.DialogueTree.Choice.getDefaultInstance()) return this;
          if (other.hasText()) {
            bitField0_ |= 0x00000001;
            text_ = other.text_;
            onChanged();
          }
          if (prereqBuilder_ == null) {
            if (!other.prereq_.isEmpty()) {
              if (prereq_.isEmpty()) {
                prereq_ = other.prereq_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePrereqIsMutable();
                prereq_.addAll(other.prereq_);
              }
              onChanged();
            }
          } else {
            if (!other.prereq_.isEmpty()) {
              if (prereqBuilder_.isEmpty()) {
                prereqBuilder_.dispose();
                prereqBuilder_ = null;
                prereq_ = other.prereq_;
                bitField0_ = (bitField0_ & ~0x00000002);
                prereqBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPrereqFieldBuilder() : null;
              } else {
                prereqBuilder_.addAllMessages(other.prereq_);
              }
            }
          }
          if (!other.successorId_.isEmpty()) {
            if (successorId_.isEmpty()) {
              successorId_ = other.successorId_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSuccessorIdIsMutable();
              successorId_.addAll(other.successorId_);
            }
            onChanged();
          }
          if (other.hasWeight()) {
            setWeight(other.getWeight());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasText()) {
            
            return false;
          }
          for (int i = 0; i < getPrereqCount(); i++) {
            if (!getPrereq(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Actors.DialogueTree.Choice parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Actors.DialogueTree.Choice) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string text = 1;
        private java.lang.Object text_ = "";
        /**
         * <code>required string text = 1;</code>
         */
        public boolean hasText() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string text = 1;</code>
         */
        public java.lang.String getText() {
          java.lang.Object ref = text_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            text_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string text = 1;</code>
         */
        public com.google.protobuf.ByteString
            getTextBytes() {
          java.lang.Object ref = text_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            text_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string text = 1;</code>
         */
        public Builder setText(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          text_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string text = 1;</code>
         */
        public Builder clearText() {
          bitField0_ = (bitField0_ & ~0x00000001);
          text_ = getDefaultInstance().getText();
          onChanged();
          return this;
        }
        /**
         * <code>required string text = 1;</code>
         */
        public Builder setTextBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          text_ = value;
          onChanged();
          return this;
        }

        // repeated .scifirpg.Prerequisite prereq = 2;
        private java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> prereq_ =
          java.util.Collections.emptyList();
        private void ensurePrereqIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            prereq_ = new java.util.ArrayList<com.eldritch.invoken.proto.Prerequisites.Prerequisite>(prereq_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.eldritch.invoken.proto.Prerequisites.Prerequisite, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder, com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> prereqBuilder_;

        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite> getPrereqList() {
          if (prereqBuilder_ == null) {
            return java.util.Collections.unmodifiableList(prereq_);
          } else {
            return prereqBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public int getPrereqCount() {
          if (prereqBuilder_ == null) {
            return prereq_.size();
          } else {
            return prereqBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.Prerequisite getPrereq(int index) {
          if (prereqBuilder_ == null) {
            return prereq_.get(index);
          } else {
            return prereqBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder setPrereq(
            int index, com.eldritch.invoken.proto.Prerequisites.Prerequisite value) {
          if (prereqBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrereqIsMutable();
            prereq_.set(index, value);
            onChanged();
          } else {
            prereqBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder setPrereq(
            int index, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder builderForValue) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            prereq_.set(index, builderForValue.build());
            onChanged();
          } else {
            prereqBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder addPrereq(com.eldritch.invoken.proto.Prerequisites.Prerequisite value) {
          if (prereqBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrereqIsMutable();
            prereq_.add(value);
            onChanged();
          } else {
            prereqBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder addPrereq(
            int index, com.eldritch.invoken.proto.Prerequisites.Prerequisite value) {
          if (prereqBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrereqIsMutable();
            prereq_.add(index, value);
            onChanged();
          } else {
            prereqBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder addPrereq(
            com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder builderForValue) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            prereq_.add(builderForValue.build());
            onChanged();
          } else {
            prereqBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder addPrereq(
            int index, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder builderForValue) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            prereq_.add(index, builderForValue.build());
            onChanged();
          } else {
            prereqBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder addAllPrereq(
            java.lang.Iterable<? extends com.eldritch.invoken.proto.Prerequisites.Prerequisite> values) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            super.addAll(values, prereq_);
            onChanged();
          } else {
            prereqBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder clearPrereq() {
          if (prereqBuilder_ == null) {
            prereq_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            prereqBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public Builder removePrereq(int index) {
          if (prereqBuilder_ == null) {
            ensurePrereqIsMutable();
            prereq_.remove(index);
            onChanged();
          } else {
            prereqBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder getPrereqBuilder(
            int index) {
          return getPrereqFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder getPrereqOrBuilder(
            int index) {
          if (prereqBuilder_ == null) {
            return prereq_.get(index);  } else {
            return prereqBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public java.util.List<? extends com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> 
             getPrereqOrBuilderList() {
          if (prereqBuilder_ != null) {
            return prereqBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(prereq_);
          }
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder addPrereqBuilder() {
          return getPrereqFieldBuilder().addBuilder(
              com.eldritch.invoken.proto.Prerequisites.Prerequisite.getDefaultInstance());
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder addPrereqBuilder(
            int index) {
          return getPrereqFieldBuilder().addBuilder(
              index, com.eldritch.invoken.proto.Prerequisites.Prerequisite.getDefaultInstance());
        }
        /**
         * <code>repeated .scifirpg.Prerequisite prereq = 2;</code>
         */
        public java.util.List<com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder> 
             getPrereqBuilderList() {
          return getPrereqFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.eldritch.invoken.proto.Prerequisites.Prerequisite, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder, com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder> 
            getPrereqFieldBuilder() {
          if (prereqBuilder_ == null) {
            prereqBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.eldritch.invoken.proto.Prerequisites.Prerequisite, com.eldritch.invoken.proto.Prerequisites.Prerequisite.Builder, com.eldritch.invoken.proto.Prerequisites.PrerequisiteOrBuilder>(
                    prereq_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            prereq_ = null;
          }
          return prereqBuilder_;
        }

        // repeated string successor_id = 3;
        private com.google.protobuf.LazyStringList successorId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureSuccessorIdIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            successorId_ = new com.google.protobuf.LazyStringArrayList(successorId_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public java.util.List<java.lang.String>
            getSuccessorIdList() {
          return java.util.Collections.unmodifiableList(successorId_);
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public int getSuccessorIdCount() {
          return successorId_.size();
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public java.lang.String getSuccessorId(int index) {
          return successorId_.get(index);
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public com.google.protobuf.ByteString
            getSuccessorIdBytes(int index) {
          return successorId_.getByteString(index);
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public Builder setSuccessorId(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSuccessorIdIsMutable();
          successorId_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public Builder addSuccessorId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSuccessorIdIsMutable();
          successorId_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public Builder addAllSuccessorId(
            java.lang.Iterable<java.lang.String> values) {
          ensureSuccessorIdIsMutable();
          super.addAll(values, successorId_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public Builder clearSuccessorId() {
          successorId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string successor_id = 3;</code>
         */
        public Builder addSuccessorIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSuccessorIdIsMutable();
          successorId_.add(value);
          onChanged();
          return this;
        }

        // optional int32 weight = 4 [default = 0];
        private int weight_ ;
        /**
         * <code>optional int32 weight = 4 [default = 0];</code>
         *
         * <pre>
         * Defines the order dialogue choices are displayed.
         * Higher weights drop down, lower weights bubble up.
         * </pre>
         */
        public boolean hasWeight() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 weight = 4 [default = 0];</code>
         *
         * <pre>
         * Defines the order dialogue choices are displayed.
         * Higher weights drop down, lower weights bubble up.
         * </pre>
         */
        public int getWeight() {
          return weight_;
        }
        /**
         * <code>optional int32 weight = 4 [default = 0];</code>
         *
         * <pre>
         * Defines the order dialogue choices are displayed.
         * Higher weights drop down, lower weights bubble up.
         * </pre>
         */
        public Builder setWeight(int value) {
          bitField0_ |= 0x00000008;
          weight_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 weight = 4 [default = 0];</code>
         *
         * <pre>
         * Defines the order dialogue choices are displayed.
         * Higher weights drop down, lower weights bubble up.
         * </pre>
         */
        public Builder clearWeight() {
          bitField0_ = (bitField0_ & ~0x00000008);
          weight_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.DialogueTree.Choice)
      }

      static {
        defaultInstance = new Choice(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.DialogueTree.Choice)
    }

    // repeated .scifirpg.DialogueTree.Response dialogue = 1;
    public static final int DIALOGUE_FIELD_NUMBER = 1;
    private java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Response> dialogue_;
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    public java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Response> getDialogueList() {
      return dialogue_;
    }
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder> 
        getDialogueOrBuilderList() {
      return dialogue_;
    }
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    public int getDialogueCount() {
      return dialogue_.size();
    }
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    public com.eldritch.invoken.proto.Actors.DialogueTree.Response getDialogue(int index) {
      return dialogue_.get(index);
    }
    /**
     * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
     *
     * <pre>
     * We keep all Response options as a list, then convert them to a map in memory so we
     * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
     * as greetings, and one of these will serve as the 'root' of the tree.
     *
     * Multiple greetings are possible depending on what prereqs are met.
     * Order matters as the first greeting to meet all prereqs will be chosen,
     * even if multiple options are satisfied.
     *
     * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
     * shared in this design.
     * </pre>
     */
    public com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder getDialogueOrBuilder(
        int index) {
      return dialogue_.get(index);
    }

    private void initFields() {
      dialogue_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getDialogueCount(); i++) {
        if (!getDialogue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < dialogue_.size(); i++) {
        output.writeMessage(1, dialogue_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dialogue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dialogue_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eldritch.invoken.proto.Actors.DialogueTree parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.DialogueTree parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eldritch.invoken.proto.Actors.DialogueTree prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code scifirpg.DialogueTree}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eldritch.invoken.proto.Actors.DialogueTreeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.DialogueTree.class, com.eldritch.invoken.proto.Actors.DialogueTree.Builder.class);
      }

      // Construct using com.eldritch.invoken.proto.Actors.DialogueTree.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDialogueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (dialogueBuilder_ == null) {
          dialogue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dialogueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_DialogueTree_descriptor;
      }

      public com.eldritch.invoken.proto.Actors.DialogueTree getDefaultInstanceForType() {
        return com.eldritch.invoken.proto.Actors.DialogueTree.getDefaultInstance();
      }

      public com.eldritch.invoken.proto.Actors.DialogueTree build() {
        com.eldritch.invoken.proto.Actors.DialogueTree result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldritch.invoken.proto.Actors.DialogueTree buildPartial() {
        com.eldritch.invoken.proto.Actors.DialogueTree result = new com.eldritch.invoken.proto.Actors.DialogueTree(this);
        int from_bitField0_ = bitField0_;
        if (dialogueBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dialogue_ = java.util.Collections.unmodifiableList(dialogue_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dialogue_ = dialogue_;
        } else {
          result.dialogue_ = dialogueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldritch.invoken.proto.Actors.DialogueTree) {
          return mergeFrom((com.eldritch.invoken.proto.Actors.DialogueTree)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldritch.invoken.proto.Actors.DialogueTree other) {
        if (other == com.eldritch.invoken.proto.Actors.DialogueTree.getDefaultInstance()) return this;
        if (dialogueBuilder_ == null) {
          if (!other.dialogue_.isEmpty()) {
            if (dialogue_.isEmpty()) {
              dialogue_ = other.dialogue_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDialogueIsMutable();
              dialogue_.addAll(other.dialogue_);
            }
            onChanged();
          }
        } else {
          if (!other.dialogue_.isEmpty()) {
            if (dialogueBuilder_.isEmpty()) {
              dialogueBuilder_.dispose();
              dialogueBuilder_ = null;
              dialogue_ = other.dialogue_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dialogueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDialogueFieldBuilder() : null;
            } else {
              dialogueBuilder_.addAllMessages(other.dialogue_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getDialogueCount(); i++) {
          if (!getDialogue(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldritch.invoken.proto.Actors.DialogueTree parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldritch.invoken.proto.Actors.DialogueTree) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .scifirpg.DialogueTree.Response dialogue = 1;
      private java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Response> dialogue_ =
        java.util.Collections.emptyList();
      private void ensureDialogueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dialogue_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.DialogueTree.Response>(dialogue_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.DialogueTree.Response, com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder, com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder> dialogueBuilder_;

      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Response> getDialogueList() {
        if (dialogueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dialogue_);
        } else {
          return dialogueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public int getDialogueCount() {
        if (dialogueBuilder_ == null) {
          return dialogue_.size();
        } else {
          return dialogueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree.Response getDialogue(int index) {
        if (dialogueBuilder_ == null) {
          return dialogue_.get(index);
        } else {
          return dialogueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder setDialogue(
          int index, com.eldritch.invoken.proto.Actors.DialogueTree.Response value) {
        if (dialogueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDialogueIsMutable();
          dialogue_.set(index, value);
          onChanged();
        } else {
          dialogueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder setDialogue(
          int index, com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder builderForValue) {
        if (dialogueBuilder_ == null) {
          ensureDialogueIsMutable();
          dialogue_.set(index, builderForValue.build());
          onChanged();
        } else {
          dialogueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder addDialogue(com.eldritch.invoken.proto.Actors.DialogueTree.Response value) {
        if (dialogueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDialogueIsMutable();
          dialogue_.add(value);
          onChanged();
        } else {
          dialogueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder addDialogue(
          int index, com.eldritch.invoken.proto.Actors.DialogueTree.Response value) {
        if (dialogueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDialogueIsMutable();
          dialogue_.add(index, value);
          onChanged();
        } else {
          dialogueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder addDialogue(
          com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder builderForValue) {
        if (dialogueBuilder_ == null) {
          ensureDialogueIsMutable();
          dialogue_.add(builderForValue.build());
          onChanged();
        } else {
          dialogueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder addDialogue(
          int index, com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder builderForValue) {
        if (dialogueBuilder_ == null) {
          ensureDialogueIsMutable();
          dialogue_.add(index, builderForValue.build());
          onChanged();
        } else {
          dialogueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder addAllDialogue(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Actors.DialogueTree.Response> values) {
        if (dialogueBuilder_ == null) {
          ensureDialogueIsMutable();
          super.addAll(values, dialogue_);
          onChanged();
        } else {
          dialogueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder clearDialogue() {
        if (dialogueBuilder_ == null) {
          dialogue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dialogueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public Builder removeDialogue(int index) {
        if (dialogueBuilder_ == null) {
          ensureDialogueIsMutable();
          dialogue_.remove(index);
          onChanged();
        } else {
          dialogueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder getDialogueBuilder(
          int index) {
        return getDialogueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder getDialogueOrBuilder(
          int index) {
        if (dialogueBuilder_ == null) {
          return dialogue_.get(index);  } else {
          return dialogueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder> 
           getDialogueOrBuilderList() {
        if (dialogueBuilder_ != null) {
          return dialogueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dialogue_);
        }
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder addDialogueBuilder() {
        return getDialogueFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Actors.DialogueTree.Response.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder addDialogueBuilder(
          int index) {
        return getDialogueFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Actors.DialogueTree.Response.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.DialogueTree.Response dialogue = 1;</code>
       *
       * <pre>
       * We keep all Response options as a list, then convert them to a map in memory so we
       * can traverse the DialogueTree via pointers in Choices.  Some Responses are marked
       * as greetings, and one of these will serve as the 'root' of the tree.
       *
       * Multiple greetings are possible depending on what prereqs are met.
       * Order matters as the first greeting to meet all prereqs will be chosen,
       * even if multiple options are satisfied.
       *
       * A DialogueTree exists in isolation, unique to a particular Actor.  No Response is
       * shared in this design.
       * </pre>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder> 
           getDialogueBuilderList() {
        return getDialogueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.DialogueTree.Response, com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder, com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder> 
          getDialogueFieldBuilder() {
        if (dialogueBuilder_ == null) {
          dialogueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Actors.DialogueTree.Response, com.eldritch.invoken.proto.Actors.DialogueTree.Response.Builder, com.eldritch.invoken.proto.Actors.DialogueTree.ResponseOrBuilder>(
                  dialogue_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dialogue_ = null;
        }
        return dialogueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:scifirpg.DialogueTree)
    }

    static {
      defaultInstance = new DialogueTree(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scifirpg.DialogueTree)
  }

  public interface ActorParamsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string id = 1;
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Names for various dialogue scenarios
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Names for various dialogue scenarios
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Names for various dialogue scenarios
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required .scifirpg.ActorParams.Species species = 3;
    /**
     * <code>required .scifirpg.ActorParams.Species species = 3;</code>
     *
     * <pre>
     * Static info
     * </pre>
     */
    boolean hasSpecies();
    /**
     * <code>required .scifirpg.ActorParams.Species species = 3;</code>
     *
     * <pre>
     * Static info
     * </pre>
     */
    com.eldritch.invoken.proto.Actors.ActorParams.Species getSpecies();

    // optional .scifirpg.ActorParams.Gender gender = 4;
    /**
     * <code>optional .scifirpg.ActorParams.Gender gender = 4;</code>
     */
    boolean hasGender();
    /**
     * <code>optional .scifirpg.ActorParams.Gender gender = 4;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams.Gender getGender();

    // optional .scifirpg.Profession profession = 5;
    /**
     * <code>optional .scifirpg.Profession profession = 5;</code>
     */
    boolean hasProfession();
    /**
     * <code>optional .scifirpg.Profession profession = 5;</code>
     */
    com.eldritch.invoken.proto.Disciplines.Profession getProfession();

    // required int32 level = 6;
    /**
     * <code>required int32 level = 6;</code>
     *
     * <pre>
     * Dynamic info
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 6;</code>
     *
     * <pre>
     * Dynamic info
     * </pre>
     */
    int getLevel();

    // repeated .scifirpg.ActorParams.Skill skill = 7;
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.Skill> 
        getSkillList();
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams.Skill getSkill(int index);
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    int getSkillCount();
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder> 
        getSkillOrBuilderList();
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder getSkillOrBuilder(
        int index);

    // repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus> 
        getFactionStatusList();
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus getFactionStatus(int index);
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    int getFactionStatusCount();
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder> 
        getFactionStatusOrBuilderList();
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder getFactionStatusOrBuilder(
        int index);

    // repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem> 
        getInventoryItemList();
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem getInventoryItem(int index);
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    int getInventoryItemCount();
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder> 
        getInventoryItemOrBuilderList();
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder getInventoryItemOrBuilder(
        int index);

    // repeated string known_aug_id = 10;
    /**
     * <code>repeated string known_aug_id = 10;</code>
     */
    java.util.List<java.lang.String>
    getKnownAugIdList();
    /**
     * <code>repeated string known_aug_id = 10;</code>
     */
    int getKnownAugIdCount();
    /**
     * <code>repeated string known_aug_id = 10;</code>
     */
    java.lang.String getKnownAugId(int index);
    /**
     * <code>repeated string known_aug_id = 10;</code>
     */
    com.google.protobuf.ByteString
        getKnownAugIdBytes(int index);
  }
  /**
   * Protobuf type {@code scifirpg.ActorParams}
   */
  public static final class ActorParams extends
      com.google.protobuf.GeneratedMessage
      implements ActorParamsOrBuilder {
    // Use ActorParams.newBuilder() to construct.
    private ActorParams(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActorParams(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActorParams defaultInstance;
    public static ActorParams getDefaultInstance() {
      return defaultInstance;
    }

    public ActorParams getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActorParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.eldritch.invoken.proto.Actors.ActorParams.Species value = com.eldritch.invoken.proto.Actors.ActorParams.Species.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                species_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.eldritch.invoken.proto.Actors.ActorParams.Gender value = com.eldritch.invoken.proto.Actors.ActorParams.Gender.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                gender_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.eldritch.invoken.proto.Disciplines.Profession value = com.eldritch.invoken.proto.Disciplines.Profession.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                profession_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              level_ = input.readInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                skill_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.ActorParams.Skill>();
                mutable_bitField0_ |= 0x00000040;
              }
              skill_.add(input.readMessage(com.eldritch.invoken.proto.Actors.ActorParams.Skill.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                factionStatus_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus>();
                mutable_bitField0_ |= 0x00000080;
              }
              factionStatus_.add(input.readMessage(com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                inventoryItem_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem>();
                mutable_bitField0_ |= 0x00000100;
              }
              inventoryItem_.add(input.readMessage(com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                knownAugId_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000200;
              }
              knownAugId_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          skill_ = java.util.Collections.unmodifiableList(skill_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          factionStatus_ = java.util.Collections.unmodifiableList(factionStatus_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          inventoryItem_ = java.util.Collections.unmodifiableList(inventoryItem_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          knownAugId_ = new com.google.protobuf.UnmodifiableLazyStringList(knownAugId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldritch.invoken.proto.Actors.ActorParams.class, com.eldritch.invoken.proto.Actors.ActorParams.Builder.class);
    }

    public static com.google.protobuf.Parser<ActorParams> PARSER =
        new com.google.protobuf.AbstractParser<ActorParams>() {
      public ActorParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActorParams(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActorParams> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code scifirpg.ActorParams.Species}
     */
    public enum Species
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HUMAN = 0;</code>
       */
      HUMAN(0, 0),
      /**
       * <code>BEAST = 1;</code>
       */
      BEAST(1, 1),
      /**
       * <code>AUTOMATON = 2;</code>
       */
      AUTOMATON(2, 2),
      /**
       * <code>UNDEAD = 3;</code>
       */
      UNDEAD(3, 3),
      /**
       * <code>INVOKEN = 4;</code>
       */
      INVOKEN(4, 4),
      /**
       * <code>HOLLOW = 5;</code>
       */
      HOLLOW(5, 5),
      ;

      /**
       * <code>HUMAN = 0;</code>
       */
      public static final int HUMAN_VALUE = 0;
      /**
       * <code>BEAST = 1;</code>
       */
      public static final int BEAST_VALUE = 1;
      /**
       * <code>AUTOMATON = 2;</code>
       */
      public static final int AUTOMATON_VALUE = 2;
      /**
       * <code>UNDEAD = 3;</code>
       */
      public static final int UNDEAD_VALUE = 3;
      /**
       * <code>INVOKEN = 4;</code>
       */
      public static final int INVOKEN_VALUE = 4;
      /**
       * <code>HOLLOW = 5;</code>
       */
      public static final int HOLLOW_VALUE = 5;


      public final int getNumber() { return value; }

      public static Species valueOf(int value) {
        switch (value) {
          case 0: return HUMAN;
          case 1: return BEAST;
          case 2: return AUTOMATON;
          case 3: return UNDEAD;
          case 4: return INVOKEN;
          case 5: return HOLLOW;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Species>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Species>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Species>() {
              public Species findValueByNumber(int number) {
                return Species.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.ActorParams.getDescriptor().getEnumTypes().get(0);
      }

      private static final Species[] VALUES = values();

      public static Species valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Species(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:scifirpg.ActorParams.Species)
    }

    /**
     * Protobuf enum {@code scifirpg.ActorParams.Gender}
     */
    public enum Gender
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MALE = 0;</code>
       */
      MALE(0, 0),
      /**
       * <code>FEMALE = 1;</code>
       */
      FEMALE(1, 1),
      ;

      /**
       * <code>MALE = 0;</code>
       */
      public static final int MALE_VALUE = 0;
      /**
       * <code>FEMALE = 1;</code>
       */
      public static final int FEMALE_VALUE = 1;


      public final int getNumber() { return value; }

      public static Gender valueOf(int value) {
        switch (value) {
          case 0: return MALE;
          case 1: return FEMALE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Gender>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Gender>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Gender>() {
              public Gender findValueByNumber(int number) {
                return Gender.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.ActorParams.getDescriptor().getEnumTypes().get(1);
      }

      private static final Gender[] VALUES = values();

      public static Gender valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Gender(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:scifirpg.ActorParams.Gender)
    }

    public interface SkillOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required .scifirpg.Discipline discipline = 1;
      /**
       * <code>required .scifirpg.Discipline discipline = 1;</code>
       */
      boolean hasDiscipline();
      /**
       * <code>required .scifirpg.Discipline discipline = 1;</code>
       */
      com.eldritch.invoken.proto.Disciplines.Discipline getDiscipline();

      // required int32 level = 2;
      /**
       * <code>required int32 level = 2;</code>
       */
      boolean hasLevel();
      /**
       * <code>required int32 level = 2;</code>
       */
      int getLevel();

      // optional int32 xp = 3;
      /**
       * <code>optional int32 xp = 3;</code>
       *
       * <pre>
       * ignored for NPCs
       * </pre>
       */
      boolean hasXp();
      /**
       * <code>optional int32 xp = 3;</code>
       *
       * <pre>
       * ignored for NPCs
       * </pre>
       */
      int getXp();
    }
    /**
     * Protobuf type {@code scifirpg.ActorParams.Skill}
     */
    public static final class Skill extends
        com.google.protobuf.GeneratedMessage
        implements SkillOrBuilder {
      // Use Skill.newBuilder() to construct.
      private Skill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Skill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Skill defaultInstance;
      public static Skill getDefaultInstance() {
        return defaultInstance;
      }

      public Skill getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Skill(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.eldritch.invoken.proto.Disciplines.Discipline value = com.eldritch.invoken.proto.Disciplines.Discipline.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  discipline_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                level_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                xp_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_Skill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_Skill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.ActorParams.Skill.class, com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder.class);
      }

      public static com.google.protobuf.Parser<Skill> PARSER =
          new com.google.protobuf.AbstractParser<Skill>() {
        public Skill parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Skill(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Skill> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required .scifirpg.Discipline discipline = 1;
      public static final int DISCIPLINE_FIELD_NUMBER = 1;
      private com.eldritch.invoken.proto.Disciplines.Discipline discipline_;
      /**
       * <code>required .scifirpg.Discipline discipline = 1;</code>
       */
      public boolean hasDiscipline() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .scifirpg.Discipline discipline = 1;</code>
       */
      public com.eldritch.invoken.proto.Disciplines.Discipline getDiscipline() {
        return discipline_;
      }

      // required int32 level = 2;
      public static final int LEVEL_FIELD_NUMBER = 2;
      private int level_;
      /**
       * <code>required int32 level = 2;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 level = 2;</code>
       */
      public int getLevel() {
        return level_;
      }

      // optional int32 xp = 3;
      public static final int XP_FIELD_NUMBER = 3;
      private int xp_;
      /**
       * <code>optional int32 xp = 3;</code>
       *
       * <pre>
       * ignored for NPCs
       * </pre>
       */
      public boolean hasXp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 xp = 3;</code>
       *
       * <pre>
       * ignored for NPCs
       * </pre>
       */
      public int getXp() {
        return xp_;
      }

      private void initFields() {
        discipline_ = com.eldritch.invoken.proto.Disciplines.Discipline.WARFARE;
        level_ = 0;
        xp_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasDiscipline()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLevel()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, discipline_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, level_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, xp_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, discipline_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, level_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, xp_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.Skill parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Actors.ActorParams.Skill prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.ActorParams.Skill}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_Skill_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_Skill_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Actors.ActorParams.Skill.class, com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder.class);
        }

        // Construct using com.eldritch.invoken.proto.Actors.ActorParams.Skill.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          discipline_ = com.eldritch.invoken.proto.Disciplines.Discipline.WARFARE;
          bitField0_ = (bitField0_ & ~0x00000001);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          xp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_Skill_descriptor;
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.Skill getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Actors.ActorParams.Skill.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.Skill build() {
          com.eldritch.invoken.proto.Actors.ActorParams.Skill result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.Skill buildPartial() {
          com.eldritch.invoken.proto.Actors.ActorParams.Skill result = new com.eldritch.invoken.proto.Actors.ActorParams.Skill(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.discipline_ = discipline_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.xp_ = xp_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Actors.ActorParams.Skill) {
            return mergeFrom((com.eldritch.invoken.proto.Actors.ActorParams.Skill)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Actors.ActorParams.Skill other) {
          if (other == com.eldritch.invoken.proto.Actors.ActorParams.Skill.getDefaultInstance()) return this;
          if (other.hasDiscipline()) {
            setDiscipline(other.getDiscipline());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasXp()) {
            setXp(other.getXp());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasDiscipline()) {
            
            return false;
          }
          if (!hasLevel()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Actors.ActorParams.Skill parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Actors.ActorParams.Skill) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required .scifirpg.Discipline discipline = 1;
        private com.eldritch.invoken.proto.Disciplines.Discipline discipline_ = com.eldritch.invoken.proto.Disciplines.Discipline.WARFARE;
        /**
         * <code>required .scifirpg.Discipline discipline = 1;</code>
         */
        public boolean hasDiscipline() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .scifirpg.Discipline discipline = 1;</code>
         */
        public com.eldritch.invoken.proto.Disciplines.Discipline getDiscipline() {
          return discipline_;
        }
        /**
         * <code>required .scifirpg.Discipline discipline = 1;</code>
         */
        public Builder setDiscipline(com.eldritch.invoken.proto.Disciplines.Discipline value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          discipline_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .scifirpg.Discipline discipline = 1;</code>
         */
        public Builder clearDiscipline() {
          bitField0_ = (bitField0_ & ~0x00000001);
          discipline_ = com.eldritch.invoken.proto.Disciplines.Discipline.WARFARE;
          onChanged();
          return this;
        }

        // required int32 level = 2;
        private int level_ ;
        /**
         * <code>required int32 level = 2;</code>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 level = 2;</code>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>required int32 level = 2;</code>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000002;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 level = 2;</code>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000002);
          level_ = 0;
          onChanged();
          return this;
        }

        // optional int32 xp = 3;
        private int xp_ ;
        /**
         * <code>optional int32 xp = 3;</code>
         *
         * <pre>
         * ignored for NPCs
         * </pre>
         */
        public boolean hasXp() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 xp = 3;</code>
         *
         * <pre>
         * ignored for NPCs
         * </pre>
         */
        public int getXp() {
          return xp_;
        }
        /**
         * <code>optional int32 xp = 3;</code>
         *
         * <pre>
         * ignored for NPCs
         * </pre>
         */
        public Builder setXp(int value) {
          bitField0_ |= 0x00000004;
          xp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 xp = 3;</code>
         *
         * <pre>
         * ignored for NPCs
         * </pre>
         */
        public Builder clearXp() {
          bitField0_ = (bitField0_ & ~0x00000004);
          xp_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.ActorParams.Skill)
      }

      static {
        defaultInstance = new Skill(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.ActorParams.Skill)
    }

    public interface FactionStatusOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string faction_id = 1;
      /**
       * <code>optional string faction_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: might change to int32
       * </pre>
       */
      boolean hasFactionId();
      /**
       * <code>optional string faction_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: might change to int32
       * </pre>
       */
      java.lang.String getFactionId();
      /**
       * <code>optional string faction_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: might change to int32
       * </pre>
       */
      com.google.protobuf.ByteString
          getFactionIdBytes();

      // optional int32 reputation = 2;
      /**
       * <code>optional int32 reputation = 2;</code>
       */
      boolean hasReputation();
      /**
       * <code>optional int32 reputation = 2;</code>
       */
      int getReputation();

      // optional int32 rank = 3;
      /**
       * <code>optional int32 rank = 3;</code>
       */
      boolean hasRank();
      /**
       * <code>optional int32 rank = 3;</code>
       */
      int getRank();
    }
    /**
     * Protobuf type {@code scifirpg.ActorParams.FactionStatus}
     */
    public static final class FactionStatus extends
        com.google.protobuf.GeneratedMessage
        implements FactionStatusOrBuilder {
      // Use FactionStatus.newBuilder() to construct.
      private FactionStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FactionStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FactionStatus defaultInstance;
      public static FactionStatus getDefaultInstance() {
        return defaultInstance;
      }

      public FactionStatus getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FactionStatus(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                factionId_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                reputation_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                rank_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_FactionStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_FactionStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.class, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder.class);
      }

      public static com.google.protobuf.Parser<FactionStatus> PARSER =
          new com.google.protobuf.AbstractParser<FactionStatus>() {
        public FactionStatus parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FactionStatus(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<FactionStatus> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string faction_id = 1;
      public static final int FACTION_ID_FIELD_NUMBER = 1;
      private java.lang.Object factionId_;
      /**
       * <code>optional string faction_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: might change to int32
       * </pre>
       */
      public boolean hasFactionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string faction_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: might change to int32
       * </pre>
       */
      public java.lang.String getFactionId() {
        java.lang.Object ref = factionId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            factionId_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string faction_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: might change to int32
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFactionIdBytes() {
        java.lang.Object ref = factionId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          factionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional int32 reputation = 2;
      public static final int REPUTATION_FIELD_NUMBER = 2;
      private int reputation_;
      /**
       * <code>optional int32 reputation = 2;</code>
       */
      public boolean hasReputation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 reputation = 2;</code>
       */
      public int getReputation() {
        return reputation_;
      }

      // optional int32 rank = 3;
      public static final int RANK_FIELD_NUMBER = 3;
      private int rank_;
      /**
       * <code>optional int32 rank = 3;</code>
       */
      public boolean hasRank() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 rank = 3;</code>
       */
      public int getRank() {
        return rank_;
      }

      private void initFields() {
        factionId_ = "";
        reputation_ = 0;
        rank_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getFactionIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, reputation_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, rank_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getFactionIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, reputation_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, rank_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.ActorParams.FactionStatus}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_FactionStatus_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_FactionStatus_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.class, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder.class);
        }

        // Construct using com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          factionId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          reputation_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          rank_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_FactionStatus_descriptor;
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus build() {
          com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus buildPartial() {
          com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus result = new com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.factionId_ = factionId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.reputation_ = reputation_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.rank_ = rank_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus) {
            return mergeFrom((com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus other) {
          if (other == com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.getDefaultInstance()) return this;
          if (other.hasFactionId()) {
            bitField0_ |= 0x00000001;
            factionId_ = other.factionId_;
            onChanged();
          }
          if (other.hasReputation()) {
            setReputation(other.getReputation());
          }
          if (other.hasRank()) {
            setRank(other.getRank());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string faction_id = 1;
        private java.lang.Object factionId_ = "";
        /**
         * <code>optional string faction_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: might change to int32
         * </pre>
         */
        public boolean hasFactionId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string faction_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: might change to int32
         * </pre>
         */
        public java.lang.String getFactionId() {
          java.lang.Object ref = factionId_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            factionId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string faction_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: might change to int32
         * </pre>
         */
        public com.google.protobuf.ByteString
            getFactionIdBytes() {
          java.lang.Object ref = factionId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            factionId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string faction_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: might change to int32
         * </pre>
         */
        public Builder setFactionId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          factionId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string faction_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: might change to int32
         * </pre>
         */
        public Builder clearFactionId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          factionId_ = getDefaultInstance().getFactionId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string faction_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: might change to int32
         * </pre>
         */
        public Builder setFactionIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          factionId_ = value;
          onChanged();
          return this;
        }

        // optional int32 reputation = 2;
        private int reputation_ ;
        /**
         * <code>optional int32 reputation = 2;</code>
         */
        public boolean hasReputation() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 reputation = 2;</code>
         */
        public int getReputation() {
          return reputation_;
        }
        /**
         * <code>optional int32 reputation = 2;</code>
         */
        public Builder setReputation(int value) {
          bitField0_ |= 0x00000002;
          reputation_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 reputation = 2;</code>
         */
        public Builder clearReputation() {
          bitField0_ = (bitField0_ & ~0x00000002);
          reputation_ = 0;
          onChanged();
          return this;
        }

        // optional int32 rank = 3;
        private int rank_ ;
        /**
         * <code>optional int32 rank = 3;</code>
         */
        public boolean hasRank() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 rank = 3;</code>
         */
        public int getRank() {
          return rank_;
        }
        /**
         * <code>optional int32 rank = 3;</code>
         */
        public Builder setRank(int value) {
          bitField0_ |= 0x00000004;
          rank_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 rank = 3;</code>
         */
        public Builder clearRank() {
          bitField0_ = (bitField0_ & ~0x00000004);
          rank_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.ActorParams.FactionStatus)
      }

      static {
        defaultInstance = new FactionStatus(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.ActorParams.FactionStatus)
    }

    public interface InventoryItemOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string item_id = 1;
      /**
       * <code>optional string item_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: may change to int32
       * </pre>
       */
      boolean hasItemId();
      /**
       * <code>optional string item_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: may change to int32
       * </pre>
       */
      java.lang.String getItemId();
      /**
       * <code>optional string item_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: may change to int32
       * </pre>
       */
      com.google.protobuf.ByteString
          getItemIdBytes();

      // required int32 count = 2 [default = 1];
      /**
       * <code>required int32 count = 2 [default = 1];</code>
       */
      boolean hasCount();
      /**
       * <code>required int32 count = 2 [default = 1];</code>
       */
      int getCount();

      // optional double drop_chance = 3 [default = 1];
      /**
       * <code>optional double drop_chance = 3 [default = 1];</code>
       *
       * <pre>
       * ignored for player
       * </pre>
       */
      boolean hasDropChance();
      /**
       * <code>optional double drop_chance = 3 [default = 1];</code>
       *
       * <pre>
       * ignored for player
       * </pre>
       */
      double getDropChance();
    }
    /**
     * Protobuf type {@code scifirpg.ActorParams.InventoryItem}
     */
    public static final class InventoryItem extends
        com.google.protobuf.GeneratedMessage
        implements InventoryItemOrBuilder {
      // Use InventoryItem.newBuilder() to construct.
      private InventoryItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private InventoryItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final InventoryItem defaultInstance;
      public static InventoryItem getDefaultInstance() {
        return defaultInstance;
      }

      public InventoryItem getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private InventoryItem(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                itemId_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                count_ = input.readInt32();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                dropChance_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_InventoryItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_InventoryItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.class, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder.class);
      }

      public static com.google.protobuf.Parser<InventoryItem> PARSER =
          new com.google.protobuf.AbstractParser<InventoryItem>() {
        public InventoryItem parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InventoryItem(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<InventoryItem> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string item_id = 1;
      public static final int ITEM_ID_FIELD_NUMBER = 1;
      private java.lang.Object itemId_;
      /**
       * <code>optional string item_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: may change to int32
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string item_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: may change to int32
       * </pre>
       */
      public java.lang.String getItemId() {
        java.lang.Object ref = itemId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            itemId_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string item_id = 1;</code>
       *
       * <pre>
       * OPTIONAL: may change to int32
       * </pre>
       */
      public com.google.protobuf.ByteString
          getItemIdBytes() {
        java.lang.Object ref = itemId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int32 count = 2 [default = 1];
      public static final int COUNT_FIELD_NUMBER = 2;
      private int count_;
      /**
       * <code>required int32 count = 2 [default = 1];</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 count = 2 [default = 1];</code>
       */
      public int getCount() {
        return count_;
      }

      // optional double drop_chance = 3 [default = 1];
      public static final int DROP_CHANCE_FIELD_NUMBER = 3;
      private double dropChance_;
      /**
       * <code>optional double drop_chance = 3 [default = 1];</code>
       *
       * <pre>
       * ignored for player
       * </pre>
       */
      public boolean hasDropChance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double drop_chance = 3 [default = 1];</code>
       *
       * <pre>
       * ignored for player
       * </pre>
       */
      public double getDropChance() {
        return dropChance_;
      }

      private void initFields() {
        itemId_ = "";
        count_ = 1;
        dropChance_ = 1D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasCount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getItemIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, count_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, dropChance_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getItemIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, count_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, dropChance_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.ActorParams.InventoryItem}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_InventoryItem_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_InventoryItem_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.class, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder.class);
        }

        // Construct using com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          itemId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          count_ = 1;
          bitField0_ = (bitField0_ & ~0x00000002);
          dropChance_ = 1D;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_InventoryItem_descriptor;
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem build() {
          com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem buildPartial() {
          com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem result = new com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.itemId_ = itemId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.count_ = count_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.dropChance_ = dropChance_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem) {
            return mergeFrom((com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem other) {
          if (other == com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.getDefaultInstance()) return this;
          if (other.hasItemId()) {
            bitField0_ |= 0x00000001;
            itemId_ = other.itemId_;
            onChanged();
          }
          if (other.hasCount()) {
            setCount(other.getCount());
          }
          if (other.hasDropChance()) {
            setDropChance(other.getDropChance());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasCount()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string item_id = 1;
        private java.lang.Object itemId_ = "";
        /**
         * <code>optional string item_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: may change to int32
         * </pre>
         */
        public boolean hasItemId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string item_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: may change to int32
         * </pre>
         */
        public java.lang.String getItemId() {
          java.lang.Object ref = itemId_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            itemId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string item_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: may change to int32
         * </pre>
         */
        public com.google.protobuf.ByteString
            getItemIdBytes() {
          java.lang.Object ref = itemId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            itemId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string item_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: may change to int32
         * </pre>
         */
        public Builder setItemId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          itemId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string item_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: may change to int32
         * </pre>
         */
        public Builder clearItemId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          itemId_ = getDefaultInstance().getItemId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string item_id = 1;</code>
         *
         * <pre>
         * OPTIONAL: may change to int32
         * </pre>
         */
        public Builder setItemIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          itemId_ = value;
          onChanged();
          return this;
        }

        // required int32 count = 2 [default = 1];
        private int count_ = 1;
        /**
         * <code>required int32 count = 2 [default = 1];</code>
         */
        public boolean hasCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 count = 2 [default = 1];</code>
         */
        public int getCount() {
          return count_;
        }
        /**
         * <code>required int32 count = 2 [default = 1];</code>
         */
        public Builder setCount(int value) {
          bitField0_ |= 0x00000002;
          count_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 count = 2 [default = 1];</code>
         */
        public Builder clearCount() {
          bitField0_ = (bitField0_ & ~0x00000002);
          count_ = 1;
          onChanged();
          return this;
        }

        // optional double drop_chance = 3 [default = 1];
        private double dropChance_ = 1D;
        /**
         * <code>optional double drop_chance = 3 [default = 1];</code>
         *
         * <pre>
         * ignored for player
         * </pre>
         */
        public boolean hasDropChance() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double drop_chance = 3 [default = 1];</code>
         *
         * <pre>
         * ignored for player
         * </pre>
         */
        public double getDropChance() {
          return dropChance_;
        }
        /**
         * <code>optional double drop_chance = 3 [default = 1];</code>
         *
         * <pre>
         * ignored for player
         * </pre>
         */
        public Builder setDropChance(double value) {
          bitField0_ |= 0x00000004;
          dropChance_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double drop_chance = 3 [default = 1];</code>
         *
         * <pre>
         * ignored for player
         * </pre>
         */
        public Builder clearDropChance() {
          bitField0_ = (bitField0_ & ~0x00000004);
          dropChance_ = 1D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.ActorParams.InventoryItem)
      }

      static {
        defaultInstance = new InventoryItem(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.ActorParams.InventoryItem)
    }

    private int bitField0_;
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Names for various dialogue scenarios
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Names for various dialogue scenarios
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Names for various dialogue scenarios
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .scifirpg.ActorParams.Species species = 3;
    public static final int SPECIES_FIELD_NUMBER = 3;
    private com.eldritch.invoken.proto.Actors.ActorParams.Species species_;
    /**
     * <code>required .scifirpg.ActorParams.Species species = 3;</code>
     *
     * <pre>
     * Static info
     * </pre>
     */
    public boolean hasSpecies() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .scifirpg.ActorParams.Species species = 3;</code>
     *
     * <pre>
     * Static info
     * </pre>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams.Species getSpecies() {
      return species_;
    }

    // optional .scifirpg.ActorParams.Gender gender = 4;
    public static final int GENDER_FIELD_NUMBER = 4;
    private com.eldritch.invoken.proto.Actors.ActorParams.Gender gender_;
    /**
     * <code>optional .scifirpg.ActorParams.Gender gender = 4;</code>
     */
    public boolean hasGender() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .scifirpg.ActorParams.Gender gender = 4;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams.Gender getGender() {
      return gender_;
    }

    // optional .scifirpg.Profession profession = 5;
    public static final int PROFESSION_FIELD_NUMBER = 5;
    private com.eldritch.invoken.proto.Disciplines.Profession profession_;
    /**
     * <code>optional .scifirpg.Profession profession = 5;</code>
     */
    public boolean hasProfession() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .scifirpg.Profession profession = 5;</code>
     */
    public com.eldritch.invoken.proto.Disciplines.Profession getProfession() {
      return profession_;
    }

    // required int32 level = 6;
    public static final int LEVEL_FIELD_NUMBER = 6;
    private int level_;
    /**
     * <code>required int32 level = 6;</code>
     *
     * <pre>
     * Dynamic info
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 level = 6;</code>
     *
     * <pre>
     * Dynamic info
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // repeated .scifirpg.ActorParams.Skill skill = 7;
    public static final int SKILL_FIELD_NUMBER = 7;
    private java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.Skill> skill_;
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.Skill> getSkillList() {
      return skill_;
    }
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder> 
        getSkillOrBuilderList() {
      return skill_;
    }
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    public int getSkillCount() {
      return skill_.size();
    }
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams.Skill getSkill(int index) {
      return skill_.get(index);
    }
    /**
     * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder getSkillOrBuilder(
        int index) {
      return skill_.get(index);
    }

    // repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;
    public static final int FACTION_STATUS_FIELD_NUMBER = 8;
    private java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus> factionStatus_;
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus> getFactionStatusList() {
      return factionStatus_;
    }
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder> 
        getFactionStatusOrBuilderList() {
      return factionStatus_;
    }
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    public int getFactionStatusCount() {
      return factionStatus_.size();
    }
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus getFactionStatus(int index) {
      return factionStatus_.get(index);
    }
    /**
     * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder getFactionStatusOrBuilder(
        int index) {
      return factionStatus_.get(index);
    }

    // repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;
    public static final int INVENTORY_ITEM_FIELD_NUMBER = 9;
    private java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem> inventoryItem_;
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem> getInventoryItemList() {
      return inventoryItem_;
    }
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder> 
        getInventoryItemOrBuilderList() {
      return inventoryItem_;
    }
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    public int getInventoryItemCount() {
      return inventoryItem_.size();
    }
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem getInventoryItem(int index) {
      return inventoryItem_.get(index);
    }
    /**
     * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder getInventoryItemOrBuilder(
        int index) {
      return inventoryItem_.get(index);
    }

    // repeated string known_aug_id = 10;
    public static final int KNOWN_AUG_ID_FIELD_NUMBER = 10;
    private com.google.protobuf.LazyStringList knownAugId_;
    /**
     * <code>repeated string known_aug_id = 10;</code>
     */
    public java.util.List<java.lang.String>
        getKnownAugIdList() {
      return knownAugId_;
    }
    /**
     * <code>repeated string known_aug_id = 10;</code>
     */
    public int getKnownAugIdCount() {
      return knownAugId_.size();
    }
    /**
     * <code>repeated string known_aug_id = 10;</code>
     */
    public java.lang.String getKnownAugId(int index) {
      return knownAugId_.get(index);
    }
    /**
     * <code>repeated string known_aug_id = 10;</code>
     */
    public com.google.protobuf.ByteString
        getKnownAugIdBytes(int index) {
      return knownAugId_.getByteString(index);
    }

    private void initFields() {
      id_ = "";
      name_ = "";
      species_ = com.eldritch.invoken.proto.Actors.ActorParams.Species.HUMAN;
      gender_ = com.eldritch.invoken.proto.Actors.ActorParams.Gender.MALE;
      profession_ = com.eldritch.invoken.proto.Disciplines.Profession.CENTURION;
      level_ = 0;
      skill_ = java.util.Collections.emptyList();
      factionStatus_ = java.util.Collections.emptyList();
      inventoryItem_ = java.util.Collections.emptyList();
      knownAugId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpecies()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSkillCount(); i++) {
        if (!getSkill(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getInventoryItemCount(); i++) {
        if (!getInventoryItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, species_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, gender_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, profession_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, level_);
      }
      for (int i = 0; i < skill_.size(); i++) {
        output.writeMessage(7, skill_.get(i));
      }
      for (int i = 0; i < factionStatus_.size(); i++) {
        output.writeMessage(8, factionStatus_.get(i));
      }
      for (int i = 0; i < inventoryItem_.size(); i++) {
        output.writeMessage(9, inventoryItem_.get(i));
      }
      for (int i = 0; i < knownAugId_.size(); i++) {
        output.writeBytes(10, knownAugId_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, species_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, gender_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, profession_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, level_);
      }
      for (int i = 0; i < skill_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, skill_.get(i));
      }
      for (int i = 0; i < factionStatus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, factionStatus_.get(i));
      }
      for (int i = 0; i < inventoryItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, inventoryItem_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < knownAugId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(knownAugId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getKnownAugIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eldritch.invoken.proto.Actors.ActorParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.ActorParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eldritch.invoken.proto.Actors.ActorParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code scifirpg.ActorParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.ActorParams.class, com.eldritch.invoken.proto.Actors.ActorParams.Builder.class);
      }

      // Construct using com.eldritch.invoken.proto.Actors.ActorParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSkillFieldBuilder();
          getFactionStatusFieldBuilder();
          getInventoryItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        species_ = com.eldritch.invoken.proto.Actors.ActorParams.Species.HUMAN;
        bitField0_ = (bitField0_ & ~0x00000004);
        gender_ = com.eldritch.invoken.proto.Actors.ActorParams.Gender.MALE;
        bitField0_ = (bitField0_ & ~0x00000008);
        profession_ = com.eldritch.invoken.proto.Disciplines.Profession.CENTURION;
        bitField0_ = (bitField0_ & ~0x00000010);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (skillBuilder_ == null) {
          skill_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          skillBuilder_.clear();
        }
        if (factionStatusBuilder_ == null) {
          factionStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          factionStatusBuilder_.clear();
        }
        if (inventoryItemBuilder_ == null) {
          inventoryItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          inventoryItemBuilder_.clear();
        }
        knownAugId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_ActorParams_descriptor;
      }

      public com.eldritch.invoken.proto.Actors.ActorParams getDefaultInstanceForType() {
        return com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
      }

      public com.eldritch.invoken.proto.Actors.ActorParams build() {
        com.eldritch.invoken.proto.Actors.ActorParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldritch.invoken.proto.Actors.ActorParams buildPartial() {
        com.eldritch.invoken.proto.Actors.ActorParams result = new com.eldritch.invoken.proto.Actors.ActorParams(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.species_ = species_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gender_ = gender_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.profession_ = profession_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.level_ = level_;
        if (skillBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            skill_ = java.util.Collections.unmodifiableList(skill_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.skill_ = skill_;
        } else {
          result.skill_ = skillBuilder_.build();
        }
        if (factionStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            factionStatus_ = java.util.Collections.unmodifiableList(factionStatus_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.factionStatus_ = factionStatus_;
        } else {
          result.factionStatus_ = factionStatusBuilder_.build();
        }
        if (inventoryItemBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            inventoryItem_ = java.util.Collections.unmodifiableList(inventoryItem_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.inventoryItem_ = inventoryItem_;
        } else {
          result.inventoryItem_ = inventoryItemBuilder_.build();
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          knownAugId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              knownAugId_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.knownAugId_ = knownAugId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldritch.invoken.proto.Actors.ActorParams) {
          return mergeFrom((com.eldritch.invoken.proto.Actors.ActorParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldritch.invoken.proto.Actors.ActorParams other) {
        if (other == com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSpecies()) {
          setSpecies(other.getSpecies());
        }
        if (other.hasGender()) {
          setGender(other.getGender());
        }
        if (other.hasProfession()) {
          setProfession(other.getProfession());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (skillBuilder_ == null) {
          if (!other.skill_.isEmpty()) {
            if (skill_.isEmpty()) {
              skill_ = other.skill_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureSkillIsMutable();
              skill_.addAll(other.skill_);
            }
            onChanged();
          }
        } else {
          if (!other.skill_.isEmpty()) {
            if (skillBuilder_.isEmpty()) {
              skillBuilder_.dispose();
              skillBuilder_ = null;
              skill_ = other.skill_;
              bitField0_ = (bitField0_ & ~0x00000040);
              skillBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSkillFieldBuilder() : null;
            } else {
              skillBuilder_.addAllMessages(other.skill_);
            }
          }
        }
        if (factionStatusBuilder_ == null) {
          if (!other.factionStatus_.isEmpty()) {
            if (factionStatus_.isEmpty()) {
              factionStatus_ = other.factionStatus_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureFactionStatusIsMutable();
              factionStatus_.addAll(other.factionStatus_);
            }
            onChanged();
          }
        } else {
          if (!other.factionStatus_.isEmpty()) {
            if (factionStatusBuilder_.isEmpty()) {
              factionStatusBuilder_.dispose();
              factionStatusBuilder_ = null;
              factionStatus_ = other.factionStatus_;
              bitField0_ = (bitField0_ & ~0x00000080);
              factionStatusBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFactionStatusFieldBuilder() : null;
            } else {
              factionStatusBuilder_.addAllMessages(other.factionStatus_);
            }
          }
        }
        if (inventoryItemBuilder_ == null) {
          if (!other.inventoryItem_.isEmpty()) {
            if (inventoryItem_.isEmpty()) {
              inventoryItem_ = other.inventoryItem_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureInventoryItemIsMutable();
              inventoryItem_.addAll(other.inventoryItem_);
            }
            onChanged();
          }
        } else {
          if (!other.inventoryItem_.isEmpty()) {
            if (inventoryItemBuilder_.isEmpty()) {
              inventoryItemBuilder_.dispose();
              inventoryItemBuilder_ = null;
              inventoryItem_ = other.inventoryItem_;
              bitField0_ = (bitField0_ & ~0x00000100);
              inventoryItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInventoryItemFieldBuilder() : null;
            } else {
              inventoryItemBuilder_.addAllMessages(other.inventoryItem_);
            }
          }
        }
        if (!other.knownAugId_.isEmpty()) {
          if (knownAugId_.isEmpty()) {
            knownAugId_ = other.knownAugId_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureKnownAugIdIsMutable();
            knownAugId_.addAll(other.knownAugId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasSpecies()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        for (int i = 0; i < getSkillCount(); i++) {
          if (!getSkill(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getInventoryItemCount(); i++) {
          if (!getInventoryItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldritch.invoken.proto.Actors.ActorParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldritch.invoken.proto.Actors.ActorParams) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Names for various dialogue scenarios
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Names for various dialogue scenarios
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Names for various dialogue scenarios
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Names for various dialogue scenarios
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Names for various dialogue scenarios
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Names for various dialogue scenarios
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required .scifirpg.ActorParams.Species species = 3;
      private com.eldritch.invoken.proto.Actors.ActorParams.Species species_ = com.eldritch.invoken.proto.Actors.ActorParams.Species.HUMAN;
      /**
       * <code>required .scifirpg.ActorParams.Species species = 3;</code>
       *
       * <pre>
       * Static info
       * </pre>
       */
      public boolean hasSpecies() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .scifirpg.ActorParams.Species species = 3;</code>
       *
       * <pre>
       * Static info
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.Species getSpecies() {
        return species_;
      }
      /**
       * <code>required .scifirpg.ActorParams.Species species = 3;</code>
       *
       * <pre>
       * Static info
       * </pre>
       */
      public Builder setSpecies(com.eldritch.invoken.proto.Actors.ActorParams.Species value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        species_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams.Species species = 3;</code>
       *
       * <pre>
       * Static info
       * </pre>
       */
      public Builder clearSpecies() {
        bitField0_ = (bitField0_ & ~0x00000004);
        species_ = com.eldritch.invoken.proto.Actors.ActorParams.Species.HUMAN;
        onChanged();
        return this;
      }

      // optional .scifirpg.ActorParams.Gender gender = 4;
      private com.eldritch.invoken.proto.Actors.ActorParams.Gender gender_ = com.eldritch.invoken.proto.Actors.ActorParams.Gender.MALE;
      /**
       * <code>optional .scifirpg.ActorParams.Gender gender = 4;</code>
       */
      public boolean hasGender() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .scifirpg.ActorParams.Gender gender = 4;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.Gender getGender() {
        return gender_;
      }
      /**
       * <code>optional .scifirpg.ActorParams.Gender gender = 4;</code>
       */
      public Builder setGender(com.eldritch.invoken.proto.Actors.ActorParams.Gender value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        gender_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .scifirpg.ActorParams.Gender gender = 4;</code>
       */
      public Builder clearGender() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gender_ = com.eldritch.invoken.proto.Actors.ActorParams.Gender.MALE;
        onChanged();
        return this;
      }

      // optional .scifirpg.Profession profession = 5;
      private com.eldritch.invoken.proto.Disciplines.Profession profession_ = com.eldritch.invoken.proto.Disciplines.Profession.CENTURION;
      /**
       * <code>optional .scifirpg.Profession profession = 5;</code>
       */
      public boolean hasProfession() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .scifirpg.Profession profession = 5;</code>
       */
      public com.eldritch.invoken.proto.Disciplines.Profession getProfession() {
        return profession_;
      }
      /**
       * <code>optional .scifirpg.Profession profession = 5;</code>
       */
      public Builder setProfession(com.eldritch.invoken.proto.Disciplines.Profession value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        profession_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .scifirpg.Profession profession = 5;</code>
       */
      public Builder clearProfession() {
        bitField0_ = (bitField0_ & ~0x00000010);
        profession_ = com.eldritch.invoken.proto.Disciplines.Profession.CENTURION;
        onChanged();
        return this;
      }

      // required int32 level = 6;
      private int level_ ;
      /**
       * <code>required int32 level = 6;</code>
       *
       * <pre>
       * Dynamic info
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 level = 6;</code>
       *
       * <pre>
       * Dynamic info
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 6;</code>
       *
       * <pre>
       * Dynamic info
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000020;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 6;</code>
       *
       * <pre>
       * Dynamic info
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        level_ = 0;
        onChanged();
        return this;
      }

      // repeated .scifirpg.ActorParams.Skill skill = 7;
      private java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.Skill> skill_ =
        java.util.Collections.emptyList();
      private void ensureSkillIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          skill_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.ActorParams.Skill>(skill_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams.Skill, com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder, com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder> skillBuilder_;

      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.Skill> getSkillList() {
        if (skillBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skill_);
        } else {
          return skillBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public int getSkillCount() {
        if (skillBuilder_ == null) {
          return skill_.size();
        } else {
          return skillBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.Skill getSkill(int index) {
        if (skillBuilder_ == null) {
          return skill_.get(index);
        } else {
          return skillBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder setSkill(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.Skill value) {
        if (skillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillIsMutable();
          skill_.set(index, value);
          onChanged();
        } else {
          skillBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder setSkill(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder builderForValue) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          skill_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder addSkill(com.eldritch.invoken.proto.Actors.ActorParams.Skill value) {
        if (skillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillIsMutable();
          skill_.add(value);
          onChanged();
        } else {
          skillBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder addSkill(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.Skill value) {
        if (skillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillIsMutable();
          skill_.add(index, value);
          onChanged();
        } else {
          skillBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder addSkill(
          com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder builderForValue) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          skill_.add(builderForValue.build());
          onChanged();
        } else {
          skillBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder addSkill(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder builderForValue) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          skill_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder addAllSkill(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Actors.ActorParams.Skill> values) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          super.addAll(values, skill_);
          onChanged();
        } else {
          skillBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder clearSkill() {
        if (skillBuilder_ == null) {
          skill_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          skillBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public Builder removeSkill(int index) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          skill_.remove(index);
          onChanged();
        } else {
          skillBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder getSkillBuilder(
          int index) {
        return getSkillFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder getSkillOrBuilder(
          int index) {
        if (skillBuilder_ == null) {
          return skill_.get(index);  } else {
          return skillBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder> 
           getSkillOrBuilderList() {
        if (skillBuilder_ != null) {
          return skillBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skill_);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder addSkillBuilder() {
        return getSkillFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Actors.ActorParams.Skill.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder addSkillBuilder(
          int index) {
        return getSkillFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Actors.ActorParams.Skill.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.ActorParams.Skill skill = 7;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder> 
           getSkillBuilderList() {
        return getSkillFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams.Skill, com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder, com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder> 
          getSkillFieldBuilder() {
        if (skillBuilder_ == null) {
          skillBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Actors.ActorParams.Skill, com.eldritch.invoken.proto.Actors.ActorParams.Skill.Builder, com.eldritch.invoken.proto.Actors.ActorParams.SkillOrBuilder>(
                  skill_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          skill_ = null;
        }
        return skillBuilder_;
      }

      // repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;
      private java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus> factionStatus_ =
        java.util.Collections.emptyList();
      private void ensureFactionStatusIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          factionStatus_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus>(factionStatus_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder> factionStatusBuilder_;

      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus> getFactionStatusList() {
        if (factionStatusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(factionStatus_);
        } else {
          return factionStatusBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public int getFactionStatusCount() {
        if (factionStatusBuilder_ == null) {
          return factionStatus_.size();
        } else {
          return factionStatusBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus getFactionStatus(int index) {
        if (factionStatusBuilder_ == null) {
          return factionStatus_.get(index);
        } else {
          return factionStatusBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder setFactionStatus(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus value) {
        if (factionStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactionStatusIsMutable();
          factionStatus_.set(index, value);
          onChanged();
        } else {
          factionStatusBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder setFactionStatus(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder builderForValue) {
        if (factionStatusBuilder_ == null) {
          ensureFactionStatusIsMutable();
          factionStatus_.set(index, builderForValue.build());
          onChanged();
        } else {
          factionStatusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder addFactionStatus(com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus value) {
        if (factionStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactionStatusIsMutable();
          factionStatus_.add(value);
          onChanged();
        } else {
          factionStatusBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder addFactionStatus(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus value) {
        if (factionStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactionStatusIsMutable();
          factionStatus_.add(index, value);
          onChanged();
        } else {
          factionStatusBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder addFactionStatus(
          com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder builderForValue) {
        if (factionStatusBuilder_ == null) {
          ensureFactionStatusIsMutable();
          factionStatus_.add(builderForValue.build());
          onChanged();
        } else {
          factionStatusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder addFactionStatus(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder builderForValue) {
        if (factionStatusBuilder_ == null) {
          ensureFactionStatusIsMutable();
          factionStatus_.add(index, builderForValue.build());
          onChanged();
        } else {
          factionStatusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder addAllFactionStatus(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus> values) {
        if (factionStatusBuilder_ == null) {
          ensureFactionStatusIsMutable();
          super.addAll(values, factionStatus_);
          onChanged();
        } else {
          factionStatusBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder clearFactionStatus() {
        if (factionStatusBuilder_ == null) {
          factionStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          factionStatusBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public Builder removeFactionStatus(int index) {
        if (factionStatusBuilder_ == null) {
          ensureFactionStatusIsMutable();
          factionStatus_.remove(index);
          onChanged();
        } else {
          factionStatusBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder getFactionStatusBuilder(
          int index) {
        return getFactionStatusFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder getFactionStatusOrBuilder(
          int index) {
        if (factionStatusBuilder_ == null) {
          return factionStatus_.get(index);  } else {
          return factionStatusBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder> 
           getFactionStatusOrBuilderList() {
        if (factionStatusBuilder_ != null) {
          return factionStatusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(factionStatus_);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder addFactionStatusBuilder() {
        return getFactionStatusFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder addFactionStatusBuilder(
          int index) {
        return getFactionStatusFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.ActorParams.FactionStatus faction_status = 8;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder> 
           getFactionStatusBuilderList() {
        return getFactionStatusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder> 
          getFactionStatusFieldBuilder() {
        if (factionStatusBuilder_ == null) {
          factionStatusBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatus.Builder, com.eldritch.invoken.proto.Actors.ActorParams.FactionStatusOrBuilder>(
                  factionStatus_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          factionStatus_ = null;
        }
        return factionStatusBuilder_;
      }

      // repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;
      private java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem> inventoryItem_ =
        java.util.Collections.emptyList();
      private void ensureInventoryItemIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          inventoryItem_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem>(inventoryItem_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder> inventoryItemBuilder_;

      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem> getInventoryItemList() {
        if (inventoryItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inventoryItem_);
        } else {
          return inventoryItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public int getInventoryItemCount() {
        if (inventoryItemBuilder_ == null) {
          return inventoryItem_.size();
        } else {
          return inventoryItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem getInventoryItem(int index) {
        if (inventoryItemBuilder_ == null) {
          return inventoryItem_.get(index);
        } else {
          return inventoryItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder setInventoryItem(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem value) {
        if (inventoryItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInventoryItemIsMutable();
          inventoryItem_.set(index, value);
          onChanged();
        } else {
          inventoryItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder setInventoryItem(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder builderForValue) {
        if (inventoryItemBuilder_ == null) {
          ensureInventoryItemIsMutable();
          inventoryItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          inventoryItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder addInventoryItem(com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem value) {
        if (inventoryItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInventoryItemIsMutable();
          inventoryItem_.add(value);
          onChanged();
        } else {
          inventoryItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder addInventoryItem(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem value) {
        if (inventoryItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInventoryItemIsMutable();
          inventoryItem_.add(index, value);
          onChanged();
        } else {
          inventoryItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder addInventoryItem(
          com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder builderForValue) {
        if (inventoryItemBuilder_ == null) {
          ensureInventoryItemIsMutable();
          inventoryItem_.add(builderForValue.build());
          onChanged();
        } else {
          inventoryItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder addInventoryItem(
          int index, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder builderForValue) {
        if (inventoryItemBuilder_ == null) {
          ensureInventoryItemIsMutable();
          inventoryItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          inventoryItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder addAllInventoryItem(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem> values) {
        if (inventoryItemBuilder_ == null) {
          ensureInventoryItemIsMutable();
          super.addAll(values, inventoryItem_);
          onChanged();
        } else {
          inventoryItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder clearInventoryItem() {
        if (inventoryItemBuilder_ == null) {
          inventoryItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          inventoryItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public Builder removeInventoryItem(int index) {
        if (inventoryItemBuilder_ == null) {
          ensureInventoryItemIsMutable();
          inventoryItem_.remove(index);
          onChanged();
        } else {
          inventoryItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder getInventoryItemBuilder(
          int index) {
        return getInventoryItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder getInventoryItemOrBuilder(
          int index) {
        if (inventoryItemBuilder_ == null) {
          return inventoryItem_.get(index);  } else {
          return inventoryItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder> 
           getInventoryItemOrBuilderList() {
        if (inventoryItemBuilder_ != null) {
          return inventoryItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inventoryItem_);
        }
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder addInventoryItemBuilder() {
        return getInventoryItemFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder addInventoryItemBuilder(
          int index) {
        return getInventoryItemFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.ActorParams.InventoryItem inventory_item = 9;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder> 
           getInventoryItemBuilderList() {
        return getInventoryItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder> 
          getInventoryItemFieldBuilder() {
        if (inventoryItemBuilder_ == null) {
          inventoryItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItem.Builder, com.eldritch.invoken.proto.Actors.ActorParams.InventoryItemOrBuilder>(
                  inventoryItem_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          inventoryItem_ = null;
        }
        return inventoryItemBuilder_;
      }

      // repeated string known_aug_id = 10;
      private com.google.protobuf.LazyStringList knownAugId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKnownAugIdIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          knownAugId_ = new com.google.protobuf.LazyStringArrayList(knownAugId_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public java.util.List<java.lang.String>
          getKnownAugIdList() {
        return java.util.Collections.unmodifiableList(knownAugId_);
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public int getKnownAugIdCount() {
        return knownAugId_.size();
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public java.lang.String getKnownAugId(int index) {
        return knownAugId_.get(index);
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public com.google.protobuf.ByteString
          getKnownAugIdBytes(int index) {
        return knownAugId_.getByteString(index);
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public Builder setKnownAugId(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKnownAugIdIsMutable();
        knownAugId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public Builder addKnownAugId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKnownAugIdIsMutable();
        knownAugId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public Builder addAllKnownAugId(
          java.lang.Iterable<java.lang.String> values) {
        ensureKnownAugIdIsMutable();
        super.addAll(values, knownAugId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public Builder clearKnownAugId() {
        knownAugId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string known_aug_id = 10;</code>
       */
      public Builder addKnownAugIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKnownAugIdIsMutable();
        knownAugId_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:scifirpg.ActorParams)
    }

    static {
      defaultInstance = new ActorParams(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scifirpg.ActorParams)
  }

  public interface NonPlayerActorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .scifirpg.ActorParams params = 1;
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    boolean hasParams();
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams getParams();
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder getParamsOrBuilder();

    // required bool unique = 2 [default = false];
    /**
     * <code>required bool unique = 2 [default = false];</code>
     */
    boolean hasUnique();
    /**
     * <code>required bool unique = 2 [default = false];</code>
     */
    boolean getUnique();

    // required bool can_speak = 3 [default = true];
    /**
     * <code>required bool can_speak = 3 [default = true];</code>
     */
    boolean hasCanSpeak();
    /**
     * <code>required bool can_speak = 3 [default = true];</code>
     */
    boolean getCanSpeak();

    // optional .scifirpg.DialogueTree dialogue = 4;
    /**
     * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
     */
    boolean hasDialogue();
    /**
     * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
     */
    com.eldritch.invoken.proto.Actors.DialogueTree getDialogue();
    /**
     * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
     */
    com.eldritch.invoken.proto.Actors.DialogueTreeOrBuilder getDialogueOrBuilder();

    // optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];
    /**
     * <code>optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];</code>
     */
    boolean hasAggression();
    /**
     * <code>optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];</code>
     */
    com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression getAggression();

    // optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];
    /**
     * <code>optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];</code>
     */
    boolean hasAssistance();
    /**
     * <code>optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];</code>
     */
    com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance getAssistance();

    // optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];
    /**
     * <code>optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];</code>
     */
    boolean hasConfidence();
    /**
     * <code>optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];</code>
     */
    com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence getConfidence();

    // repeated .scifirpg.NonPlayerActor.Trait trait = 8;
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    java.util.List<com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait> 
        getTraitList();
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait getTrait(int index);
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    int getTraitCount();
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder> 
        getTraitOrBuilderList();
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder getTraitOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code scifirpg.NonPlayerActor}
   */
  public static final class NonPlayerActor extends
      com.google.protobuf.GeneratedMessage
      implements NonPlayerActorOrBuilder {
    // Use NonPlayerActor.newBuilder() to construct.
    private NonPlayerActor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NonPlayerActor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NonPlayerActor defaultInstance;
    public static NonPlayerActor getDefaultInstance() {
      return defaultInstance;
    }

    public NonPlayerActor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NonPlayerActor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.eldritch.invoken.proto.Actors.ActorParams.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = params_.toBuilder();
              }
              params_ = input.readMessage(com.eldritch.invoken.proto.Actors.ActorParams.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(params_);
                params_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              unique_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              canSpeak_ = input.readBool();
              break;
            }
            case 34: {
              com.eldritch.invoken.proto.Actors.DialogueTree.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = dialogue_.toBuilder();
              }
              dialogue_ = input.readMessage(com.eldritch.invoken.proto.Actors.DialogueTree.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dialogue_);
                dialogue_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression value = com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                aggression_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance value = com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                assistance_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence value = com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                confidence_ = value;
              }
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                trait_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait>();
                mutable_bitField0_ |= 0x00000080;
              }
              trait_.add(input.readMessage(com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          trait_ = java.util.Collections.unmodifiableList(trait_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldritch.invoken.proto.Actors.NonPlayerActor.class, com.eldritch.invoken.proto.Actors.NonPlayerActor.Builder.class);
    }

    public static com.google.protobuf.Parser<NonPlayerActor> PARSER =
        new com.google.protobuf.AbstractParser<NonPlayerActor>() {
      public NonPlayerActor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NonPlayerActor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NonPlayerActor> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code scifirpg.NonPlayerActor.Aggression}
     */
    public enum Aggression
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PACIFIST = 0;</code>
       *
       * <pre>
       * Does not attack anyone
       * </pre>
       */
      PACIFIST(0, 0),
      /**
       * <code>UNAGGRESSIVE = 1;</code>
       *
       * <pre>
       * Will attack if provoked
       * </pre>
       */
      UNAGGRESSIVE(1, 1),
      /**
       * <code>AGGRESSIVE = 2;</code>
       *
       * <pre>
       * Will attack enemies on sight
       * </pre>
       */
      AGGRESSIVE(2, 2),
      /**
       * <code>HOSTILE = 3;</code>
       *
       * <pre>
       * Attack enemies and neutral on sight
       * </pre>
       */
      HOSTILE(3, 3),
      /**
       * <code>FRENZIED = 4;</code>
       *
       * <pre>
       * Attacks anyone on sight
       * </pre>
       */
      FRENZIED(4, 4),
      ;

      /**
       * <code>PACIFIST = 0;</code>
       *
       * <pre>
       * Does not attack anyone
       * </pre>
       */
      public static final int PACIFIST_VALUE = 0;
      /**
       * <code>UNAGGRESSIVE = 1;</code>
       *
       * <pre>
       * Will attack if provoked
       * </pre>
       */
      public static final int UNAGGRESSIVE_VALUE = 1;
      /**
       * <code>AGGRESSIVE = 2;</code>
       *
       * <pre>
       * Will attack enemies on sight
       * </pre>
       */
      public static final int AGGRESSIVE_VALUE = 2;
      /**
       * <code>HOSTILE = 3;</code>
       *
       * <pre>
       * Attack enemies and neutral on sight
       * </pre>
       */
      public static final int HOSTILE_VALUE = 3;
      /**
       * <code>FRENZIED = 4;</code>
       *
       * <pre>
       * Attacks anyone on sight
       * </pre>
       */
      public static final int FRENZIED_VALUE = 4;


      public final int getNumber() { return value; }

      public static Aggression valueOf(int value) {
        switch (value) {
          case 0: return PACIFIST;
          case 1: return UNAGGRESSIVE;
          case 2: return AGGRESSIVE;
          case 3: return HOSTILE;
          case 4: return FRENZIED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Aggression>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Aggression>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Aggression>() {
              public Aggression findValueByNumber(int number) {
                return Aggression.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.NonPlayerActor.getDescriptor().getEnumTypes().get(0);
      }

      private static final Aggression[] VALUES = values();

      public static Aggression valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Aggression(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:scifirpg.NonPlayerActor.Aggression)
    }

    /**
     * Protobuf enum {@code scifirpg.NonPlayerActor.Assistance}
     */
    public enum Assistance
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DETACHED = 0;</code>
       *
       * <pre>
       * Helps no one in combat
       * </pre>
       */
      DETACHED(0, 0),
      /**
       * <code>LOYAL = 1;</code>
       *
       * <pre>
       * Helps allies in combat
       * </pre>
       */
      LOYAL(1, 1),
      /**
       * <code>CHIVALRIC = 2;</code>
       *
       * <pre>
       * Helps allies in combat and assists neutral when attacked
       * </pre>
       */
      CHIVALRIC(2, 2),
      ;

      /**
       * <code>DETACHED = 0;</code>
       *
       * <pre>
       * Helps no one in combat
       * </pre>
       */
      public static final int DETACHED_VALUE = 0;
      /**
       * <code>LOYAL = 1;</code>
       *
       * <pre>
       * Helps allies in combat
       * </pre>
       */
      public static final int LOYAL_VALUE = 1;
      /**
       * <code>CHIVALRIC = 2;</code>
       *
       * <pre>
       * Helps allies in combat and assists neutral when attacked
       * </pre>
       */
      public static final int CHIVALRIC_VALUE = 2;


      public final int getNumber() { return value; }

      public static Assistance valueOf(int value) {
        switch (value) {
          case 0: return DETACHED;
          case 1: return LOYAL;
          case 2: return CHIVALRIC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Assistance>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Assistance>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Assistance>() {
              public Assistance findValueByNumber(int number) {
                return Assistance.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.NonPlayerActor.getDescriptor().getEnumTypes().get(1);
      }

      private static final Assistance[] VALUES = values();

      public static Assistance valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Assistance(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:scifirpg.NonPlayerActor.Assistance)
    }

    /**
     * Protobuf enum {@code scifirpg.NonPlayerActor.Confidence}
     */
    public enum Confidence
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>COWARDLY = 0;</code>
       *
       * <pre>
       * Never instigates combat, attempts to flee if engaged
       * </pre>
       */
      COWARDLY(0, 0),
      /**
       * <code>CAUTIOUS = 1;</code>
       *
       * <pre>
       * Only instigate combat with low levels, flee high levels when engaged
       * </pre>
       */
      CAUTIOUS(1, 1),
      /**
       * <code>CAPABLE = 2;</code>
       *
       * <pre>
       * Instigate with similar levels and below, flee from high levels when engaged
       * </pre>
       */
      CAPABLE(2, 2),
      /**
       * <code>BRAVE = 3;</code>
       *
       * <pre>
       * Instigate combat with any enemy, flee only if outmatched
       * </pre>
       */
      BRAVE(3, 3),
      /**
       * <code>RECKLESS = 4;</code>
       *
       * <pre>
       * Instigate combat with any enemy, never flees
       * </pre>
       */
      RECKLESS(4, 4),
      ;

      /**
       * <code>COWARDLY = 0;</code>
       *
       * <pre>
       * Never instigates combat, attempts to flee if engaged
       * </pre>
       */
      public static final int COWARDLY_VALUE = 0;
      /**
       * <code>CAUTIOUS = 1;</code>
       *
       * <pre>
       * Only instigate combat with low levels, flee high levels when engaged
       * </pre>
       */
      public static final int CAUTIOUS_VALUE = 1;
      /**
       * <code>CAPABLE = 2;</code>
       *
       * <pre>
       * Instigate with similar levels and below, flee from high levels when engaged
       * </pre>
       */
      public static final int CAPABLE_VALUE = 2;
      /**
       * <code>BRAVE = 3;</code>
       *
       * <pre>
       * Instigate combat with any enemy, flee only if outmatched
       * </pre>
       */
      public static final int BRAVE_VALUE = 3;
      /**
       * <code>RECKLESS = 4;</code>
       *
       * <pre>
       * Instigate combat with any enemy, never flees
       * </pre>
       */
      public static final int RECKLESS_VALUE = 4;


      public final int getNumber() { return value; }

      public static Confidence valueOf(int value) {
        switch (value) {
          case 0: return COWARDLY;
          case 1: return CAUTIOUS;
          case 2: return CAPABLE;
          case 3: return BRAVE;
          case 4: return RECKLESS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Confidence>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Confidence>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Confidence>() {
              public Confidence findValueByNumber(int number) {
                return Confidence.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.NonPlayerActor.getDescriptor().getEnumTypes().get(2);
      }

      private static final Confidence[] VALUES = values();

      public static Confidence valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Confidence(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:scifirpg.NonPlayerActor.Confidence)
    }

    public interface TraitOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required .scifirpg.Influence influence = 1;
      /**
       * <code>required .scifirpg.Influence influence = 1;</code>
       */
      boolean hasInfluence();
      /**
       * <code>required .scifirpg.Influence influence = 1;</code>
       */
      com.eldritch.invoken.proto.Disciplines.Influence getInfluence();

      // required bool effective = 2;
      /**
       * <code>required bool effective = 2;</code>
       */
      boolean hasEffective();
      /**
       * <code>required bool effective = 2;</code>
       */
      boolean getEffective();
    }
    /**
     * Protobuf type {@code scifirpg.NonPlayerActor.Trait}
     */
    public static final class Trait extends
        com.google.protobuf.GeneratedMessage
        implements TraitOrBuilder {
      // Use Trait.newBuilder() to construct.
      private Trait(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Trait(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Trait defaultInstance;
      public static Trait getDefaultInstance() {
        return defaultInstance;
      }

      public Trait getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Trait(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.eldritch.invoken.proto.Disciplines.Influence value = com.eldritch.invoken.proto.Disciplines.Influence.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  influence_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                effective_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_Trait_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_Trait_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.class, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder.class);
      }

      public static com.google.protobuf.Parser<Trait> PARSER =
          new com.google.protobuf.AbstractParser<Trait>() {
        public Trait parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Trait(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Trait> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required .scifirpg.Influence influence = 1;
      public static final int INFLUENCE_FIELD_NUMBER = 1;
      private com.eldritch.invoken.proto.Disciplines.Influence influence_;
      /**
       * <code>required .scifirpg.Influence influence = 1;</code>
       */
      public boolean hasInfluence() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .scifirpg.Influence influence = 1;</code>
       */
      public com.eldritch.invoken.proto.Disciplines.Influence getInfluence() {
        return influence_;
      }

      // required bool effective = 2;
      public static final int EFFECTIVE_FIELD_NUMBER = 2;
      private boolean effective_;
      /**
       * <code>required bool effective = 2;</code>
       */
      public boolean hasEffective() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool effective = 2;</code>
       */
      public boolean getEffective() {
        return effective_;
      }

      private void initFields() {
        influence_ = com.eldritch.invoken.proto.Disciplines.Influence.PERSUASION;
        effective_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasInfluence()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasEffective()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, influence_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, effective_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, influence_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, effective_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.NonPlayerActor.Trait}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_Trait_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_Trait_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.class, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder.class);
        }

        // Construct using com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          influence_ = com.eldritch.invoken.proto.Disciplines.Influence.PERSUASION;
          bitField0_ = (bitField0_ & ~0x00000001);
          effective_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_Trait_descriptor;
        }

        public com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait build() {
          com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait buildPartial() {
          com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait result = new com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.influence_ = influence_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.effective_ = effective_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait) {
            return mergeFrom((com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait other) {
          if (other == com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.getDefaultInstance()) return this;
          if (other.hasInfluence()) {
            setInfluence(other.getInfluence());
          }
          if (other.hasEffective()) {
            setEffective(other.getEffective());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasInfluence()) {
            
            return false;
          }
          if (!hasEffective()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required .scifirpg.Influence influence = 1;
        private com.eldritch.invoken.proto.Disciplines.Influence influence_ = com.eldritch.invoken.proto.Disciplines.Influence.PERSUASION;
        /**
         * <code>required .scifirpg.Influence influence = 1;</code>
         */
        public boolean hasInfluence() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .scifirpg.Influence influence = 1;</code>
         */
        public com.eldritch.invoken.proto.Disciplines.Influence getInfluence() {
          return influence_;
        }
        /**
         * <code>required .scifirpg.Influence influence = 1;</code>
         */
        public Builder setInfluence(com.eldritch.invoken.proto.Disciplines.Influence value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          influence_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .scifirpg.Influence influence = 1;</code>
         */
        public Builder clearInfluence() {
          bitField0_ = (bitField0_ & ~0x00000001);
          influence_ = com.eldritch.invoken.proto.Disciplines.Influence.PERSUASION;
          onChanged();
          return this;
        }

        // required bool effective = 2;
        private boolean effective_ ;
        /**
         * <code>required bool effective = 2;</code>
         */
        public boolean hasEffective() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bool effective = 2;</code>
         */
        public boolean getEffective() {
          return effective_;
        }
        /**
         * <code>required bool effective = 2;</code>
         */
        public Builder setEffective(boolean value) {
          bitField0_ |= 0x00000002;
          effective_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool effective = 2;</code>
         */
        public Builder clearEffective() {
          bitField0_ = (bitField0_ & ~0x00000002);
          effective_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.NonPlayerActor.Trait)
      }

      static {
        defaultInstance = new Trait(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.NonPlayerActor.Trait)
    }

    private int bitField0_;
    // required .scifirpg.ActorParams params = 1;
    public static final int PARAMS_FIELD_NUMBER = 1;
    private com.eldritch.invoken.proto.Actors.ActorParams params_;
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    public boolean hasParams() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams getParams() {
      return params_;
    }
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder getParamsOrBuilder() {
      return params_;
    }

    // required bool unique = 2 [default = false];
    public static final int UNIQUE_FIELD_NUMBER = 2;
    private boolean unique_;
    /**
     * <code>required bool unique = 2 [default = false];</code>
     */
    public boolean hasUnique() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool unique = 2 [default = false];</code>
     */
    public boolean getUnique() {
      return unique_;
    }

    // required bool can_speak = 3 [default = true];
    public static final int CAN_SPEAK_FIELD_NUMBER = 3;
    private boolean canSpeak_;
    /**
     * <code>required bool can_speak = 3 [default = true];</code>
     */
    public boolean hasCanSpeak() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool can_speak = 3 [default = true];</code>
     */
    public boolean getCanSpeak() {
      return canSpeak_;
    }

    // optional .scifirpg.DialogueTree dialogue = 4;
    public static final int DIALOGUE_FIELD_NUMBER = 4;
    private com.eldritch.invoken.proto.Actors.DialogueTree dialogue_;
    /**
     * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
     */
    public boolean hasDialogue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
     */
    public com.eldritch.invoken.proto.Actors.DialogueTree getDialogue() {
      return dialogue_;
    }
    /**
     * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
     */
    public com.eldritch.invoken.proto.Actors.DialogueTreeOrBuilder getDialogueOrBuilder() {
      return dialogue_;
    }

    // optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];
    public static final int AGGRESSION_FIELD_NUMBER = 5;
    private com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression aggression_;
    /**
     * <code>optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];</code>
     */
    public boolean hasAggression() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];</code>
     */
    public com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression getAggression() {
      return aggression_;
    }

    // optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];
    public static final int ASSISTANCE_FIELD_NUMBER = 6;
    private com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance assistance_;
    /**
     * <code>optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];</code>
     */
    public boolean hasAssistance() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];</code>
     */
    public com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance getAssistance() {
      return assistance_;
    }

    // optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];
    public static final int CONFIDENCE_FIELD_NUMBER = 7;
    private com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence confidence_;
    /**
     * <code>optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];</code>
     */
    public boolean hasConfidence() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];</code>
     */
    public com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence getConfidence() {
      return confidence_;
    }

    // repeated .scifirpg.NonPlayerActor.Trait trait = 8;
    public static final int TRAIT_FIELD_NUMBER = 8;
    private java.util.List<com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait> trait_;
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    public java.util.List<com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait> getTraitList() {
      return trait_;
    }
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder> 
        getTraitOrBuilderList() {
      return trait_;
    }
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    public int getTraitCount() {
      return trait_.size();
    }
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    public com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait getTrait(int index) {
      return trait_.get(index);
    }
    /**
     * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
     */
    public com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder getTraitOrBuilder(
        int index) {
      return trait_.get(index);
    }

    private void initFields() {
      params_ = com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
      unique_ = false;
      canSpeak_ = true;
      dialogue_ = com.eldritch.invoken.proto.Actors.DialogueTree.getDefaultInstance();
      aggression_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression.AGGRESSIVE;
      assistance_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance.LOYAL;
      confidence_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence.CAPABLE;
      trait_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasParams()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnique()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCanSpeak()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getParams().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasDialogue()) {
        if (!getDialogue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTraitCount(); i++) {
        if (!getTrait(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, params_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, unique_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, canSpeak_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, dialogue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, aggression_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, assistance_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, confidence_.getNumber());
      }
      for (int i = 0; i < trait_.size(); i++) {
        output.writeMessage(8, trait_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, params_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, unique_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, canSpeak_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, dialogue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, aggression_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, assistance_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, confidence_.getNumber());
      }
      for (int i = 0; i < trait_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, trait_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.NonPlayerActor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eldritch.invoken.proto.Actors.NonPlayerActor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code scifirpg.NonPlayerActor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eldritch.invoken.proto.Actors.NonPlayerActorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.NonPlayerActor.class, com.eldritch.invoken.proto.Actors.NonPlayerActor.Builder.class);
      }

      // Construct using com.eldritch.invoken.proto.Actors.NonPlayerActor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParamsFieldBuilder();
          getDialogueFieldBuilder();
          getTraitFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (paramsBuilder_ == null) {
          params_ = com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
        } else {
          paramsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        unique_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        canSpeak_ = true;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (dialogueBuilder_ == null) {
          dialogue_ = com.eldritch.invoken.proto.Actors.DialogueTree.getDefaultInstance();
        } else {
          dialogueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        aggression_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression.AGGRESSIVE;
        bitField0_ = (bitField0_ & ~0x00000010);
        assistance_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance.LOYAL;
        bitField0_ = (bitField0_ & ~0x00000020);
        confidence_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence.CAPABLE;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (traitBuilder_ == null) {
          trait_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          traitBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_NonPlayerActor_descriptor;
      }

      public com.eldritch.invoken.proto.Actors.NonPlayerActor getDefaultInstanceForType() {
        return com.eldritch.invoken.proto.Actors.NonPlayerActor.getDefaultInstance();
      }

      public com.eldritch.invoken.proto.Actors.NonPlayerActor build() {
        com.eldritch.invoken.proto.Actors.NonPlayerActor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldritch.invoken.proto.Actors.NonPlayerActor buildPartial() {
        com.eldritch.invoken.proto.Actors.NonPlayerActor result = new com.eldritch.invoken.proto.Actors.NonPlayerActor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (paramsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = paramsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.unique_ = unique_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.canSpeak_ = canSpeak_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (dialogueBuilder_ == null) {
          result.dialogue_ = dialogue_;
        } else {
          result.dialogue_ = dialogueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.aggression_ = aggression_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.assistance_ = assistance_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.confidence_ = confidence_;
        if (traitBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            trait_ = java.util.Collections.unmodifiableList(trait_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.trait_ = trait_;
        } else {
          result.trait_ = traitBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldritch.invoken.proto.Actors.NonPlayerActor) {
          return mergeFrom((com.eldritch.invoken.proto.Actors.NonPlayerActor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldritch.invoken.proto.Actors.NonPlayerActor other) {
        if (other == com.eldritch.invoken.proto.Actors.NonPlayerActor.getDefaultInstance()) return this;
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        if (other.hasUnique()) {
          setUnique(other.getUnique());
        }
        if (other.hasCanSpeak()) {
          setCanSpeak(other.getCanSpeak());
        }
        if (other.hasDialogue()) {
          mergeDialogue(other.getDialogue());
        }
        if (other.hasAggression()) {
          setAggression(other.getAggression());
        }
        if (other.hasAssistance()) {
          setAssistance(other.getAssistance());
        }
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        if (traitBuilder_ == null) {
          if (!other.trait_.isEmpty()) {
            if (trait_.isEmpty()) {
              trait_ = other.trait_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureTraitIsMutable();
              trait_.addAll(other.trait_);
            }
            onChanged();
          }
        } else {
          if (!other.trait_.isEmpty()) {
            if (traitBuilder_.isEmpty()) {
              traitBuilder_.dispose();
              traitBuilder_ = null;
              trait_ = other.trait_;
              bitField0_ = (bitField0_ & ~0x00000080);
              traitBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTraitFieldBuilder() : null;
            } else {
              traitBuilder_.addAllMessages(other.trait_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasParams()) {
          
          return false;
        }
        if (!hasUnique()) {
          
          return false;
        }
        if (!hasCanSpeak()) {
          
          return false;
        }
        if (!getParams().isInitialized()) {
          
          return false;
        }
        if (hasDialogue()) {
          if (!getDialogue().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTraitCount(); i++) {
          if (!getTrait(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldritch.invoken.proto.Actors.NonPlayerActor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldritch.invoken.proto.Actors.NonPlayerActor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .scifirpg.ActorParams params = 1;
      private com.eldritch.invoken.proto.Actors.ActorParams params_ = com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams, com.eldritch.invoken.proto.Actors.ActorParams.Builder, com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder> paramsBuilder_;
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public boolean hasParams() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams getParams() {
        if (paramsBuilder_ == null) {
          return params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public Builder setParams(com.eldritch.invoken.proto.Actors.ActorParams value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
          onChanged();
        } else {
          paramsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public Builder setParams(
          com.eldritch.invoken.proto.Actors.ActorParams.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
          onChanged();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public Builder mergeParams(com.eldritch.invoken.proto.Actors.ActorParams value) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              params_ != com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance()) {
            params_ =
              com.eldritch.invoken.proto.Actors.ActorParams.newBuilder(params_).mergeFrom(value).buildPartial();
          } else {
            params_ = value;
          }
          onChanged();
        } else {
          paramsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public Builder clearParams() {
        if (paramsBuilder_ == null) {
          params_ = com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
          onChanged();
        } else {
          paramsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.Builder getParamsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_;
        }
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams, com.eldritch.invoken.proto.Actors.ActorParams.Builder, com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.eldritch.invoken.proto.Actors.ActorParams, com.eldritch.invoken.proto.Actors.ActorParams.Builder, com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder>(
                  params_,
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      // required bool unique = 2 [default = false];
      private boolean unique_ ;
      /**
       * <code>required bool unique = 2 [default = false];</code>
       */
      public boolean hasUnique() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool unique = 2 [default = false];</code>
       */
      public boolean getUnique() {
        return unique_;
      }
      /**
       * <code>required bool unique = 2 [default = false];</code>
       */
      public Builder setUnique(boolean value) {
        bitField0_ |= 0x00000002;
        unique_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool unique = 2 [default = false];</code>
       */
      public Builder clearUnique() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unique_ = false;
        onChanged();
        return this;
      }

      // required bool can_speak = 3 [default = true];
      private boolean canSpeak_ = true;
      /**
       * <code>required bool can_speak = 3 [default = true];</code>
       */
      public boolean hasCanSpeak() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool can_speak = 3 [default = true];</code>
       */
      public boolean getCanSpeak() {
        return canSpeak_;
      }
      /**
       * <code>required bool can_speak = 3 [default = true];</code>
       */
      public Builder setCanSpeak(boolean value) {
        bitField0_ |= 0x00000004;
        canSpeak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool can_speak = 3 [default = true];</code>
       */
      public Builder clearCanSpeak() {
        bitField0_ = (bitField0_ & ~0x00000004);
        canSpeak_ = true;
        onChanged();
        return this;
      }

      // optional .scifirpg.DialogueTree dialogue = 4;
      private com.eldritch.invoken.proto.Actors.DialogueTree dialogue_ = com.eldritch.invoken.proto.Actors.DialogueTree.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.eldritch.invoken.proto.Actors.DialogueTree, com.eldritch.invoken.proto.Actors.DialogueTree.Builder, com.eldritch.invoken.proto.Actors.DialogueTreeOrBuilder> dialogueBuilder_;
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      public boolean hasDialogue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree getDialogue() {
        if (dialogueBuilder_ == null) {
          return dialogue_;
        } else {
          return dialogueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      public Builder setDialogue(com.eldritch.invoken.proto.Actors.DialogueTree value) {
        if (dialogueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dialogue_ = value;
          onChanged();
        } else {
          dialogueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      public Builder setDialogue(
          com.eldritch.invoken.proto.Actors.DialogueTree.Builder builderForValue) {
        if (dialogueBuilder_ == null) {
          dialogue_ = builderForValue.build();
          onChanged();
        } else {
          dialogueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      public Builder mergeDialogue(com.eldritch.invoken.proto.Actors.DialogueTree value) {
        if (dialogueBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              dialogue_ != com.eldritch.invoken.proto.Actors.DialogueTree.getDefaultInstance()) {
            dialogue_ =
              com.eldritch.invoken.proto.Actors.DialogueTree.newBuilder(dialogue_).mergeFrom(value).buildPartial();
          } else {
            dialogue_ = value;
          }
          onChanged();
        } else {
          dialogueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      public Builder clearDialogue() {
        if (dialogueBuilder_ == null) {
          dialogue_ = com.eldritch.invoken.proto.Actors.DialogueTree.getDefaultInstance();
          onChanged();
        } else {
          dialogueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTree.Builder getDialogueBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDialogueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      public com.eldritch.invoken.proto.Actors.DialogueTreeOrBuilder getDialogueOrBuilder() {
        if (dialogueBuilder_ != null) {
          return dialogueBuilder_.getMessageOrBuilder();
        } else {
          return dialogue_;
        }
      }
      /**
       * <code>optional .scifirpg.DialogueTree dialogue = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.eldritch.invoken.proto.Actors.DialogueTree, com.eldritch.invoken.proto.Actors.DialogueTree.Builder, com.eldritch.invoken.proto.Actors.DialogueTreeOrBuilder> 
          getDialogueFieldBuilder() {
        if (dialogueBuilder_ == null) {
          dialogueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.eldritch.invoken.proto.Actors.DialogueTree, com.eldritch.invoken.proto.Actors.DialogueTree.Builder, com.eldritch.invoken.proto.Actors.DialogueTreeOrBuilder>(
                  dialogue_,
                  getParentForChildren(),
                  isClean());
          dialogue_ = null;
        }
        return dialogueBuilder_;
      }

      // optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];
      private com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression aggression_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression.AGGRESSIVE;
      /**
       * <code>optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];</code>
       */
      public boolean hasAggression() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];</code>
       */
      public com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression getAggression() {
        return aggression_;
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];</code>
       */
      public Builder setAggression(com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        aggression_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Aggression aggression = 5 [default = AGGRESSIVE];</code>
       */
      public Builder clearAggression() {
        bitField0_ = (bitField0_ & ~0x00000010);
        aggression_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Aggression.AGGRESSIVE;
        onChanged();
        return this;
      }

      // optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];
      private com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance assistance_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance.LOYAL;
      /**
       * <code>optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];</code>
       */
      public boolean hasAssistance() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];</code>
       */
      public com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance getAssistance() {
        return assistance_;
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];</code>
       */
      public Builder setAssistance(com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        assistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Assistance assistance = 6 [default = LOYAL];</code>
       */
      public Builder clearAssistance() {
        bitField0_ = (bitField0_ & ~0x00000020);
        assistance_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Assistance.LOYAL;
        onChanged();
        return this;
      }

      // optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];
      private com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence confidence_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence.CAPABLE;
      /**
       * <code>optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];</code>
       */
      public boolean hasConfidence() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];</code>
       */
      public com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence getConfidence() {
        return confidence_;
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];</code>
       */
      public Builder setConfidence(com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .scifirpg.NonPlayerActor.Confidence confidence = 7 [default = CAPABLE];</code>
       */
      public Builder clearConfidence() {
        bitField0_ = (bitField0_ & ~0x00000040);
        confidence_ = com.eldritch.invoken.proto.Actors.NonPlayerActor.Confidence.CAPABLE;
        onChanged();
        return this;
      }

      // repeated .scifirpg.NonPlayerActor.Trait trait = 8;
      private java.util.List<com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait> trait_ =
        java.util.Collections.emptyList();
      private void ensureTraitIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          trait_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait>(trait_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder, com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder> traitBuilder_;

      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait> getTraitList() {
        if (traitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trait_);
        } else {
          return traitBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public int getTraitCount() {
        if (traitBuilder_ == null) {
          return trait_.size();
        } else {
          return traitBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait getTrait(int index) {
        if (traitBuilder_ == null) {
          return trait_.get(index);
        } else {
          return traitBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder setTrait(
          int index, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait value) {
        if (traitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraitIsMutable();
          trait_.set(index, value);
          onChanged();
        } else {
          traitBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder setTrait(
          int index, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder builderForValue) {
        if (traitBuilder_ == null) {
          ensureTraitIsMutable();
          trait_.set(index, builderForValue.build());
          onChanged();
        } else {
          traitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder addTrait(com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait value) {
        if (traitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraitIsMutable();
          trait_.add(value);
          onChanged();
        } else {
          traitBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder addTrait(
          int index, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait value) {
        if (traitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraitIsMutable();
          trait_.add(index, value);
          onChanged();
        } else {
          traitBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder addTrait(
          com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder builderForValue) {
        if (traitBuilder_ == null) {
          ensureTraitIsMutable();
          trait_.add(builderForValue.build());
          onChanged();
        } else {
          traitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder addTrait(
          int index, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder builderForValue) {
        if (traitBuilder_ == null) {
          ensureTraitIsMutable();
          trait_.add(index, builderForValue.build());
          onChanged();
        } else {
          traitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder addAllTrait(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait> values) {
        if (traitBuilder_ == null) {
          ensureTraitIsMutable();
          super.addAll(values, trait_);
          onChanged();
        } else {
          traitBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder clearTrait() {
        if (traitBuilder_ == null) {
          trait_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          traitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public Builder removeTrait(int index) {
        if (traitBuilder_ == null) {
          ensureTraitIsMutable();
          trait_.remove(index);
          onChanged();
        } else {
          traitBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder getTraitBuilder(
          int index) {
        return getTraitFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder getTraitOrBuilder(
          int index) {
        if (traitBuilder_ == null) {
          return trait_.get(index);  } else {
          return traitBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder> 
           getTraitOrBuilderList() {
        if (traitBuilder_ != null) {
          return traitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trait_);
        }
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder addTraitBuilder() {
        return getTraitFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder addTraitBuilder(
          int index) {
        return getTraitFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.NonPlayerActor.Trait trait = 8;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder> 
           getTraitBuilderList() {
        return getTraitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder, com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder> 
          getTraitFieldBuilder() {
        if (traitBuilder_ == null) {
          traitBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait, com.eldritch.invoken.proto.Actors.NonPlayerActor.Trait.Builder, com.eldritch.invoken.proto.Actors.NonPlayerActor.TraitOrBuilder>(
                  trait_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          trait_ = null;
        }
        return traitBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:scifirpg.NonPlayerActor)
    }

    static {
      defaultInstance = new NonPlayerActor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scifirpg.NonPlayerActor)
  }

  public interface PlayerActorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .scifirpg.ActorParams params = 1;
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    boolean hasParams();
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParams getParams();
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder getParamsOrBuilder();

    // optional int32 health = 7;
    /**
     * <code>optional int32 health = 7;</code>
     *
     * <pre>
     * remaining, max health is calculated
     * </pre>
     */
    boolean hasHealth();
    /**
     * <code>optional int32 health = 7;</code>
     *
     * <pre>
     * remaining, max health is calculated
     * </pre>
     */
    int getHealth();

    // repeated string equipped_item_id = 21;
    /**
     * <code>repeated string equipped_item_id = 21;</code>
     *
     * <pre>
     * NPC: if not specified, inferred from inventory
     * </pre>
     */
    java.util.List<java.lang.String>
    getEquippedItemIdList();
    /**
     * <code>repeated string equipped_item_id = 21;</code>
     *
     * <pre>
     * NPC: if not specified, inferred from inventory
     * </pre>
     */
    int getEquippedItemIdCount();
    /**
     * <code>repeated string equipped_item_id = 21;</code>
     *
     * <pre>
     * NPC: if not specified, inferred from inventory
     * </pre>
     */
    java.lang.String getEquippedItemId(int index);
    /**
     * <code>repeated string equipped_item_id = 21;</code>
     *
     * <pre>
     * NPC: if not specified, inferred from inventory
     * </pre>
     */
    com.google.protobuf.ByteString
        getEquippedItemIdBytes(int index);

    // repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation> 
        getStagedAugmentationList();
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation getStagedAugmentation(int index);
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    int getStagedAugmentationCount();
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder> 
        getStagedAugmentationOrBuilderList();
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder getStagedAugmentationOrBuilder(
        int index);

    // repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker> 
        getStateMarkerList();
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker getStateMarker(int index);
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    int getStateMarkerCount();
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder> 
        getStateMarkerOrBuilderList();
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder getStateMarkerOrBuilder(
        int index);

    // repeated string known_npc = 20;
    /**
     * <code>repeated string known_npc = 20;</code>
     */
    java.util.List<java.lang.String>
    getKnownNpcList();
    /**
     * <code>repeated string known_npc = 20;</code>
     */
    int getKnownNpcCount();
    /**
     * <code>repeated string known_npc = 20;</code>
     */
    java.lang.String getKnownNpc(int index);
    /**
     * <code>repeated string known_npc = 20;</code>
     */
    com.google.protobuf.ByteString
        getKnownNpcBytes(int index);

    // repeated .scifirpg.Mission mission = 22;
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    java.util.List<com.eldritch.invoken.proto.Missions.Mission> 
        getMissionList();
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    com.eldritch.invoken.proto.Missions.Mission getMission(int index);
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    int getMissionCount();
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Missions.MissionOrBuilder> 
        getMissionOrBuilderList();
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    com.eldritch.invoken.proto.Missions.MissionOrBuilder getMissionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code scifirpg.PlayerActor}
   */
  public static final class PlayerActor extends
      com.google.protobuf.GeneratedMessage
      implements PlayerActorOrBuilder {
    // Use PlayerActor.newBuilder() to construct.
    private PlayerActor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerActor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerActor defaultInstance;
    public static PlayerActor getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerActor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerActor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.eldritch.invoken.proto.Actors.ActorParams.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = params_.toBuilder();
              }
              params_ = input.readMessage(com.eldritch.invoken.proto.Actors.ActorParams.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(params_);
                params_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000002;
              health_ = input.readInt32();
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                stagedAugmentation_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation>();
                mutable_bitField0_ |= 0x00000008;
              }
              stagedAugmentation_.add(input.readMessage(com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.PARSER, extensionRegistry));
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                stateMarker_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker>();
                mutable_bitField0_ |= 0x00000010;
              }
              stateMarker_.add(input.readMessage(com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.PARSER, extensionRegistry));
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                knownNpc_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000020;
              }
              knownNpc_.add(input.readBytes());
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                equippedItemId_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              equippedItemId_.add(input.readBytes());
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                mission_ = new java.util.ArrayList<com.eldritch.invoken.proto.Missions.Mission>();
                mutable_bitField0_ |= 0x00000040;
              }
              mission_.add(input.readMessage(com.eldritch.invoken.proto.Missions.Mission.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          stagedAugmentation_ = java.util.Collections.unmodifiableList(stagedAugmentation_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          stateMarker_ = java.util.Collections.unmodifiableList(stateMarker_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          knownNpc_ = new com.google.protobuf.UnmodifiableLazyStringList(knownNpc_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          equippedItemId_ = new com.google.protobuf.UnmodifiableLazyStringList(equippedItemId_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          mission_ = java.util.Collections.unmodifiableList(mission_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldritch.invoken.proto.Actors.PlayerActor.class, com.eldritch.invoken.proto.Actors.PlayerActor.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerActor> PARSER =
        new com.google.protobuf.AbstractParser<PlayerActor>() {
      public PlayerActor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerActor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerActor> getParserForType() {
      return PARSER;
    }

    public interface StagedAugmentationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string aug_id = 1;
      /**
       * <code>optional string aug_id = 1;</code>
       *
       * <pre>
       * Every aug has a slot requirement R.  By staging an aug, you fill up
       * R slots in the actor's slot bank.  Augs can be staged multiple times.
       * For every stage, an aug grants one use.
       * </pre>
       */
      boolean hasAugId();
      /**
       * <code>optional string aug_id = 1;</code>
       *
       * <pre>
       * Every aug has a slot requirement R.  By staging an aug, you fill up
       * R slots in the actor's slot bank.  Augs can be staged multiple times.
       * For every stage, an aug grants one use.
       * </pre>
       */
      java.lang.String getAugId();
      /**
       * <code>optional string aug_id = 1;</code>
       *
       * <pre>
       * Every aug has a slot requirement R.  By staging an aug, you fill up
       * R slots in the actor's slot bank.  Augs can be staged multiple times.
       * For every stage, an aug grants one use.
       * </pre>
       */
      com.google.protobuf.ByteString
          getAugIdBytes();

      // required int32 remaining_uses = 2;
      /**
       * <code>required int32 remaining_uses = 2;</code>
       */
      boolean hasRemainingUses();
      /**
       * <code>required int32 remaining_uses = 2;</code>
       */
      int getRemainingUses();

      // required int32 stages = 3;
      /**
       * <code>required int32 stages = 3;</code>
       */
      boolean hasStages();
      /**
       * <code>required int32 stages = 3;</code>
       */
      int getStages();
    }
    /**
     * Protobuf type {@code scifirpg.PlayerActor.StagedAugmentation}
     */
    public static final class StagedAugmentation extends
        com.google.protobuf.GeneratedMessage
        implements StagedAugmentationOrBuilder {
      // Use StagedAugmentation.newBuilder() to construct.
      private StagedAugmentation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private StagedAugmentation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final StagedAugmentation defaultInstance;
      public static StagedAugmentation getDefaultInstance() {
        return defaultInstance;
      }

      public StagedAugmentation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private StagedAugmentation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                augId_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                remainingUses_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                stages_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StagedAugmentation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StagedAugmentation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.class, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder.class);
      }

      public static com.google.protobuf.Parser<StagedAugmentation> PARSER =
          new com.google.protobuf.AbstractParser<StagedAugmentation>() {
        public StagedAugmentation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new StagedAugmentation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<StagedAugmentation> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string aug_id = 1;
      public static final int AUG_ID_FIELD_NUMBER = 1;
      private java.lang.Object augId_;
      /**
       * <code>optional string aug_id = 1;</code>
       *
       * <pre>
       * Every aug has a slot requirement R.  By staging an aug, you fill up
       * R slots in the actor's slot bank.  Augs can be staged multiple times.
       * For every stage, an aug grants one use.
       * </pre>
       */
      public boolean hasAugId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string aug_id = 1;</code>
       *
       * <pre>
       * Every aug has a slot requirement R.  By staging an aug, you fill up
       * R slots in the actor's slot bank.  Augs can be staged multiple times.
       * For every stage, an aug grants one use.
       * </pre>
       */
      public java.lang.String getAugId() {
        java.lang.Object ref = augId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            augId_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string aug_id = 1;</code>
       *
       * <pre>
       * Every aug has a slot requirement R.  By staging an aug, you fill up
       * R slots in the actor's slot bank.  Augs can be staged multiple times.
       * For every stage, an aug grants one use.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAugIdBytes() {
        java.lang.Object ref = augId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          augId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int32 remaining_uses = 2;
      public static final int REMAINING_USES_FIELD_NUMBER = 2;
      private int remainingUses_;
      /**
       * <code>required int32 remaining_uses = 2;</code>
       */
      public boolean hasRemainingUses() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 remaining_uses = 2;</code>
       */
      public int getRemainingUses() {
        return remainingUses_;
      }

      // required int32 stages = 3;
      public static final int STAGES_FIELD_NUMBER = 3;
      private int stages_;
      /**
       * <code>required int32 stages = 3;</code>
       */
      public boolean hasStages() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 stages = 3;</code>
       */
      public int getStages() {
        return stages_;
      }

      private void initFields() {
        augId_ = "";
        remainingUses_ = 0;
        stages_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasRemainingUses()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasStages()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getAugIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, remainingUses_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, stages_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getAugIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, remainingUses_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, stages_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.PlayerActor.StagedAugmentation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StagedAugmentation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StagedAugmentation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.class, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder.class);
        }

        // Construct using com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          augId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          remainingUses_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          stages_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StagedAugmentation_descriptor;
        }

        public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation build() {
          com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation buildPartial() {
          com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation result = new com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.augId_ = augId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.remainingUses_ = remainingUses_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.stages_ = stages_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation) {
            return mergeFrom((com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation other) {
          if (other == com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.getDefaultInstance()) return this;
          if (other.hasAugId()) {
            bitField0_ |= 0x00000001;
            augId_ = other.augId_;
            onChanged();
          }
          if (other.hasRemainingUses()) {
            setRemainingUses(other.getRemainingUses());
          }
          if (other.hasStages()) {
            setStages(other.getStages());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasRemainingUses()) {
            
            return false;
          }
          if (!hasStages()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string aug_id = 1;
        private java.lang.Object augId_ = "";
        /**
         * <code>optional string aug_id = 1;</code>
         *
         * <pre>
         * Every aug has a slot requirement R.  By staging an aug, you fill up
         * R slots in the actor's slot bank.  Augs can be staged multiple times.
         * For every stage, an aug grants one use.
         * </pre>
         */
        public boolean hasAugId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string aug_id = 1;</code>
         *
         * <pre>
         * Every aug has a slot requirement R.  By staging an aug, you fill up
         * R slots in the actor's slot bank.  Augs can be staged multiple times.
         * For every stage, an aug grants one use.
         * </pre>
         */
        public java.lang.String getAugId() {
          java.lang.Object ref = augId_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            augId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string aug_id = 1;</code>
         *
         * <pre>
         * Every aug has a slot requirement R.  By staging an aug, you fill up
         * R slots in the actor's slot bank.  Augs can be staged multiple times.
         * For every stage, an aug grants one use.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAugIdBytes() {
          java.lang.Object ref = augId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            augId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string aug_id = 1;</code>
         *
         * <pre>
         * Every aug has a slot requirement R.  By staging an aug, you fill up
         * R slots in the actor's slot bank.  Augs can be staged multiple times.
         * For every stage, an aug grants one use.
         * </pre>
         */
        public Builder setAugId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          augId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string aug_id = 1;</code>
         *
         * <pre>
         * Every aug has a slot requirement R.  By staging an aug, you fill up
         * R slots in the actor's slot bank.  Augs can be staged multiple times.
         * For every stage, an aug grants one use.
         * </pre>
         */
        public Builder clearAugId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          augId_ = getDefaultInstance().getAugId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string aug_id = 1;</code>
         *
         * <pre>
         * Every aug has a slot requirement R.  By staging an aug, you fill up
         * R slots in the actor's slot bank.  Augs can be staged multiple times.
         * For every stage, an aug grants one use.
         * </pre>
         */
        public Builder setAugIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          augId_ = value;
          onChanged();
          return this;
        }

        // required int32 remaining_uses = 2;
        private int remainingUses_ ;
        /**
         * <code>required int32 remaining_uses = 2;</code>
         */
        public boolean hasRemainingUses() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 remaining_uses = 2;</code>
         */
        public int getRemainingUses() {
          return remainingUses_;
        }
        /**
         * <code>required int32 remaining_uses = 2;</code>
         */
        public Builder setRemainingUses(int value) {
          bitField0_ |= 0x00000002;
          remainingUses_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 remaining_uses = 2;</code>
         */
        public Builder clearRemainingUses() {
          bitField0_ = (bitField0_ & ~0x00000002);
          remainingUses_ = 0;
          onChanged();
          return this;
        }

        // required int32 stages = 3;
        private int stages_ ;
        /**
         * <code>required int32 stages = 3;</code>
         */
        public boolean hasStages() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 stages = 3;</code>
         */
        public int getStages() {
          return stages_;
        }
        /**
         * <code>required int32 stages = 3;</code>
         */
        public Builder setStages(int value) {
          bitField0_ |= 0x00000004;
          stages_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 stages = 3;</code>
         */
        public Builder clearStages() {
          bitField0_ = (bitField0_ & ~0x00000004);
          stages_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.PlayerActor.StagedAugmentation)
      }

      static {
        defaultInstance = new StagedAugmentation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.PlayerActor.StagedAugmentation)
    }

    public interface StateMarkerOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1;
      /**
       * <code>required string name = 1;</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // required int32 count = 2 [default = 1];
      /**
       * <code>required int32 count = 2 [default = 1];</code>
       */
      boolean hasCount();
      /**
       * <code>required int32 count = 2 [default = 1];</code>
       */
      int getCount();
    }
    /**
     * Protobuf type {@code scifirpg.PlayerActor.StateMarker}
     */
    public static final class StateMarker extends
        com.google.protobuf.GeneratedMessage
        implements StateMarkerOrBuilder {
      // Use StateMarker.newBuilder() to construct.
      private StateMarker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private StateMarker(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final StateMarker defaultInstance;
      public static StateMarker getDefaultInstance() {
        return defaultInstance;
      }

      public StateMarker getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private StateMarker(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                count_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StateMarker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StateMarker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.class, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder.class);
      }

      public static com.google.protobuf.Parser<StateMarker> PARSER =
          new com.google.protobuf.AbstractParser<StateMarker>() {
        public StateMarker parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new StateMarker(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<StateMarker> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int32 count = 2 [default = 1];
      public static final int COUNT_FIELD_NUMBER = 2;
      private int count_;
      /**
       * <code>required int32 count = 2 [default = 1];</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 count = 2 [default = 1];</code>
       */
      public int getCount() {
        return count_;
      }

      private void initFields() {
        name_ = "";
        count_ = 1;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, count_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, count_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.PlayerActor.StateMarker}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StateMarker_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StateMarker_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.class, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder.class);
        }

        // Construct using com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          count_ = 1;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_StateMarker_descriptor;
        }

        public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker build() {
          com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker buildPartial() {
          com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker result = new com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.count_ = count_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker) {
            return mergeFrom((com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker other) {
          if (other == com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasCount()) {
            setCount(other.getCount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasCount()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1;
        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // required int32 count = 2 [default = 1];
        private int count_ = 1;
        /**
         * <code>required int32 count = 2 [default = 1];</code>
         */
        public boolean hasCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 count = 2 [default = 1];</code>
         */
        public int getCount() {
          return count_;
        }
        /**
         * <code>required int32 count = 2 [default = 1];</code>
         */
        public Builder setCount(int value) {
          bitField0_ |= 0x00000002;
          count_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 count = 2 [default = 1];</code>
         */
        public Builder clearCount() {
          bitField0_ = (bitField0_ & ~0x00000002);
          count_ = 1;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.PlayerActor.StateMarker)
      }

      static {
        defaultInstance = new StateMarker(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.PlayerActor.StateMarker)
    }

    private int bitField0_;
    // required .scifirpg.ActorParams params = 1;
    public static final int PARAMS_FIELD_NUMBER = 1;
    private com.eldritch.invoken.proto.Actors.ActorParams params_;
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    public boolean hasParams() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParams getParams() {
      return params_;
    }
    /**
     * <code>required .scifirpg.ActorParams params = 1;</code>
     */
    public com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder getParamsOrBuilder() {
      return params_;
    }

    // optional int32 health = 7;
    public static final int HEALTH_FIELD_NUMBER = 7;
    private int health_;
    /**
     * <code>optional int32 health = 7;</code>
     *
     * <pre>
     * remaining, max health is calculated
     * </pre>
     */
    public boolean hasHealth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 health = 7;</code>
     *
     * <pre>
     * remaining, max health is calculated
     * </pre>
     */
    public int getHealth() {
      return health_;
    }

    // repeated string equipped_item_id = 21;
    public static final int EQUIPPED_ITEM_ID_FIELD_NUMBER = 21;
    private com.google.protobuf.LazyStringList equippedItemId_;
    /**
     * <code>repeated string equipped_item_id = 21;</code>
     *
     * <pre>
     * NPC: if not specified, inferred from inventory
     * </pre>
     */
    public java.util.List<java.lang.String>
        getEquippedItemIdList() {
      return equippedItemId_;
    }
    /**
     * <code>repeated string equipped_item_id = 21;</code>
     *
     * <pre>
     * NPC: if not specified, inferred from inventory
     * </pre>
     */
    public int getEquippedItemIdCount() {
      return equippedItemId_.size();
    }
    /**
     * <code>repeated string equipped_item_id = 21;</code>
     *
     * <pre>
     * NPC: if not specified, inferred from inventory
     * </pre>
     */
    public java.lang.String getEquippedItemId(int index) {
      return equippedItemId_.get(index);
    }
    /**
     * <code>repeated string equipped_item_id = 21;</code>
     *
     * <pre>
     * NPC: if not specified, inferred from inventory
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEquippedItemIdBytes(int index) {
      return equippedItemId_.getByteString(index);
    }

    // repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;
    public static final int STAGED_AUGMENTATION_FIELD_NUMBER = 16;
    private java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation> stagedAugmentation_;
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    public java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation> getStagedAugmentationList() {
      return stagedAugmentation_;
    }
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder> 
        getStagedAugmentationOrBuilderList() {
      return stagedAugmentation_;
    }
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    public int getStagedAugmentationCount() {
      return stagedAugmentation_.size();
    }
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation getStagedAugmentation(int index) {
      return stagedAugmentation_.get(index);
    }
    /**
     * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
     *
     * <pre>
     * if not specified, inferred from known augs
     * </pre>
     */
    public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder getStagedAugmentationOrBuilder(
        int index) {
      return stagedAugmentation_.get(index);
    }

    // repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;
    public static final int STATE_MARKER_FIELD_NUMBER = 19;
    private java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker> stateMarker_;
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    public java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker> getStateMarkerList() {
      return stateMarker_;
    }
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder> 
        getStateMarkerOrBuilderList() {
      return stateMarker_;
    }
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    public int getStateMarkerCount() {
      return stateMarker_.size();
    }
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker getStateMarker(int index) {
      return stateMarker_.get(index);
    }
    /**
     * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
     */
    public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder getStateMarkerOrBuilder(
        int index) {
      return stateMarker_.get(index);
    }

    // repeated string known_npc = 20;
    public static final int KNOWN_NPC_FIELD_NUMBER = 20;
    private com.google.protobuf.LazyStringList knownNpc_;
    /**
     * <code>repeated string known_npc = 20;</code>
     */
    public java.util.List<java.lang.String>
        getKnownNpcList() {
      return knownNpc_;
    }
    /**
     * <code>repeated string known_npc = 20;</code>
     */
    public int getKnownNpcCount() {
      return knownNpc_.size();
    }
    /**
     * <code>repeated string known_npc = 20;</code>
     */
    public java.lang.String getKnownNpc(int index) {
      return knownNpc_.get(index);
    }
    /**
     * <code>repeated string known_npc = 20;</code>
     */
    public com.google.protobuf.ByteString
        getKnownNpcBytes(int index) {
      return knownNpc_.getByteString(index);
    }

    // repeated .scifirpg.Mission mission = 22;
    public static final int MISSION_FIELD_NUMBER = 22;
    private java.util.List<com.eldritch.invoken.proto.Missions.Mission> mission_;
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    public java.util.List<com.eldritch.invoken.proto.Missions.Mission> getMissionList() {
      return mission_;
    }
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Missions.MissionOrBuilder> 
        getMissionOrBuilderList() {
      return mission_;
    }
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    public int getMissionCount() {
      return mission_.size();
    }
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    public com.eldritch.invoken.proto.Missions.Mission getMission(int index) {
      return mission_.get(index);
    }
    /**
     * <code>repeated .scifirpg.Mission mission = 22;</code>
     */
    public com.eldritch.invoken.proto.Missions.MissionOrBuilder getMissionOrBuilder(
        int index) {
      return mission_.get(index);
    }

    private void initFields() {
      params_ = com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
      health_ = 0;
      equippedItemId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      stagedAugmentation_ = java.util.Collections.emptyList();
      stateMarker_ = java.util.Collections.emptyList();
      knownNpc_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      mission_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasParams()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getParams().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getStagedAugmentationCount(); i++) {
        if (!getStagedAugmentation(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getStateMarkerCount(); i++) {
        if (!getStateMarker(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMissionCount(); i++) {
        if (!getMission(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, params_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(7, health_);
      }
      for (int i = 0; i < stagedAugmentation_.size(); i++) {
        output.writeMessage(16, stagedAugmentation_.get(i));
      }
      for (int i = 0; i < stateMarker_.size(); i++) {
        output.writeMessage(19, stateMarker_.get(i));
      }
      for (int i = 0; i < knownNpc_.size(); i++) {
        output.writeBytes(20, knownNpc_.getByteString(i));
      }
      for (int i = 0; i < equippedItemId_.size(); i++) {
        output.writeBytes(21, equippedItemId_.getByteString(i));
      }
      for (int i = 0; i < mission_.size(); i++) {
        output.writeMessage(22, mission_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, params_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, health_);
      }
      for (int i = 0; i < stagedAugmentation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, stagedAugmentation_.get(i));
      }
      for (int i = 0; i < stateMarker_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, stateMarker_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < knownNpc_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(knownNpc_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getKnownNpcList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < equippedItemId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(equippedItemId_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getEquippedItemIdList().size();
      }
      for (int i = 0; i < mission_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, mission_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eldritch.invoken.proto.Actors.PlayerActor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Actors.PlayerActor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eldritch.invoken.proto.Actors.PlayerActor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code scifirpg.PlayerActor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eldritch.invoken.proto.Actors.PlayerActorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Actors.PlayerActor.class, com.eldritch.invoken.proto.Actors.PlayerActor.Builder.class);
      }

      // Construct using com.eldritch.invoken.proto.Actors.PlayerActor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParamsFieldBuilder();
          getStagedAugmentationFieldBuilder();
          getStateMarkerFieldBuilder();
          getMissionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (paramsBuilder_ == null) {
          params_ = com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
        } else {
          paramsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        health_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        equippedItemId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (stagedAugmentationBuilder_ == null) {
          stagedAugmentation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          stagedAugmentationBuilder_.clear();
        }
        if (stateMarkerBuilder_ == null) {
          stateMarker_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          stateMarkerBuilder_.clear();
        }
        knownNpc_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (missionBuilder_ == null) {
          mission_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          missionBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldritch.invoken.proto.Actors.internal_static_scifirpg_PlayerActor_descriptor;
      }

      public com.eldritch.invoken.proto.Actors.PlayerActor getDefaultInstanceForType() {
        return com.eldritch.invoken.proto.Actors.PlayerActor.getDefaultInstance();
      }

      public com.eldritch.invoken.proto.Actors.PlayerActor build() {
        com.eldritch.invoken.proto.Actors.PlayerActor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldritch.invoken.proto.Actors.PlayerActor buildPartial() {
        com.eldritch.invoken.proto.Actors.PlayerActor result = new com.eldritch.invoken.proto.Actors.PlayerActor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (paramsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = paramsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.health_ = health_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          equippedItemId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              equippedItemId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.equippedItemId_ = equippedItemId_;
        if (stagedAugmentationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            stagedAugmentation_ = java.util.Collections.unmodifiableList(stagedAugmentation_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.stagedAugmentation_ = stagedAugmentation_;
        } else {
          result.stagedAugmentation_ = stagedAugmentationBuilder_.build();
        }
        if (stateMarkerBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            stateMarker_ = java.util.Collections.unmodifiableList(stateMarker_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.stateMarker_ = stateMarker_;
        } else {
          result.stateMarker_ = stateMarkerBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          knownNpc_ = new com.google.protobuf.UnmodifiableLazyStringList(
              knownNpc_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.knownNpc_ = knownNpc_;
        if (missionBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            mission_ = java.util.Collections.unmodifiableList(mission_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.mission_ = mission_;
        } else {
          result.mission_ = missionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldritch.invoken.proto.Actors.PlayerActor) {
          return mergeFrom((com.eldritch.invoken.proto.Actors.PlayerActor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldritch.invoken.proto.Actors.PlayerActor other) {
        if (other == com.eldritch.invoken.proto.Actors.PlayerActor.getDefaultInstance()) return this;
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        if (other.hasHealth()) {
          setHealth(other.getHealth());
        }
        if (!other.equippedItemId_.isEmpty()) {
          if (equippedItemId_.isEmpty()) {
            equippedItemId_ = other.equippedItemId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEquippedItemIdIsMutable();
            equippedItemId_.addAll(other.equippedItemId_);
          }
          onChanged();
        }
        if (stagedAugmentationBuilder_ == null) {
          if (!other.stagedAugmentation_.isEmpty()) {
            if (stagedAugmentation_.isEmpty()) {
              stagedAugmentation_ = other.stagedAugmentation_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureStagedAugmentationIsMutable();
              stagedAugmentation_.addAll(other.stagedAugmentation_);
            }
            onChanged();
          }
        } else {
          if (!other.stagedAugmentation_.isEmpty()) {
            if (stagedAugmentationBuilder_.isEmpty()) {
              stagedAugmentationBuilder_.dispose();
              stagedAugmentationBuilder_ = null;
              stagedAugmentation_ = other.stagedAugmentation_;
              bitField0_ = (bitField0_ & ~0x00000008);
              stagedAugmentationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStagedAugmentationFieldBuilder() : null;
            } else {
              stagedAugmentationBuilder_.addAllMessages(other.stagedAugmentation_);
            }
          }
        }
        if (stateMarkerBuilder_ == null) {
          if (!other.stateMarker_.isEmpty()) {
            if (stateMarker_.isEmpty()) {
              stateMarker_ = other.stateMarker_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureStateMarkerIsMutable();
              stateMarker_.addAll(other.stateMarker_);
            }
            onChanged();
          }
        } else {
          if (!other.stateMarker_.isEmpty()) {
            if (stateMarkerBuilder_.isEmpty()) {
              stateMarkerBuilder_.dispose();
              stateMarkerBuilder_ = null;
              stateMarker_ = other.stateMarker_;
              bitField0_ = (bitField0_ & ~0x00000010);
              stateMarkerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStateMarkerFieldBuilder() : null;
            } else {
              stateMarkerBuilder_.addAllMessages(other.stateMarker_);
            }
          }
        }
        if (!other.knownNpc_.isEmpty()) {
          if (knownNpc_.isEmpty()) {
            knownNpc_ = other.knownNpc_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureKnownNpcIsMutable();
            knownNpc_.addAll(other.knownNpc_);
          }
          onChanged();
        }
        if (missionBuilder_ == null) {
          if (!other.mission_.isEmpty()) {
            if (mission_.isEmpty()) {
              mission_ = other.mission_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureMissionIsMutable();
              mission_.addAll(other.mission_);
            }
            onChanged();
          }
        } else {
          if (!other.mission_.isEmpty()) {
            if (missionBuilder_.isEmpty()) {
              missionBuilder_.dispose();
              missionBuilder_ = null;
              mission_ = other.mission_;
              bitField0_ = (bitField0_ & ~0x00000040);
              missionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMissionFieldBuilder() : null;
            } else {
              missionBuilder_.addAllMessages(other.mission_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasParams()) {
          
          return false;
        }
        if (!getParams().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getStagedAugmentationCount(); i++) {
          if (!getStagedAugmentation(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getStateMarkerCount(); i++) {
          if (!getStateMarker(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMissionCount(); i++) {
          if (!getMission(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldritch.invoken.proto.Actors.PlayerActor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldritch.invoken.proto.Actors.PlayerActor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .scifirpg.ActorParams params = 1;
      private com.eldritch.invoken.proto.Actors.ActorParams params_ = com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams, com.eldritch.invoken.proto.Actors.ActorParams.Builder, com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder> paramsBuilder_;
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public boolean hasParams() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams getParams() {
        if (paramsBuilder_ == null) {
          return params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public Builder setParams(com.eldritch.invoken.proto.Actors.ActorParams value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
          onChanged();
        } else {
          paramsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public Builder setParams(
          com.eldritch.invoken.proto.Actors.ActorParams.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
          onChanged();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public Builder mergeParams(com.eldritch.invoken.proto.Actors.ActorParams value) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              params_ != com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance()) {
            params_ =
              com.eldritch.invoken.proto.Actors.ActorParams.newBuilder(params_).mergeFrom(value).buildPartial();
          } else {
            params_ = value;
          }
          onChanged();
        } else {
          paramsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public Builder clearParams() {
        if (paramsBuilder_ == null) {
          params_ = com.eldritch.invoken.proto.Actors.ActorParams.getDefaultInstance();
          onChanged();
        } else {
          paramsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParams.Builder getParamsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      public com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_;
        }
      }
      /**
       * <code>required .scifirpg.ActorParams params = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.eldritch.invoken.proto.Actors.ActorParams, com.eldritch.invoken.proto.Actors.ActorParams.Builder, com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.eldritch.invoken.proto.Actors.ActorParams, com.eldritch.invoken.proto.Actors.ActorParams.Builder, com.eldritch.invoken.proto.Actors.ActorParamsOrBuilder>(
                  params_,
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      // optional int32 health = 7;
      private int health_ ;
      /**
       * <code>optional int32 health = 7;</code>
       *
       * <pre>
       * remaining, max health is calculated
       * </pre>
       */
      public boolean hasHealth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 health = 7;</code>
       *
       * <pre>
       * remaining, max health is calculated
       * </pre>
       */
      public int getHealth() {
        return health_;
      }
      /**
       * <code>optional int32 health = 7;</code>
       *
       * <pre>
       * remaining, max health is calculated
       * </pre>
       */
      public Builder setHealth(int value) {
        bitField0_ |= 0x00000002;
        health_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 health = 7;</code>
       *
       * <pre>
       * remaining, max health is calculated
       * </pre>
       */
      public Builder clearHealth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        health_ = 0;
        onChanged();
        return this;
      }

      // repeated string equipped_item_id = 21;
      private com.google.protobuf.LazyStringList equippedItemId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureEquippedItemIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          equippedItemId_ = new com.google.protobuf.LazyStringArrayList(equippedItemId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public java.util.List<java.lang.String>
          getEquippedItemIdList() {
        return java.util.Collections.unmodifiableList(equippedItemId_);
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public int getEquippedItemIdCount() {
        return equippedItemId_.size();
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public java.lang.String getEquippedItemId(int index) {
        return equippedItemId_.get(index);
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEquippedItemIdBytes(int index) {
        return equippedItemId_.getByteString(index);
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public Builder setEquippedItemId(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEquippedItemIdIsMutable();
        equippedItemId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public Builder addEquippedItemId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEquippedItemIdIsMutable();
        equippedItemId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public Builder addAllEquippedItemId(
          java.lang.Iterable<java.lang.String> values) {
        ensureEquippedItemIdIsMutable();
        super.addAll(values, equippedItemId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public Builder clearEquippedItemId() {
        equippedItemId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string equipped_item_id = 21;</code>
       *
       * <pre>
       * NPC: if not specified, inferred from inventory
       * </pre>
       */
      public Builder addEquippedItemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEquippedItemIdIsMutable();
        equippedItemId_.add(value);
        onChanged();
        return this;
      }

      // repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;
      private java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation> stagedAugmentation_ =
        java.util.Collections.emptyList();
      private void ensureStagedAugmentationIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          stagedAugmentation_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation>(stagedAugmentation_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder> stagedAugmentationBuilder_;

      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation> getStagedAugmentationList() {
        if (stagedAugmentationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stagedAugmentation_);
        } else {
          return stagedAugmentationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public int getStagedAugmentationCount() {
        if (stagedAugmentationBuilder_ == null) {
          return stagedAugmentation_.size();
        } else {
          return stagedAugmentationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation getStagedAugmentation(int index) {
        if (stagedAugmentationBuilder_ == null) {
          return stagedAugmentation_.get(index);
        } else {
          return stagedAugmentationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder setStagedAugmentation(
          int index, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation value) {
        if (stagedAugmentationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStagedAugmentationIsMutable();
          stagedAugmentation_.set(index, value);
          onChanged();
        } else {
          stagedAugmentationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder setStagedAugmentation(
          int index, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder builderForValue) {
        if (stagedAugmentationBuilder_ == null) {
          ensureStagedAugmentationIsMutable();
          stagedAugmentation_.set(index, builderForValue.build());
          onChanged();
        } else {
          stagedAugmentationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder addStagedAugmentation(com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation value) {
        if (stagedAugmentationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStagedAugmentationIsMutable();
          stagedAugmentation_.add(value);
          onChanged();
        } else {
          stagedAugmentationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder addStagedAugmentation(
          int index, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation value) {
        if (stagedAugmentationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStagedAugmentationIsMutable();
          stagedAugmentation_.add(index, value);
          onChanged();
        } else {
          stagedAugmentationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder addStagedAugmentation(
          com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder builderForValue) {
        if (stagedAugmentationBuilder_ == null) {
          ensureStagedAugmentationIsMutable();
          stagedAugmentation_.add(builderForValue.build());
          onChanged();
        } else {
          stagedAugmentationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder addStagedAugmentation(
          int index, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder builderForValue) {
        if (stagedAugmentationBuilder_ == null) {
          ensureStagedAugmentationIsMutable();
          stagedAugmentation_.add(index, builderForValue.build());
          onChanged();
        } else {
          stagedAugmentationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder addAllStagedAugmentation(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation> values) {
        if (stagedAugmentationBuilder_ == null) {
          ensureStagedAugmentationIsMutable();
          super.addAll(values, stagedAugmentation_);
          onChanged();
        } else {
          stagedAugmentationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder clearStagedAugmentation() {
        if (stagedAugmentationBuilder_ == null) {
          stagedAugmentation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          stagedAugmentationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public Builder removeStagedAugmentation(int index) {
        if (stagedAugmentationBuilder_ == null) {
          ensureStagedAugmentationIsMutable();
          stagedAugmentation_.remove(index);
          onChanged();
        } else {
          stagedAugmentationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder getStagedAugmentationBuilder(
          int index) {
        return getStagedAugmentationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder getStagedAugmentationOrBuilder(
          int index) {
        if (stagedAugmentationBuilder_ == null) {
          return stagedAugmentation_.get(index);  } else {
          return stagedAugmentationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder> 
           getStagedAugmentationOrBuilderList() {
        if (stagedAugmentationBuilder_ != null) {
          return stagedAugmentationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stagedAugmentation_);
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder addStagedAugmentationBuilder() {
        return getStagedAugmentationFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder addStagedAugmentationBuilder(
          int index) {
        return getStagedAugmentationFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StagedAugmentation staged_augmentation = 16;</code>
       *
       * <pre>
       * if not specified, inferred from known augs
       * </pre>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder> 
           getStagedAugmentationBuilderList() {
        return getStagedAugmentationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder> 
          getStagedAugmentationFieldBuilder() {
        if (stagedAugmentationBuilder_ == null) {
          stagedAugmentationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentation.Builder, com.eldritch.invoken.proto.Actors.PlayerActor.StagedAugmentationOrBuilder>(
                  stagedAugmentation_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          stagedAugmentation_ = null;
        }
        return stagedAugmentationBuilder_;
      }

      // repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;
      private java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker> stateMarker_ =
        java.util.Collections.emptyList();
      private void ensureStateMarkerIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          stateMarker_ = new java.util.ArrayList<com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker>(stateMarker_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder> stateMarkerBuilder_;

      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker> getStateMarkerList() {
        if (stateMarkerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stateMarker_);
        } else {
          return stateMarkerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public int getStateMarkerCount() {
        if (stateMarkerBuilder_ == null) {
          return stateMarker_.size();
        } else {
          return stateMarkerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker getStateMarker(int index) {
        if (stateMarkerBuilder_ == null) {
          return stateMarker_.get(index);
        } else {
          return stateMarkerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder setStateMarker(
          int index, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker value) {
        if (stateMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStateMarkerIsMutable();
          stateMarker_.set(index, value);
          onChanged();
        } else {
          stateMarkerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder setStateMarker(
          int index, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder builderForValue) {
        if (stateMarkerBuilder_ == null) {
          ensureStateMarkerIsMutable();
          stateMarker_.set(index, builderForValue.build());
          onChanged();
        } else {
          stateMarkerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder addStateMarker(com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker value) {
        if (stateMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStateMarkerIsMutable();
          stateMarker_.add(value);
          onChanged();
        } else {
          stateMarkerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder addStateMarker(
          int index, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker value) {
        if (stateMarkerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStateMarkerIsMutable();
          stateMarker_.add(index, value);
          onChanged();
        } else {
          stateMarkerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder addStateMarker(
          com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder builderForValue) {
        if (stateMarkerBuilder_ == null) {
          ensureStateMarkerIsMutable();
          stateMarker_.add(builderForValue.build());
          onChanged();
        } else {
          stateMarkerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder addStateMarker(
          int index, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder builderForValue) {
        if (stateMarkerBuilder_ == null) {
          ensureStateMarkerIsMutable();
          stateMarker_.add(index, builderForValue.build());
          onChanged();
        } else {
          stateMarkerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder addAllStateMarker(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker> values) {
        if (stateMarkerBuilder_ == null) {
          ensureStateMarkerIsMutable();
          super.addAll(values, stateMarker_);
          onChanged();
        } else {
          stateMarkerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder clearStateMarker() {
        if (stateMarkerBuilder_ == null) {
          stateMarker_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          stateMarkerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public Builder removeStateMarker(int index) {
        if (stateMarkerBuilder_ == null) {
          ensureStateMarkerIsMutable();
          stateMarker_.remove(index);
          onChanged();
        } else {
          stateMarkerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder getStateMarkerBuilder(
          int index) {
        return getStateMarkerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder getStateMarkerOrBuilder(
          int index) {
        if (stateMarkerBuilder_ == null) {
          return stateMarker_.get(index);  } else {
          return stateMarkerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder> 
           getStateMarkerOrBuilderList() {
        if (stateMarkerBuilder_ != null) {
          return stateMarkerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stateMarker_);
        }
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder addStateMarkerBuilder() {
        return getStateMarkerFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder addStateMarkerBuilder(
          int index) {
        return getStateMarkerFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.PlayerActor.StateMarker state_marker = 19;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder> 
           getStateMarkerBuilderList() {
        return getStateMarkerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder> 
          getStateMarkerFieldBuilder() {
        if (stateMarkerBuilder_ == null) {
          stateMarkerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarker.Builder, com.eldritch.invoken.proto.Actors.PlayerActor.StateMarkerOrBuilder>(
                  stateMarker_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          stateMarker_ = null;
        }
        return stateMarkerBuilder_;
      }

      // repeated string known_npc = 20;
      private com.google.protobuf.LazyStringList knownNpc_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKnownNpcIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          knownNpc_ = new com.google.protobuf.LazyStringArrayList(knownNpc_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public java.util.List<java.lang.String>
          getKnownNpcList() {
        return java.util.Collections.unmodifiableList(knownNpc_);
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public int getKnownNpcCount() {
        return knownNpc_.size();
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public java.lang.String getKnownNpc(int index) {
        return knownNpc_.get(index);
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public com.google.protobuf.ByteString
          getKnownNpcBytes(int index) {
        return knownNpc_.getByteString(index);
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public Builder setKnownNpc(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKnownNpcIsMutable();
        knownNpc_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public Builder addKnownNpc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKnownNpcIsMutable();
        knownNpc_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public Builder addAllKnownNpc(
          java.lang.Iterable<java.lang.String> values) {
        ensureKnownNpcIsMutable();
        super.addAll(values, knownNpc_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public Builder clearKnownNpc() {
        knownNpc_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string known_npc = 20;</code>
       */
      public Builder addKnownNpcBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKnownNpcIsMutable();
        knownNpc_.add(value);
        onChanged();
        return this;
      }

      // repeated .scifirpg.Mission mission = 22;
      private java.util.List<com.eldritch.invoken.proto.Missions.Mission> mission_ =
        java.util.Collections.emptyList();
      private void ensureMissionIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          mission_ = new java.util.ArrayList<com.eldritch.invoken.proto.Missions.Mission>(mission_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Missions.Mission, com.eldritch.invoken.proto.Missions.Mission.Builder, com.eldritch.invoken.proto.Missions.MissionOrBuilder> missionBuilder_;

      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Missions.Mission> getMissionList() {
        if (missionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mission_);
        } else {
          return missionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public int getMissionCount() {
        if (missionBuilder_ == null) {
          return mission_.size();
        } else {
          return missionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public com.eldritch.invoken.proto.Missions.Mission getMission(int index) {
        if (missionBuilder_ == null) {
          return mission_.get(index);
        } else {
          return missionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder setMission(
          int index, com.eldritch.invoken.proto.Missions.Mission value) {
        if (missionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionIsMutable();
          mission_.set(index, value);
          onChanged();
        } else {
          missionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder setMission(
          int index, com.eldritch.invoken.proto.Missions.Mission.Builder builderForValue) {
        if (missionBuilder_ == null) {
          ensureMissionIsMutable();
          mission_.set(index, builderForValue.build());
          onChanged();
        } else {
          missionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder addMission(com.eldritch.invoken.proto.Missions.Mission value) {
        if (missionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionIsMutable();
          mission_.add(value);
          onChanged();
        } else {
          missionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder addMission(
          int index, com.eldritch.invoken.proto.Missions.Mission value) {
        if (missionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissionIsMutable();
          mission_.add(index, value);
          onChanged();
        } else {
          missionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder addMission(
          com.eldritch.invoken.proto.Missions.Mission.Builder builderForValue) {
        if (missionBuilder_ == null) {
          ensureMissionIsMutable();
          mission_.add(builderForValue.build());
          onChanged();
        } else {
          missionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder addMission(
          int index, com.eldritch.invoken.proto.Missions.Mission.Builder builderForValue) {
        if (missionBuilder_ == null) {
          ensureMissionIsMutable();
          mission_.add(index, builderForValue.build());
          onChanged();
        } else {
          missionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder addAllMission(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Missions.Mission> values) {
        if (missionBuilder_ == null) {
          ensureMissionIsMutable();
          super.addAll(values, mission_);
          onChanged();
        } else {
          missionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder clearMission() {
        if (missionBuilder_ == null) {
          mission_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          missionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public Builder removeMission(int index) {
        if (missionBuilder_ == null) {
          ensureMissionIsMutable();
          mission_.remove(index);
          onChanged();
        } else {
          missionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public com.eldritch.invoken.proto.Missions.Mission.Builder getMissionBuilder(
          int index) {
        return getMissionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public com.eldritch.invoken.proto.Missions.MissionOrBuilder getMissionOrBuilder(
          int index) {
        if (missionBuilder_ == null) {
          return mission_.get(index);  } else {
          return missionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Missions.MissionOrBuilder> 
           getMissionOrBuilderList() {
        if (missionBuilder_ != null) {
          return missionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mission_);
        }
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public com.eldritch.invoken.proto.Missions.Mission.Builder addMissionBuilder() {
        return getMissionFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Missions.Mission.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public com.eldritch.invoken.proto.Missions.Mission.Builder addMissionBuilder(
          int index) {
        return getMissionFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Missions.Mission.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.Mission mission = 22;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Missions.Mission.Builder> 
           getMissionBuilderList() {
        return getMissionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Missions.Mission, com.eldritch.invoken.proto.Missions.Mission.Builder, com.eldritch.invoken.proto.Missions.MissionOrBuilder> 
          getMissionFieldBuilder() {
        if (missionBuilder_ == null) {
          missionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Missions.Mission, com.eldritch.invoken.proto.Missions.Mission.Builder, com.eldritch.invoken.proto.Missions.MissionOrBuilder>(
                  mission_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          mission_ = null;
        }
        return missionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:scifirpg.PlayerActor)
    }

    static {
      defaultInstance = new PlayerActor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scifirpg.PlayerActor)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_DialogueTree_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_DialogueTree_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_DialogueTree_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_DialogueTree_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_DialogueTree_Choice_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_DialogueTree_Choice_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_ActorParams_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_ActorParams_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_ActorParams_Skill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_ActorParams_Skill_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_ActorParams_FactionStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_ActorParams_FactionStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_ActorParams_InventoryItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_ActorParams_InventoryItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_NonPlayerActor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_NonPlayerActor_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_NonPlayerActor_Trait_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_NonPlayerActor_Trait_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_PlayerActor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_PlayerActor_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_PlayerActor_StagedAugmentation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_PlayerActor_StagedAugmentation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_PlayerActor_StateMarker_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_PlayerActor_StateMarker_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'com/eldritch/invoken/proto/actors.prot" +
      "o\022\010scifirpg\032,com/eldritch/invoken/proto/" +
      "disciplines.proto\032.com/eldritch/invoken/" +
      "proto/prerequisites.proto\032)com/eldritch/" +
      "invoken/proto/missions.proto\032)com/eldrit" +
      "ch/invoken/proto/outcomes.proto\"\370\002\n\014Dial" +
      "ogueTree\0221\n\010dialogue\030\001 \003(\0132\037.scifirpg.Di" +
      "alogueTree.Response\032\313\001\n\010Response\022\n\n\002id\030\001" +
      " \001(\t\022\014\n\004text\030\002 \002(\t\022&\n\006prereq\030\003 \003(\0132\026.sci" +
      "firpg.Prerequisite\022-\n\006choice\030\004 \003(\0132\035.sci",
      "firpg.DialogueTree.Choice\022\"\n\007outcome\030\005 \003" +
      "(\0132\021.scifirpg.Outcome\022\027\n\010greeting\030\006 \002(\010:" +
      "\005false\022\021\n\006weight\030\007 \001(\005:\0010\032g\n\006Choice\022\014\n\004t" +
      "ext\030\001 \002(\t\022&\n\006prereq\030\002 \003(\0132\026.scifirpg.Pre" +
      "requisite\022\024\n\014successor_id\030\003 \003(\t\022\021\n\006weigh" +
      "t\030\004 \001(\005:\0010\"\320\005\n\013ActorParams\022\n\n\002id\030\001 \001(\t\022\014" +
      "\n\004name\030\002 \002(\t\022.\n\007species\030\003 \002(\0162\035.scifirpg" +
      ".ActorParams.Species\022,\n\006gender\030\004 \001(\0162\034.s" +
      "cifirpg.ActorParams.Gender\022(\n\nprofession" +
      "\030\005 \001(\0162\024.scifirpg.Profession\022\r\n\005level\030\006 ",
      "\002(\005\022*\n\005skill\030\007 \003(\0132\033.scifirpg.ActorParam" +
      "s.Skill\022;\n\016faction_status\030\010 \003(\0132#.scifir" +
      "pg.ActorParams.FactionStatus\022;\n\016inventor" +
      "y_item\030\t \003(\0132#.scifirpg.ActorParams.Inve" +
      "ntoryItem\022\024\n\014known_aug_id\030\n \003(\t\032L\n\005Skill" +
      "\022(\n\ndiscipline\030\001 \002(\0162\024.scifirpg.Discipli" +
      "ne\022\r\n\005level\030\002 \002(\005\022\n\n\002xp\030\003 \001(\005\032E\n\rFaction" +
      "Status\022\022\n\nfaction_id\030\001 \001(\t\022\022\n\nreputation" +
      "\030\002 \001(\005\022\014\n\004rank\030\003 \001(\005\032J\n\rInventoryItem\022\017\n" +
      "\007item_id\030\001 \001(\t\022\020\n\005count\030\002 \002(\005:\0011\022\026\n\013drop",
      "_chance\030\003 \001(\001:\0011\"S\n\007Species\022\t\n\005HUMAN\020\000\022\t" +
      "\n\005BEAST\020\001\022\r\n\tAUTOMATON\020\002\022\n\n\006UNDEAD\020\003\022\013\n\007" +
      "INVOKEN\020\004\022\n\n\006HOLLOW\020\005\"\036\n\006Gender\022\010\n\004MALE\020" +
      "\000\022\n\n\006FEMALE\020\001\"\252\005\n\016NonPlayerActor\022%\n\006para" +
      "ms\030\001 \002(\0132\025.scifirpg.ActorParams\022\025\n\006uniqu" +
      "e\030\002 \002(\010:\005false\022\027\n\tcan_speak\030\003 \002(\010:\004true\022" +
      "(\n\010dialogue\030\004 \001(\0132\026.scifirpg.DialogueTre" +
      "e\022C\n\naggression\030\005 \001(\0162#.scifirpg.NonPlay" +
      "erActor.Aggression:\nAGGRESSIVE\022>\n\nassist" +
      "ance\030\006 \001(\0162#.scifirpg.NonPlayerActor.Ass",
      "istance:\005LOYAL\022@\n\nconfidence\030\007 \001(\0162#.sci" +
      "firpg.NonPlayerActor.Confidence:\007CAPABLE" +
      "\022-\n\005trait\030\010 \003(\0132\036.scifirpg.NonPlayerActo" +
      "r.Trait\032B\n\005Trait\022&\n\tinfluence\030\001 \002(\0162\023.sc" +
      "ifirpg.Influence\022\021\n\teffective\030\002 \002(\010\"W\n\nA" +
      "ggression\022\014\n\010PACIFIST\020\000\022\020\n\014UNAGGRESSIVE\020" +
      "\001\022\016\n\nAGGRESSIVE\020\002\022\013\n\007HOSTILE\020\003\022\014\n\010FRENZI" +
      "ED\020\004\"4\n\nAssistance\022\014\n\010DETACHED\020\000\022\t\n\005LOYA" +
      "L\020\001\022\r\n\tCHIVALRIC\020\002\"N\n\nConfidence\022\014\n\010COWA" +
      "RDLY\020\000\022\014\n\010CAUTIOUS\020\001\022\013\n\007CAPABLE\020\002\022\t\n\005BRA",
      "VE\020\003\022\014\n\010RECKLESS\020\004\"\222\003\n\013PlayerActor\022%\n\006pa" +
      "rams\030\001 \002(\0132\025.scifirpg.ActorParams\022\016\n\006hea" +
      "lth\030\007 \001(\005\022\030\n\020equipped_item_id\030\025 \003(\t\022E\n\023s" +
      "taged_augmentation\030\020 \003(\0132(.scifirpg.Play" +
      "erActor.StagedAugmentation\0227\n\014state_mark" +
      "er\030\023 \003(\0132!.scifirpg.PlayerActor.StateMar" +
      "ker\022\021\n\tknown_npc\030\024 \003(\t\022\"\n\007mission\030\026 \003(\0132" +
      "\021.scifirpg.Mission\032L\n\022StagedAugmentation" +
      "\022\016\n\006aug_id\030\001 \001(\t\022\026\n\016remaining_uses\030\002 \002(\005" +
      "\022\016\n\006stages\030\003 \002(\005\032-\n\013StateMarker\022\014\n\004name\030",
      "\001 \002(\t\022\020\n\005count\030\002 \002(\005:\0011B\034\n\032com.eldritch." +
      "invoken.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_scifirpg_DialogueTree_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_scifirpg_DialogueTree_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_DialogueTree_descriptor,
              new java.lang.String[] { "Dialogue", });
          internal_static_scifirpg_DialogueTree_Response_descriptor =
            internal_static_scifirpg_DialogueTree_descriptor.getNestedTypes().get(0);
          internal_static_scifirpg_DialogueTree_Response_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_DialogueTree_Response_descriptor,
              new java.lang.String[] { "Id", "Text", "Prereq", "Choice", "Outcome", "Greeting", "Weight", });
          internal_static_scifirpg_DialogueTree_Choice_descriptor =
            internal_static_scifirpg_DialogueTree_descriptor.getNestedTypes().get(1);
          internal_static_scifirpg_DialogueTree_Choice_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_DialogueTree_Choice_descriptor,
              new java.lang.String[] { "Text", "Prereq", "SuccessorId", "Weight", });
          internal_static_scifirpg_ActorParams_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_scifirpg_ActorParams_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_ActorParams_descriptor,
              new java.lang.String[] { "Id", "Name", "Species", "Gender", "Profession", "Level", "Skill", "FactionStatus", "InventoryItem", "KnownAugId", });
          internal_static_scifirpg_ActorParams_Skill_descriptor =
            internal_static_scifirpg_ActorParams_descriptor.getNestedTypes().get(0);
          internal_static_scifirpg_ActorParams_Skill_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_ActorParams_Skill_descriptor,
              new java.lang.String[] { "Discipline", "Level", "Xp", });
          internal_static_scifirpg_ActorParams_FactionStatus_descriptor =
            internal_static_scifirpg_ActorParams_descriptor.getNestedTypes().get(1);
          internal_static_scifirpg_ActorParams_FactionStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_ActorParams_FactionStatus_descriptor,
              new java.lang.String[] { "FactionId", "Reputation", "Rank", });
          internal_static_scifirpg_ActorParams_InventoryItem_descriptor =
            internal_static_scifirpg_ActorParams_descriptor.getNestedTypes().get(2);
          internal_static_scifirpg_ActorParams_InventoryItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_ActorParams_InventoryItem_descriptor,
              new java.lang.String[] { "ItemId", "Count", "DropChance", });
          internal_static_scifirpg_NonPlayerActor_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_scifirpg_NonPlayerActor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_NonPlayerActor_descriptor,
              new java.lang.String[] { "Params", "Unique", "CanSpeak", "Dialogue", "Aggression", "Assistance", "Confidence", "Trait", });
          internal_static_scifirpg_NonPlayerActor_Trait_descriptor =
            internal_static_scifirpg_NonPlayerActor_descriptor.getNestedTypes().get(0);
          internal_static_scifirpg_NonPlayerActor_Trait_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_NonPlayerActor_Trait_descriptor,
              new java.lang.String[] { "Influence", "Effective", });
          internal_static_scifirpg_PlayerActor_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_scifirpg_PlayerActor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_PlayerActor_descriptor,
              new java.lang.String[] { "Params", "Health", "EquippedItemId", "StagedAugmentation", "StateMarker", "KnownNpc", "Mission", });
          internal_static_scifirpg_PlayerActor_StagedAugmentation_descriptor =
            internal_static_scifirpg_PlayerActor_descriptor.getNestedTypes().get(0);
          internal_static_scifirpg_PlayerActor_StagedAugmentation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_PlayerActor_StagedAugmentation_descriptor,
              new java.lang.String[] { "AugId", "RemainingUses", "Stages", });
          internal_static_scifirpg_PlayerActor_StateMarker_descriptor =
            internal_static_scifirpg_PlayerActor_descriptor.getNestedTypes().get(1);
          internal_static_scifirpg_PlayerActor_StateMarker_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_PlayerActor_StateMarker_descriptor,
              new java.lang.String[] { "Name", "Count", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.eldritch.invoken.proto.Disciplines.getDescriptor(),
          com.eldritch.invoken.proto.Prerequisites.getDescriptor(),
          com.eldritch.invoken.proto.Missions.getDescriptor(),
          com.eldritch.invoken.proto.Outcomes.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
