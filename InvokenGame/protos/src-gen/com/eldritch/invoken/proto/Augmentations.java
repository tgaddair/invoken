// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/eldritch/scifirpg/proto/augmentations.proto

package com.eldritch.invoken.proto;

public final class Augmentations {
  private Augmentations() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AugmentationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string id = 1;
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * unique key
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * unique key
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * unique key
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string description = 3;
    /**
     * <code>required string description = 3;</code>
     */
    boolean hasDescription();
    /**
     * <code>required string description = 3;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>required string description = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    // required int32 value = 4;
    /**
     * <code>required int32 value = 4;</code>
     */
    boolean hasValue();
    /**
     * <code>required int32 value = 4;</code>
     */
    int getValue();

    // required .scifirpg.Augmentation.Type type = 5;
    /**
     * <code>required .scifirpg.Augmentation.Type type = 5;</code>
     */
    boolean hasType();
    /**
     * <code>required .scifirpg.Augmentation.Type type = 5;</code>
     */
    com.eldritch.invoken.proto.Augmentations.Augmentation.Type getType();

    // optional int32 subtype_id = 6;
    /**
     * <code>optional int32 subtype_id = 6;</code>
     */
    boolean hasSubtypeId();
    /**
     * <code>optional int32 subtype_id = 6;</code>
     */
    int getSubtypeId();

    // repeated .scifirpg.Augmentation.Requirement requirement = 7;
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    java.util.List<com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement> 
        getRequirementList();
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement getRequirement(int index);
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    int getRequirementCount();
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder> 
        getRequirementOrBuilderList();
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder getRequirementOrBuilder(
        int index);

    // repeated .scifirpg.Effect effect = 8;
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    java.util.List<com.eldritch.invoken.proto.Effects.Effect> 
        getEffectList();
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    com.eldritch.invoken.proto.Effects.Effect getEffect(int index);
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    int getEffectCount();
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    java.util.List<? extends com.eldritch.invoken.proto.Effects.EffectOrBuilder> 
        getEffectOrBuilderList();
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    com.eldritch.invoken.proto.Effects.EffectOrBuilder getEffectOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code scifirpg.Augmentation}
   */
  public static final class Augmentation extends
      com.google.protobuf.GeneratedMessage
      implements AugmentationOrBuilder {
    // Use Augmentation.newBuilder() to construct.
    private Augmentation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Augmentation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Augmentation defaultInstance;
    public static Augmentation getDefaultInstance() {
      return defaultInstance;
    }

    public Augmentation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Augmentation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              description_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              value_ = input.readInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.eldritch.invoken.proto.Augmentations.Augmentation.Type value = com.eldritch.invoken.proto.Augmentations.Augmentation.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                type_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              subtypeId_ = input.readInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                requirement_ = new java.util.ArrayList<com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement>();
                mutable_bitField0_ |= 0x00000040;
              }
              requirement_.add(input.readMessage(com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                effect_ = new java.util.ArrayList<com.eldritch.invoken.proto.Effects.Effect>();
                mutable_bitField0_ |= 0x00000080;
              }
              effect_.add(input.readMessage(com.eldritch.invoken.proto.Effects.Effect.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          requirement_ = java.util.Collections.unmodifiableList(requirement_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          effect_ = java.util.Collections.unmodifiableList(effect_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldritch.invoken.proto.Augmentations.Augmentation.class, com.eldritch.invoken.proto.Augmentations.Augmentation.Builder.class);
    }

    public static com.google.protobuf.Parser<Augmentation> PARSER =
        new com.google.protobuf.AbstractParser<Augmentation>() {
      public Augmentation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Augmentation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Augmentation> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code scifirpg.Augmentation.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ATTACK = 0;</code>
       *
       * <pre>
       * Playable to make hostile
       * </pre>
       */
      ATTACK(0, 0),
      /**
       * <code>DECEIVE = 1;</code>
       *
       * <pre>
       * Playable when not detected
       * </pre>
       */
      DECEIVE(1, 1),
      /**
       * <code>EXECUTE = 2;</code>
       *
       * <pre>
       * Playable in encounter
       * </pre>
       */
      EXECUTE(2, 2),
      /**
       * <code>DIALOGUE = 3;</code>
       *
       * <pre>
       * Playable in dialogue
       * </pre>
       */
      DIALOGUE(3, 3),
      /**
       * <code>COUNTER = 4;</code>
       *
       * <pre>
       * Playable when targeted
       * </pre>
       */
      COUNTER(4, 4),
      /**
       * <code>TRAP = 5;</code>
       *
       * <pre>
       * Playable at any time, activates when targeted and effect applies
       * </pre>
       */
      TRAP(5, 5),
      /**
       * <code>PASSIVE = 6;</code>
       *
       * <pre>
       * Playable when attuning outside encounter
       * </pre>
       */
      PASSIVE(6, 6),
      ;

      /**
       * <code>ATTACK = 0;</code>
       *
       * <pre>
       * Playable to make hostile
       * </pre>
       */
      public static final int ATTACK_VALUE = 0;
      /**
       * <code>DECEIVE = 1;</code>
       *
       * <pre>
       * Playable when not detected
       * </pre>
       */
      public static final int DECEIVE_VALUE = 1;
      /**
       * <code>EXECUTE = 2;</code>
       *
       * <pre>
       * Playable in encounter
       * </pre>
       */
      public static final int EXECUTE_VALUE = 2;
      /**
       * <code>DIALOGUE = 3;</code>
       *
       * <pre>
       * Playable in dialogue
       * </pre>
       */
      public static final int DIALOGUE_VALUE = 3;
      /**
       * <code>COUNTER = 4;</code>
       *
       * <pre>
       * Playable when targeted
       * </pre>
       */
      public static final int COUNTER_VALUE = 4;
      /**
       * <code>TRAP = 5;</code>
       *
       * <pre>
       * Playable at any time, activates when targeted and effect applies
       * </pre>
       */
      public static final int TRAP_VALUE = 5;
      /**
       * <code>PASSIVE = 6;</code>
       *
       * <pre>
       * Playable when attuning outside encounter
       * </pre>
       */
      public static final int PASSIVE_VALUE = 6;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return ATTACK;
          case 1: return DECEIVE;
          case 2: return EXECUTE;
          case 3: return DIALOGUE;
          case 4: return COUNTER;
          case 5: return TRAP;
          case 6: return PASSIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Augmentations.Augmentation.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:scifirpg.Augmentation.Type)
    }

    public interface RequirementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required .scifirpg.Discipline discipline = 1;
      /**
       * <code>required .scifirpg.Discipline discipline = 1;</code>
       */
      boolean hasDiscipline();
      /**
       * <code>required .scifirpg.Discipline discipline = 1;</code>
       */
      com.eldritch.invoken.proto.Disciplines.Discipline getDiscipline();

      // required int32 value = 2;
      /**
       * <code>required int32 value = 2;</code>
       */
      boolean hasValue();
      /**
       * <code>required int32 value = 2;</code>
       */
      int getValue();

      // required int32 slots = 3;
      /**
       * <code>required int32 slots = 3;</code>
       */
      boolean hasSlots();
      /**
       * <code>required int32 slots = 3;</code>
       */
      int getSlots();
    }
    /**
     * Protobuf type {@code scifirpg.Augmentation.Requirement}
     */
    public static final class Requirement extends
        com.google.protobuf.GeneratedMessage
        implements RequirementOrBuilder {
      // Use Requirement.newBuilder() to construct.
      private Requirement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Requirement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Requirement defaultInstance;
      public static Requirement getDefaultInstance() {
        return defaultInstance;
      }

      public Requirement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Requirement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.eldritch.invoken.proto.Disciplines.Discipline value = com.eldritch.invoken.proto.Disciplines.Discipline.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  discipline_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                value_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                slots_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_Requirement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_Requirement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.class, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder.class);
      }

      public static com.google.protobuf.Parser<Requirement> PARSER =
          new com.google.protobuf.AbstractParser<Requirement>() {
        public Requirement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Requirement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Requirement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required .scifirpg.Discipline discipline = 1;
      public static final int DISCIPLINE_FIELD_NUMBER = 1;
      private com.eldritch.invoken.proto.Disciplines.Discipline discipline_;
      /**
       * <code>required .scifirpg.Discipline discipline = 1;</code>
       */
      public boolean hasDiscipline() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .scifirpg.Discipline discipline = 1;</code>
       */
      public com.eldritch.invoken.proto.Disciplines.Discipline getDiscipline() {
        return discipline_;
      }

      // required int32 value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private int value_;
      /**
       * <code>required int32 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 value = 2;</code>
       */
      public int getValue() {
        return value_;
      }

      // required int32 slots = 3;
      public static final int SLOTS_FIELD_NUMBER = 3;
      private int slots_;
      /**
       * <code>required int32 slots = 3;</code>
       */
      public boolean hasSlots() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 slots = 3;</code>
       */
      public int getSlots() {
        return slots_;
      }

      private void initFields() {
        discipline_ = com.eldritch.invoken.proto.Disciplines.Discipline.WARFARE;
        value_ = 0;
        slots_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasDiscipline()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSlots()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, discipline_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, value_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, slots_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, discipline_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, value_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, slots_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code scifirpg.Augmentation.Requirement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_Requirement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_Requirement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.class, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder.class);
        }

        // Construct using com.eldritch.scifirpg.proto.Augmentations.Augmentation.Requirement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          discipline_ = com.eldritch.invoken.proto.Disciplines.Discipline.WARFARE;
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          slots_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_Requirement_descriptor;
        }

        public com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement getDefaultInstanceForType() {
          return com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.getDefaultInstance();
        }

        public com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement build() {
          com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement buildPartial() {
          com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement result = new com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.discipline_ = discipline_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.slots_ = slots_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement) {
            return mergeFrom((com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement other) {
          if (other == com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.getDefaultInstance()) return this;
          if (other.hasDiscipline()) {
            setDiscipline(other.getDiscipline());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          if (other.hasSlots()) {
            setSlots(other.getSlots());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasDiscipline()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          if (!hasSlots()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required .scifirpg.Discipline discipline = 1;
        private com.eldritch.invoken.proto.Disciplines.Discipline discipline_ = com.eldritch.invoken.proto.Disciplines.Discipline.WARFARE;
        /**
         * <code>required .scifirpg.Discipline discipline = 1;</code>
         */
        public boolean hasDiscipline() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .scifirpg.Discipline discipline = 1;</code>
         */
        public com.eldritch.invoken.proto.Disciplines.Discipline getDiscipline() {
          return discipline_;
        }
        /**
         * <code>required .scifirpg.Discipline discipline = 1;</code>
         */
        public Builder setDiscipline(com.eldritch.invoken.proto.Disciplines.Discipline value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          discipline_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .scifirpg.Discipline discipline = 1;</code>
         */
        public Builder clearDiscipline() {
          bitField0_ = (bitField0_ & ~0x00000001);
          discipline_ = com.eldritch.invoken.proto.Disciplines.Discipline.WARFARE;
          onChanged();
          return this;
        }

        // required int32 value = 2;
        private int value_ ;
        /**
         * <code>required int32 value = 2;</code>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 value = 2;</code>
         */
        public int getValue() {
          return value_;
        }
        /**
         * <code>required int32 value = 2;</code>
         */
        public Builder setValue(int value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 value = 2;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0;
          onChanged();
          return this;
        }

        // required int32 slots = 3;
        private int slots_ ;
        /**
         * <code>required int32 slots = 3;</code>
         */
        public boolean hasSlots() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 slots = 3;</code>
         */
        public int getSlots() {
          return slots_;
        }
        /**
         * <code>required int32 slots = 3;</code>
         */
        public Builder setSlots(int value) {
          bitField0_ |= 0x00000004;
          slots_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 slots = 3;</code>
         */
        public Builder clearSlots() {
          bitField0_ = (bitField0_ & ~0x00000004);
          slots_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:scifirpg.Augmentation.Requirement)
      }

      static {
        defaultInstance = new Requirement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:scifirpg.Augmentation.Requirement)
    }

    private int bitField0_;
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * unique key
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * unique key
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * unique key
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string description = 3;
    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private java.lang.Object description_;
    /**
     * <code>required string description = 3;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string description = 3;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 value = 4;
    public static final int VALUE_FIELD_NUMBER = 4;
    private int value_;
    /**
     * <code>required int32 value = 4;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 value = 4;</code>
     */
    public int getValue() {
      return value_;
    }

    // required .scifirpg.Augmentation.Type type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private com.eldritch.invoken.proto.Augmentations.Augmentation.Type type_;
    /**
     * <code>required .scifirpg.Augmentation.Type type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .scifirpg.Augmentation.Type type = 5;</code>
     */
    public com.eldritch.invoken.proto.Augmentations.Augmentation.Type getType() {
      return type_;
    }

    // optional int32 subtype_id = 6;
    public static final int SUBTYPE_ID_FIELD_NUMBER = 6;
    private int subtypeId_;
    /**
     * <code>optional int32 subtype_id = 6;</code>
     */
    public boolean hasSubtypeId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 subtype_id = 6;</code>
     */
    public int getSubtypeId() {
      return subtypeId_;
    }

    // repeated .scifirpg.Augmentation.Requirement requirement = 7;
    public static final int REQUIREMENT_FIELD_NUMBER = 7;
    private java.util.List<com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement> requirement_;
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    public java.util.List<com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement> getRequirementList() {
      return requirement_;
    }
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder> 
        getRequirementOrBuilderList() {
      return requirement_;
    }
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    public int getRequirementCount() {
      return requirement_.size();
    }
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    public com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement getRequirement(int index) {
      return requirement_.get(index);
    }
    /**
     * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
     */
    public com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder getRequirementOrBuilder(
        int index) {
      return requirement_.get(index);
    }

    // repeated .scifirpg.Effect effect = 8;
    public static final int EFFECT_FIELD_NUMBER = 8;
    private java.util.List<com.eldritch.invoken.proto.Effects.Effect> effect_;
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    public java.util.List<com.eldritch.invoken.proto.Effects.Effect> getEffectList() {
      return effect_;
    }
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    public java.util.List<? extends com.eldritch.invoken.proto.Effects.EffectOrBuilder> 
        getEffectOrBuilderList() {
      return effect_;
    }
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    public int getEffectCount() {
      return effect_.size();
    }
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    public com.eldritch.invoken.proto.Effects.Effect getEffect(int index) {
      return effect_.get(index);
    }
    /**
     * <code>repeated .scifirpg.Effect effect = 8;</code>
     */
    public com.eldritch.invoken.proto.Effects.EffectOrBuilder getEffectOrBuilder(
        int index) {
      return effect_.get(index);
    }

    private void initFields() {
      id_ = "";
      name_ = "";
      description_ = "";
      value_ = 0;
      type_ = com.eldritch.invoken.proto.Augmentations.Augmentation.Type.ATTACK;
      subtypeId_ = 0;
      requirement_ = java.util.Collections.emptyList();
      effect_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRequirementCount(); i++) {
        if (!getRequirement(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, value_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, type_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, subtypeId_);
      }
      for (int i = 0; i < requirement_.size(); i++) {
        output.writeMessage(7, requirement_.get(i));
      }
      for (int i = 0; i < effect_.size(); i++) {
        output.writeMessage(8, effect_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, value_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, type_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, subtypeId_);
      }
      for (int i = 0; i < requirement_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, requirement_.get(i));
      }
      for (int i = 0; i < effect_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, effect_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.eldritch.invoken.proto.Augmentations.Augmentation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.eldritch.invoken.proto.Augmentations.Augmentation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code scifirpg.Augmentation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.eldritch.invoken.proto.Augmentations.AugmentationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldritch.invoken.proto.Augmentations.Augmentation.class, com.eldritch.invoken.proto.Augmentations.Augmentation.Builder.class);
      }

      // Construct using com.eldritch.scifirpg.proto.Augmentations.Augmentation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRequirementFieldBuilder();
          getEffectFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = com.eldritch.invoken.proto.Augmentations.Augmentation.Type.ATTACK;
        bitField0_ = (bitField0_ & ~0x00000010);
        subtypeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (requirementBuilder_ == null) {
          requirement_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          requirementBuilder_.clear();
        }
        if (effectBuilder_ == null) {
          effect_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          effectBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldritch.invoken.proto.Augmentations.internal_static_scifirpg_Augmentation_descriptor;
      }

      public com.eldritch.invoken.proto.Augmentations.Augmentation getDefaultInstanceForType() {
        return com.eldritch.invoken.proto.Augmentations.Augmentation.getDefaultInstance();
      }

      public com.eldritch.invoken.proto.Augmentations.Augmentation build() {
        com.eldritch.invoken.proto.Augmentations.Augmentation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldritch.invoken.proto.Augmentations.Augmentation buildPartial() {
        com.eldritch.invoken.proto.Augmentations.Augmentation result = new com.eldritch.invoken.proto.Augmentations.Augmentation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.subtypeId_ = subtypeId_;
        if (requirementBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            requirement_ = java.util.Collections.unmodifiableList(requirement_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.requirement_ = requirement_;
        } else {
          result.requirement_ = requirementBuilder_.build();
        }
        if (effectBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            effect_ = java.util.Collections.unmodifiableList(effect_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.effect_ = effect_;
        } else {
          result.effect_ = effectBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldritch.invoken.proto.Augmentations.Augmentation) {
          return mergeFrom((com.eldritch.invoken.proto.Augmentations.Augmentation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldritch.invoken.proto.Augmentations.Augmentation other) {
        if (other == com.eldritch.invoken.proto.Augmentations.Augmentation.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000004;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSubtypeId()) {
          setSubtypeId(other.getSubtypeId());
        }
        if (requirementBuilder_ == null) {
          if (!other.requirement_.isEmpty()) {
            if (requirement_.isEmpty()) {
              requirement_ = other.requirement_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureRequirementIsMutable();
              requirement_.addAll(other.requirement_);
            }
            onChanged();
          }
        } else {
          if (!other.requirement_.isEmpty()) {
            if (requirementBuilder_.isEmpty()) {
              requirementBuilder_.dispose();
              requirementBuilder_ = null;
              requirement_ = other.requirement_;
              bitField0_ = (bitField0_ & ~0x00000040);
              requirementBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRequirementFieldBuilder() : null;
            } else {
              requirementBuilder_.addAllMessages(other.requirement_);
            }
          }
        }
        if (effectBuilder_ == null) {
          if (!other.effect_.isEmpty()) {
            if (effect_.isEmpty()) {
              effect_ = other.effect_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureEffectIsMutable();
              effect_.addAll(other.effect_);
            }
            onChanged();
          }
        } else {
          if (!other.effect_.isEmpty()) {
            if (effectBuilder_.isEmpty()) {
              effectBuilder_.dispose();
              effectBuilder_ = null;
              effect_ = other.effect_;
              bitField0_ = (bitField0_ & ~0x00000080);
              effectBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEffectFieldBuilder() : null;
            } else {
              effectBuilder_.addAllMessages(other.effect_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasDescription()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getRequirementCount(); i++) {
          if (!getRequirement(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldritch.invoken.proto.Augmentations.Augmentation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldritch.invoken.proto.Augmentations.Augmentation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * unique key
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * unique key
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * unique key
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * unique key
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * unique key
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * unique key
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required string description = 3;
      private java.lang.Object description_ = "";
      /**
       * <code>required string description = 3;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string description = 3;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string description = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string description = 3;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string description = 3;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000004);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>required string description = 3;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        description_ = value;
        onChanged();
        return this;
      }

      // required int32 value = 4;
      private int value_ ;
      /**
       * <code>required int32 value = 4;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 value = 4;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>required int32 value = 4;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000008;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 value = 4;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        value_ = 0;
        onChanged();
        return this;
      }

      // required .scifirpg.Augmentation.Type type = 5;
      private com.eldritch.invoken.proto.Augmentations.Augmentation.Type type_ = com.eldritch.invoken.proto.Augmentations.Augmentation.Type.ATTACK;
      /**
       * <code>required .scifirpg.Augmentation.Type type = 5;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .scifirpg.Augmentation.Type type = 5;</code>
       */
      public com.eldritch.invoken.proto.Augmentations.Augmentation.Type getType() {
        return type_;
      }
      /**
       * <code>required .scifirpg.Augmentation.Type type = 5;</code>
       */
      public Builder setType(com.eldritch.invoken.proto.Augmentations.Augmentation.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .scifirpg.Augmentation.Type type = 5;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = com.eldritch.invoken.proto.Augmentations.Augmentation.Type.ATTACK;
        onChanged();
        return this;
      }

      // optional int32 subtype_id = 6;
      private int subtypeId_ ;
      /**
       * <code>optional int32 subtype_id = 6;</code>
       */
      public boolean hasSubtypeId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 subtype_id = 6;</code>
       */
      public int getSubtypeId() {
        return subtypeId_;
      }
      /**
       * <code>optional int32 subtype_id = 6;</code>
       */
      public Builder setSubtypeId(int value) {
        bitField0_ |= 0x00000020;
        subtypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 subtype_id = 6;</code>
       */
      public Builder clearSubtypeId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        subtypeId_ = 0;
        onChanged();
        return this;
      }

      // repeated .scifirpg.Augmentation.Requirement requirement = 7;
      private java.util.List<com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement> requirement_ =
        java.util.Collections.emptyList();
      private void ensureRequirementIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          requirement_ = new java.util.ArrayList<com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement>(requirement_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder, com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder> requirementBuilder_;

      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement> getRequirementList() {
        if (requirementBuilder_ == null) {
          return java.util.Collections.unmodifiableList(requirement_);
        } else {
          return requirementBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public int getRequirementCount() {
        if (requirementBuilder_ == null) {
          return requirement_.size();
        } else {
          return requirementBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement getRequirement(int index) {
        if (requirementBuilder_ == null) {
          return requirement_.get(index);
        } else {
          return requirementBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder setRequirement(
          int index, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement value) {
        if (requirementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequirementIsMutable();
          requirement_.set(index, value);
          onChanged();
        } else {
          requirementBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder setRequirement(
          int index, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder builderForValue) {
        if (requirementBuilder_ == null) {
          ensureRequirementIsMutable();
          requirement_.set(index, builderForValue.build());
          onChanged();
        } else {
          requirementBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder addRequirement(com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement value) {
        if (requirementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequirementIsMutable();
          requirement_.add(value);
          onChanged();
        } else {
          requirementBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder addRequirement(
          int index, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement value) {
        if (requirementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequirementIsMutable();
          requirement_.add(index, value);
          onChanged();
        } else {
          requirementBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder addRequirement(
          com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder builderForValue) {
        if (requirementBuilder_ == null) {
          ensureRequirementIsMutable();
          requirement_.add(builderForValue.build());
          onChanged();
        } else {
          requirementBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder addRequirement(
          int index, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder builderForValue) {
        if (requirementBuilder_ == null) {
          ensureRequirementIsMutable();
          requirement_.add(index, builderForValue.build());
          onChanged();
        } else {
          requirementBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder addAllRequirement(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement> values) {
        if (requirementBuilder_ == null) {
          ensureRequirementIsMutable();
          super.addAll(values, requirement_);
          onChanged();
        } else {
          requirementBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder clearRequirement() {
        if (requirementBuilder_ == null) {
          requirement_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          requirementBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public Builder removeRequirement(int index) {
        if (requirementBuilder_ == null) {
          ensureRequirementIsMutable();
          requirement_.remove(index);
          onChanged();
        } else {
          requirementBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder getRequirementBuilder(
          int index) {
        return getRequirementFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder getRequirementOrBuilder(
          int index) {
        if (requirementBuilder_ == null) {
          return requirement_.get(index);  } else {
          return requirementBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder> 
           getRequirementOrBuilderList() {
        if (requirementBuilder_ != null) {
          return requirementBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(requirement_);
        }
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder addRequirementBuilder() {
        return getRequirementFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder addRequirementBuilder(
          int index) {
        return getRequirementFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.Augmentation.Requirement requirement = 7;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder> 
           getRequirementBuilderList() {
        return getRequirementFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder, com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder> 
          getRequirementFieldBuilder() {
        if (requirementBuilder_ == null) {
          requirementBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement, com.eldritch.invoken.proto.Augmentations.Augmentation.Requirement.Builder, com.eldritch.invoken.proto.Augmentations.Augmentation.RequirementOrBuilder>(
                  requirement_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          requirement_ = null;
        }
        return requirementBuilder_;
      }

      // repeated .scifirpg.Effect effect = 8;
      private java.util.List<com.eldritch.invoken.proto.Effects.Effect> effect_ =
        java.util.Collections.emptyList();
      private void ensureEffectIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          effect_ = new java.util.ArrayList<com.eldritch.invoken.proto.Effects.Effect>(effect_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Effects.Effect, com.eldritch.invoken.proto.Effects.Effect.Builder, com.eldritch.invoken.proto.Effects.EffectOrBuilder> effectBuilder_;

      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Effects.Effect> getEffectList() {
        if (effectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(effect_);
        } else {
          return effectBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public int getEffectCount() {
        if (effectBuilder_ == null) {
          return effect_.size();
        } else {
          return effectBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public com.eldritch.invoken.proto.Effects.Effect getEffect(int index) {
        if (effectBuilder_ == null) {
          return effect_.get(index);
        } else {
          return effectBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder setEffect(
          int index, com.eldritch.invoken.proto.Effects.Effect value) {
        if (effectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectIsMutable();
          effect_.set(index, value);
          onChanged();
        } else {
          effectBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder setEffect(
          int index, com.eldritch.invoken.proto.Effects.Effect.Builder builderForValue) {
        if (effectBuilder_ == null) {
          ensureEffectIsMutable();
          effect_.set(index, builderForValue.build());
          onChanged();
        } else {
          effectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder addEffect(com.eldritch.invoken.proto.Effects.Effect value) {
        if (effectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectIsMutable();
          effect_.add(value);
          onChanged();
        } else {
          effectBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder addEffect(
          int index, com.eldritch.invoken.proto.Effects.Effect value) {
        if (effectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffectIsMutable();
          effect_.add(index, value);
          onChanged();
        } else {
          effectBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder addEffect(
          com.eldritch.invoken.proto.Effects.Effect.Builder builderForValue) {
        if (effectBuilder_ == null) {
          ensureEffectIsMutable();
          effect_.add(builderForValue.build());
          onChanged();
        } else {
          effectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder addEffect(
          int index, com.eldritch.invoken.proto.Effects.Effect.Builder builderForValue) {
        if (effectBuilder_ == null) {
          ensureEffectIsMutable();
          effect_.add(index, builderForValue.build());
          onChanged();
        } else {
          effectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder addAllEffect(
          java.lang.Iterable<? extends com.eldritch.invoken.proto.Effects.Effect> values) {
        if (effectBuilder_ == null) {
          ensureEffectIsMutable();
          super.addAll(values, effect_);
          onChanged();
        } else {
          effectBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder clearEffect() {
        if (effectBuilder_ == null) {
          effect_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          effectBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public Builder removeEffect(int index) {
        if (effectBuilder_ == null) {
          ensureEffectIsMutable();
          effect_.remove(index);
          onChanged();
        } else {
          effectBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public com.eldritch.invoken.proto.Effects.Effect.Builder getEffectBuilder(
          int index) {
        return getEffectFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public com.eldritch.invoken.proto.Effects.EffectOrBuilder getEffectOrBuilder(
          int index) {
        if (effectBuilder_ == null) {
          return effect_.get(index);  } else {
          return effectBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public java.util.List<? extends com.eldritch.invoken.proto.Effects.EffectOrBuilder> 
           getEffectOrBuilderList() {
        if (effectBuilder_ != null) {
          return effectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(effect_);
        }
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public com.eldritch.invoken.proto.Effects.Effect.Builder addEffectBuilder() {
        return getEffectFieldBuilder().addBuilder(
            com.eldritch.invoken.proto.Effects.Effect.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public com.eldritch.invoken.proto.Effects.Effect.Builder addEffectBuilder(
          int index) {
        return getEffectFieldBuilder().addBuilder(
            index, com.eldritch.invoken.proto.Effects.Effect.getDefaultInstance());
      }
      /**
       * <code>repeated .scifirpg.Effect effect = 8;</code>
       */
      public java.util.List<com.eldritch.invoken.proto.Effects.Effect.Builder> 
           getEffectBuilderList() {
        return getEffectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.eldritch.invoken.proto.Effects.Effect, com.eldritch.invoken.proto.Effects.Effect.Builder, com.eldritch.invoken.proto.Effects.EffectOrBuilder> 
          getEffectFieldBuilder() {
        if (effectBuilder_ == null) {
          effectBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.eldritch.invoken.proto.Effects.Effect, com.eldritch.invoken.proto.Effects.Effect.Builder, com.eldritch.invoken.proto.Effects.EffectOrBuilder>(
                  effect_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          effect_ = null;
        }
        return effectBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:scifirpg.Augmentation)
    }

    static {
      defaultInstance = new Augmentation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scifirpg.Augmentation)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_Augmentation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_Augmentation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scifirpg_Augmentation_Requirement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scifirpg_Augmentation_Requirement_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/com/eldritch/scifirpg/proto/augmentati" +
      "ons.proto\022\010scifirpg\032-com/eldritch/scifir" +
      "pg/proto/disciplines.proto\032)com/eldritch" +
      "/scifirpg/proto/effects.proto\032/com/eldri" +
      "tch/scifirpg/proto/prerequisites.proto\"\235" +
      "\003\n\014Augmentation\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \002(" +
      "\t\022\023\n\013description\030\003 \002(\t\022\r\n\005value\030\004 \002(\005\022)\n" +
      "\004type\030\005 \002(\0162\033.scifirpg.Augmentation.Type" +
      "\022\022\n\nsubtype_id\030\006 \001(\005\0227\n\013requirement\030\007 \003(" +
      "\0132\".scifirpg.Augmentation.Requirement\022 \n",
      "\006effect\030\010 \003(\0132\020.scifirpg.Effect\032U\n\013Requi" +
      "rement\022(\n\ndiscipline\030\001 \002(\0162\024.scifirpg.Di" +
      "scipline\022\r\n\005value\030\002 \002(\005\022\r\n\005slots\030\003 \002(\005\"^" +
      "\n\004Type\022\n\n\006ATTACK\020\000\022\013\n\007DECEIVE\020\001\022\013\n\007EXECU" +
      "TE\020\002\022\014\n\010DIALOGUE\020\003\022\013\n\007COUNTER\020\004\022\010\n\004TRAP\020" +
      "\005\022\013\n\007PASSIVE\020\006B\035\n\033com.eldritch.scifirpg." +
      "proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_scifirpg_Augmentation_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_scifirpg_Augmentation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_Augmentation_descriptor,
              new java.lang.String[] { "Id", "Name", "Description", "Value", "Type", "SubtypeId", "Requirement", "Effect", });
          internal_static_scifirpg_Augmentation_Requirement_descriptor =
            internal_static_scifirpg_Augmentation_descriptor.getNestedTypes().get(0);
          internal_static_scifirpg_Augmentation_Requirement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scifirpg_Augmentation_Requirement_descriptor,
              new java.lang.String[] { "Discipline", "Value", "Slots", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.eldritch.invoken.proto.Disciplines.getDescriptor(),
          com.eldritch.invoken.proto.Effects.getDescriptor(),
          com.eldritch.invoken.proto.Prerequisites.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
