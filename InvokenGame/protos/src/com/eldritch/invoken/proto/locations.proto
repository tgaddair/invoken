syntax = "proto2";

package scifirpg;
option java_package = "com.eldritch.invoken.proto";

import "com/eldritch/invoken/proto/actors.proto";
import "com/eldritch/invoken/proto/prerequisites.proto";
import "com/eldritch/invoken/proto/outcomes.proto";

message Location {
	required string id = 1;  // unique key
	required string name = 2;
	repeated Encounter encounter = 3;
	optional string faction_id = 5;  // access restricted to this faction
	optional int32 min_rank = 6;  // min rank allowed in area
	optional Light light = 7;
	optional Biome biome = 8 [default = INDUSTRY];
	repeated string room_id = 9;

	// DEPRECATED
	optional int32 parend_id_DEPRECATED = 4;
}

message Room {
	message Furniture {
		enum Type {
			ATLAS = 1;  // check the tile atlas
			TMX = 2;  // Tiled TMX file
			ACTIVATOR = 3;  // hardcoded
		}

		optional string id = 1;
		optional Type type = 2;
	}

	enum Size {
		SMALL = 0;
		MEDIUM = 1;
		LARGE = 2;
	}

	optional string id = 1;
	repeated Furniture furniture = 2;
	optional Size size = 3;
}

enum Biome {
	INDUSTRY = 0;
	GRIME = 1;
}

message Light {
	optional int32 r = 1;
	optional int32 g = 2;
	optional int32 b = 3;
	optional float intensity = 4;
}

message Encounter {
	enum Type {
		STATIC = 0;
		DECISION = 1;
		ACTOR = 2;
		REGION = 3;
	}

	message StaticParams {
		required string description = 1;
		repeated Outcome outcome = 2;
		optional bool rest = 3 [default = false]; // allows you to save progress, heal, stage augs
	}

	message DecisionParams {
		required DialogueTree decision_tree = 1;
	}

	message ActorParams {
		message ActorScenario {
			required string actor_id = 1;

			// Standard effects are invoked when a player kills an actor:
			//   - Gain inventory items
			//   - Gain experience proportional to their stats
			//   - Faction reputation mod inversely proportional to their standing
			// Additionally, we can set specific triggers in the encounter, like setting
			// the quest stage forward.
			repeated Outcome on_death = 2;

			// Override dialogue from base actor if present and passes prereqs
			optional DialogueTree dialogue = 3;

			// This encounter cannot occur without this actor
			optional bool essential = 4 [default = false];

			// The player cannot proceed on to the next encounter unless this player is dead.
			// Other ways to proceed include fleeing (sneaking) and teleport/set_successor
			// dialogue outcomes.
			optional bool blocking = 5 [default = false];

			optional bool alive = 8 [default = true];

			optional int32 min = 6 [default = 1];
			optional int32 max = 7 [default = 1];
		}

		required string description = 1;

		// First actor is the one you talk to initially
		repeated ActorScenario actor_scenario = 2;

		// Flee attempts are made against all actors collectively, so there is only one outcome
		// for all actors.
		repeated Outcome on_flee = 3;
		optional bool no_detect = 4 [default = false]; // disable detecting actor
		optional bool no_flee = 5 [default = false]; // disable fleeing
	}

	message RegionParams {
		message Cell {
			required string location_id = 1;

			// Defines the ordinal position in the grid going right-down starting at 0 (upper left).
			// Any missing entries will be filled with a blank cell.
			optional int32 position = 2;

			// Some cells will only be visible if certain prereqs are met.
			repeated Prerequisite prereq = 3;
		}

		optional int32 row_length = 1; // defines the number of columns in the grid
		repeated Cell cell = 2;
	}

	optional string id = 1; // unique key
	required string title = 2;
	required Type type = 3;

	// For non-negatives, higher weight -> higher prob
	// For negatives, lower weight -> lower prob, and take the first that meets our prereqs
	required double weight = 4 [default = 1.0];
	required bool unique = 5 [default = false];

	repeated Prerequisite prereq = 6;
	optional string successor_id = 12; // bypass selection process and jump right to this encounter
	optional bool return = 7 [default = false]; // allows you to return to the previous location

	// Parameters specific to encounter type
	optional StaticParams static_params = 8;
	optional DecisionParams decision_params = 9;
	optional ActorParams actor_params = 10;
	optional RegionParams region_params = 11;
}
